(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const I of document.querySelectorAll('link[rel="modulepreload"]'))l(I);new MutationObserver(I=>{for(const ee of I)if(ee.type==="childList")for(const pe of ee.addedNodes)pe.tagName==="LINK"&&pe.rel==="modulepreload"&&l(pe)}).observe(document,{childList:!0,subtree:!0});function d(I){const ee={};return I.integrity&&(ee.integrity=I.integrity),I.referrerPolicy&&(ee.referrerPolicy=I.referrerPolicy),I.crossOrigin==="use-credentials"?ee.credentials="include":I.crossOrigin==="anonymous"?ee.credentials="omit":ee.credentials="same-origin",ee}function l(I){if(I.ep)return;I.ep=!0;const ee=d(I);fetch(I.href,ee)}})();function Bt(O){return O&&O.__esModule&&Object.prototype.hasOwnProperty.call(O,"default")?O.default:O}var Sl={exports:{}},ga={},Ll={exports:{}},w={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var bt;function Uu(){if(bt)return w;bt=1;var O=Symbol.for("react.element"),s=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),l=Symbol.for("react.strict_mode"),I=Symbol.for("react.profiler"),ee=Symbol.for("react.provider"),pe=Symbol.for("react.context"),fe=Symbol.for("react.forward_ref"),K=Symbol.for("react.suspense"),Te=Symbol.for("react.memo"),Ce=Symbol.for("react.lazy"),le=Symbol.iterator;function ae(x){return x===null||typeof x!="object"?null:(x=le&&x[le]||x["@@iterator"],typeof x=="function"?x:null)}var We={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},Xe=Object.assign,se={};function Q(x,g,P){this.props=x,this.context=g,this.refs=se,this.updater=P||We}Q.prototype.isReactComponent={},Q.prototype.setState=function(x,g){if(typeof x!="object"&&typeof x!="function"&&x!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,x,g,"setState")},Q.prototype.forceUpdate=function(x){this.updater.enqueueForceUpdate(this,x,"forceUpdate")};function Er(){}Er.prototype=Q.prototype;function jr(x,g,P){this.props=x,this.context=g,this.refs=se,this.updater=P||We}var nr=jr.prototype=new Er;nr.constructor=jr,Xe(nr,Q.prototype),nr.isPureReactComponent=!0;var Ae=Array.isArray,ar=Object.prototype.hasOwnProperty,De={current:null},Me={key:!0,ref:!0,__self:!0,__source:!0};function Ke(x,g,P){var G,k={},Z=null,H=null;if(g!=null)for(G in g.ref!==void 0&&(H=g.ref),g.key!==void 0&&(Z=""+g.key),g)ar.call(g,G)&&!Me.hasOwnProperty(G)&&(k[G]=g[G]);var $=arguments.length-2;if($===1)k.children=P;else if(1<$){for(var W=Array($),Ue=0;Ue<$;Ue++)W[Ue]=arguments[Ue+2];k.children=W}if(x&&x.defaultProps)for(G in $=x.defaultProps,$)k[G]===void 0&&(k[G]=$[G]);return{$$typeof:O,type:x,key:Z,ref:H,props:k,_owner:De.current}}function Dr(x,g){return{$$typeof:O,type:x.type,key:g,ref:x.ref,props:x.props,_owner:x._owner}}function gr(x){return typeof x=="object"&&x!==null&&x.$$typeof===O}function Qr(x){var g={"=":"=0",":":"=2"};return"$"+x.replace(/[=:]/g,function(P){return g[P]})}var xr=/\/+/g;function we(x,g){return typeof x=="object"&&x!==null&&x.key!=null?Qr(""+x.key):g.toString(36)}function sr(x,g,P,G,k){var Z=typeof x;(Z==="undefined"||Z==="boolean")&&(x=null);var H=!1;if(x===null)H=!0;else switch(Z){case"string":case"number":H=!0;break;case"object":switch(x.$$typeof){case O:case s:H=!0}}if(H)return H=x,k=k(H),x=G===""?"."+we(H,0):G,Ae(k)?(P="",x!=null&&(P=x.replace(xr,"$&/")+"/"),sr(k,g,P,"",function(Ue){return Ue})):k!=null&&(gr(k)&&(k=Dr(k,P+(!k.key||H&&H.key===k.key?"":(""+k.key).replace(xr,"$&/")+"/")+x)),g.push(k)),1;if(H=0,G=G===""?".":G+":",Ae(x))for(var $=0;$<x.length;$++){Z=x[$];var W=G+we(Z,$);H+=sr(Z,g,P,W,k)}else if(W=ae(x),typeof W=="function")for(x=W.call(x),$=0;!(Z=x.next()).done;)Z=Z.value,W=G+we(Z,$++),H+=sr(Z,g,P,W,k);else if(Z==="object")throw g=String(x),Error("Objects are not valid as a React child (found: "+(g==="[object Object]"?"object with keys {"+Object.keys(x).join(", ")+"}":g)+"). If you meant to render a collection of children, use an array instead.");return H}function mr(x,g,P){if(x==null)return x;var G=[],k=0;return sr(x,G,"","",function(Z){return g.call(P,Z,k++)}),G}function Re(x){if(x._status===-1){var g=x._result;g=g(),g.then(function(P){(x._status===0||x._status===-1)&&(x._status=1,x._result=P)},function(P){(x._status===0||x._status===-1)&&(x._status=2,x._result=P)}),x._status===-1&&(x._status=0,x._result=g)}if(x._status===1)return x._result.default;throw x._result}var te={current:null},N={transition:null},F={ReactCurrentDispatcher:te,ReactCurrentBatchConfig:N,ReactCurrentOwner:De};return w.Children={map:mr,forEach:function(x,g,P){mr(x,function(){g.apply(this,arguments)},P)},count:function(x){var g=0;return mr(x,function(){g++}),g},toArray:function(x){return mr(x,function(g){return g})||[]},only:function(x){if(!gr(x))throw Error("React.Children.only expected to receive a single React element child.");return x}},w.Component=Q,w.Fragment=d,w.Profiler=I,w.PureComponent=jr,w.StrictMode=l,w.Suspense=K,w.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=F,w.cloneElement=function(x,g,P){if(x==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+x+".");var G=Xe({},x.props),k=x.key,Z=x.ref,H=x._owner;if(g!=null){if(g.ref!==void 0&&(Z=g.ref,H=De.current),g.key!==void 0&&(k=""+g.key),x.type&&x.type.defaultProps)var $=x.type.defaultProps;for(W in g)ar.call(g,W)&&!Me.hasOwnProperty(W)&&(G[W]=g[W]===void 0&&$!==void 0?$[W]:g[W])}var W=arguments.length-2;if(W===1)G.children=P;else if(1<W){$=Array(W);for(var Ue=0;Ue<W;Ue++)$[Ue]=arguments[Ue+2];G.children=$}return{$$typeof:O,type:x.type,key:k,ref:Z,props:G,_owner:H}},w.createContext=function(x){return x={$$typeof:pe,_currentValue:x,_currentValue2:x,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},x.Provider={$$typeof:ee,_context:x},x.Consumer=x},w.createElement=Ke,w.createFactory=function(x){var g=Ke.bind(null,x);return g.type=x,g},w.createRef=function(){return{current:null}},w.forwardRef=function(x){return{$$typeof:fe,render:x}},w.isValidElement=gr,w.lazy=function(x){return{$$typeof:Ce,_payload:{_status:-1,_result:x},_init:Re}},w.memo=function(x,g){return{$$typeof:Te,type:x,compare:g===void 0?null:g}},w.startTransition=function(x){var g=N.transition;N.transition={};try{x()}finally{N.transition=g}},w.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},w.useCallback=function(x,g){return te.current.useCallback(x,g)},w.useContext=function(x){return te.current.useContext(x)},w.useDebugValue=function(){},w.useDeferredValue=function(x){return te.current.useDeferredValue(x)},w.useEffect=function(x,g){return te.current.useEffect(x,g)},w.useId=function(){return te.current.useId()},w.useImperativeHandle=function(x,g,P){return te.current.useImperativeHandle(x,g,P)},w.useInsertionEffect=function(x,g){return te.current.useInsertionEffect(x,g)},w.useLayoutEffect=function(x,g){return te.current.useLayoutEffect(x,g)},w.useMemo=function(x,g){return te.current.useMemo(x,g)},w.useReducer=function(x,g,P){return te.current.useReducer(x,g,P)},w.useRef=function(x){return te.current.useRef(x)},w.useState=function(x){return te.current.useState(x)},w.useSyncExternalStore=function(x,g,P){return te.current.useSyncExternalStore(x,g,P)},w.useTransition=function(){return te.current.useTransition()},w.version="18.2.0",w}var Tt;function Pl(){return Tt||(Tt=1,Ll.exports=Uu()),Ll.exports}/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Dt;function zu(){if(Dt)return ga;Dt=1;var O=Pl(),s=Symbol.for("react.element"),d=Symbol.for("react.fragment"),l=Object.prototype.hasOwnProperty,I=O.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,ee={key:!0,ref:!0,__self:!0,__source:!0};function pe(fe,K,Te){var Ce,le={},ae=null,We=null;Te!==void 0&&(ae=""+Te),K.key!==void 0&&(ae=""+K.key),K.ref!==void 0&&(We=K.ref);for(Ce in K)l.call(K,Ce)&&!ee.hasOwnProperty(Ce)&&(le[Ce]=K[Ce]);if(fe&&fe.defaultProps)for(Ce in K=fe.defaultProps,K)le[Ce]===void 0&&(le[Ce]=K[Ce]);return{$$typeof:s,type:fe,key:ae,ref:We,props:le,_owner:I.current}}return ga.Fragment=d,ga.jsx=pe,ga.jsxs=pe,ga}var Pt;function Bu(){return Pt||(Pt=1,Sl.exports=zu()),Sl.exports}var e=Bu(),Vu=Pl();const Fu=Bt(Vu);var ys={},bl={exports:{}},ke={},Tl={exports:{}},Dl={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var yt;function qu(){return yt||(yt=1,function(O){function s(N,F){var x=N.length;N.push(F);e:for(;0<x;){var g=x-1>>>1,P=N[g];if(0<I(P,F))N[g]=F,N[x]=P,x=g;else break e}}function d(N){return N.length===0?null:N[0]}function l(N){if(N.length===0)return null;var F=N[0],x=N.pop();if(x!==F){N[0]=x;e:for(var g=0,P=N.length,G=P>>>1;g<G;){var k=2*(g+1)-1,Z=N[k],H=k+1,$=N[H];if(0>I(Z,x))H<P&&0>I($,Z)?(N[g]=$,N[H]=x,g=H):(N[g]=Z,N[k]=x,g=k);else if(H<P&&0>I($,x))N[g]=$,N[H]=x,g=H;else break e}}return F}function I(N,F){var x=N.sortIndex-F.sortIndex;return x!==0?x:N.id-F.id}if(typeof performance=="object"&&typeof performance.now=="function"){var ee=performance;O.unstable_now=function(){return ee.now()}}else{var pe=Date,fe=pe.now();O.unstable_now=function(){return pe.now()-fe}}var K=[],Te=[],Ce=1,le=null,ae=3,We=!1,Xe=!1,se=!1,Q=typeof setTimeout=="function"?setTimeout:null,Er=typeof clearTimeout=="function"?clearTimeout:null,jr=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function nr(N){for(var F=d(Te);F!==null;){if(F.callback===null)l(Te);else if(F.startTime<=N)l(Te),F.sortIndex=F.expirationTime,s(K,F);else break;F=d(Te)}}function Ae(N){if(se=!1,nr(N),!Xe)if(d(K)!==null)Xe=!0,Re(ar);else{var F=d(Te);F!==null&&te(Ae,F.startTime-N)}}function ar(N,F){Xe=!1,se&&(se=!1,Er(Ke),Ke=-1),We=!0;var x=ae;try{for(nr(F),le=d(K);le!==null&&(!(le.expirationTime>F)||N&&!Qr());){var g=le.callback;if(typeof g=="function"){le.callback=null,ae=le.priorityLevel;var P=g(le.expirationTime<=F);F=O.unstable_now(),typeof P=="function"?le.callback=P:le===d(K)&&l(K),nr(F)}else l(K);le=d(K)}if(le!==null)var G=!0;else{var k=d(Te);k!==null&&te(Ae,k.startTime-F),G=!1}return G}finally{le=null,ae=x,We=!1}}var De=!1,Me=null,Ke=-1,Dr=5,gr=-1;function Qr(){return!(O.unstable_now()-gr<Dr)}function xr(){if(Me!==null){var N=O.unstable_now();gr=N;var F=!0;try{F=Me(!0,N)}finally{F?we():(De=!1,Me=null)}}else De=!1}var we;if(typeof jr=="function")we=function(){jr(xr)};else if(typeof MessageChannel<"u"){var sr=new MessageChannel,mr=sr.port2;sr.port1.onmessage=xr,we=function(){mr.postMessage(null)}}else we=function(){Q(xr,0)};function Re(N){Me=N,De||(De=!0,we())}function te(N,F){Ke=Q(function(){N(O.unstable_now())},F)}O.unstable_IdlePriority=5,O.unstable_ImmediatePriority=1,O.unstable_LowPriority=4,O.unstable_NormalPriority=3,O.unstable_Profiling=null,O.unstable_UserBlockingPriority=2,O.unstable_cancelCallback=function(N){N.callback=null},O.unstable_continueExecution=function(){Xe||We||(Xe=!0,Re(ar))},O.unstable_forceFrameRate=function(N){0>N||125<N?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):Dr=0<N?Math.floor(1e3/N):5},O.unstable_getCurrentPriorityLevel=function(){return ae},O.unstable_getFirstCallbackNode=function(){return d(K)},O.unstable_next=function(N){switch(ae){case 1:case 2:case 3:var F=3;break;default:F=ae}var x=ae;ae=F;try{return N()}finally{ae=x}},O.unstable_pauseExecution=function(){},O.unstable_requestPaint=function(){},O.unstable_runWithPriority=function(N,F){switch(N){case 1:case 2:case 3:case 4:case 5:break;default:N=3}var x=ae;ae=N;try{return F()}finally{ae=x}},O.unstable_scheduleCallback=function(N,F,x){var g=O.unstable_now();switch(typeof x=="object"&&x!==null?(x=x.delay,x=typeof x=="number"&&0<x?g+x:g):x=g,N){case 1:var P=-1;break;case 2:P=250;break;case 5:P=1073741823;break;case 4:P=1e4;break;default:P=5e3}return P=x+P,N={id:Ce++,callback:F,priorityLevel:N,startTime:x,expirationTime:P,sortIndex:-1},x>g?(N.sortIndex=x,s(Te,N),d(K)===null&&N===d(Te)&&(se?(Er(Ke),Ke=-1):se=!0,te(Ae,x-g))):(N.sortIndex=P,s(K,N),Xe||We||(Xe=!0,Re(ar))),N},O.unstable_shouldYield=Qr,O.unstable_wrapCallback=function(N){var F=ae;return function(){var x=ae;ae=F;try{return N.apply(this,arguments)}finally{ae=x}}}}(Dl)),Dl}var Mt;function ku(){return Mt||(Mt=1,Tl.exports=qu()),Tl.exports}/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Rt;function wu(){if(Rt)return ke;Rt=1;var O=Pl(),s=ku();function d(r){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+r,a=1;a<arguments.length;a++)n+="&args[]="+encodeURIComponent(arguments[a]);return"Minified React error #"+r+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var l=new Set,I={};function ee(r,n){pe(r,n),pe(r+"Capture",n)}function pe(r,n){for(I[r]=n,r=0;r<n.length;r++)l.add(n[r])}var fe=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),K=Object.prototype.hasOwnProperty,Te=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Ce={},le={};function ae(r){return K.call(le,r)?!0:K.call(Ce,r)?!1:Te.test(r)?le[r]=!0:(Ce[r]=!0,!1)}function We(r,n,a,i){if(a!==null&&a.type===0)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return i?!1:a!==null?!a.acceptsBooleans:(r=r.toLowerCase().slice(0,5),r!=="data-"&&r!=="aria-");default:return!1}}function Xe(r,n,a,i){if(n===null||typeof n>"u"||We(r,n,a,i))return!0;if(i)return!1;if(a!==null)switch(a.type){case 3:return!n;case 4:return n===!1;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}function se(r,n,a,i,o,c,t){this.acceptsBooleans=n===2||n===3||n===4,this.attributeName=i,this.attributeNamespace=o,this.mustUseProperty=a,this.propertyName=r,this.type=n,this.sanitizeURL=c,this.removeEmptyString=t}var Q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(r){Q[r]=new se(r,0,!1,r,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(r){var n=r[0];Q[n]=new se(n,1,!1,r[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(r){Q[r]=new se(r,2,!1,r.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(r){Q[r]=new se(r,2,!1,r,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(r){Q[r]=new se(r,3,!1,r.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(r){Q[r]=new se(r,3,!0,r,null,!1,!1)}),["capture","download"].forEach(function(r){Q[r]=new se(r,4,!1,r,null,!1,!1)}),["cols","rows","size","span"].forEach(function(r){Q[r]=new se(r,6,!1,r,null,!1,!1)}),["rowSpan","start"].forEach(function(r){Q[r]=new se(r,5,!1,r.toLowerCase(),null,!1,!1)});var Er=/[\-:]([a-z])/g;function jr(r){return r[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(r){var n=r.replace(Er,jr);Q[n]=new se(n,1,!1,r,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(r){var n=r.replace(Er,jr);Q[n]=new se(n,1,!1,r,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(r){var n=r.replace(Er,jr);Q[n]=new se(n,1,!1,r,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(r){Q[r]=new se(r,1,!1,r.toLowerCase(),null,!1,!1)}),Q.xlinkHref=new se("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(r){Q[r]=new se(r,1,!1,r.toLowerCase(),null,!0,!0)});function nr(r,n,a,i){var o=Q.hasOwnProperty(n)?Q[n]:null;(o!==null?o.type!==0:i||!(2<n.length)||n[0]!=="o"&&n[0]!=="O"||n[1]!=="n"&&n[1]!=="N")&&(Xe(n,a,o,i)&&(a=null),i||o===null?ae(n)&&(a===null?r.removeAttribute(n):r.setAttribute(n,""+a)):o.mustUseProperty?r[o.propertyName]=a===null?o.type===3?!1:"":a:(n=o.attributeName,i=o.attributeNamespace,a===null?r.removeAttribute(n):(o=o.type,a=o===3||o===4&&a===!0?"":""+a,i?r.setAttributeNS(i,n,a):r.setAttribute(n,a))))}var Ae=O.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,ar=Symbol.for("react.element"),De=Symbol.for("react.portal"),Me=Symbol.for("react.fragment"),Ke=Symbol.for("react.strict_mode"),Dr=Symbol.for("react.profiler"),gr=Symbol.for("react.provider"),Qr=Symbol.for("react.context"),xr=Symbol.for("react.forward_ref"),we=Symbol.for("react.suspense"),sr=Symbol.for("react.suspense_list"),mr=Symbol.for("react.memo"),Re=Symbol.for("react.lazy"),te=Symbol.for("react.offscreen"),N=Symbol.iterator;function F(r){return r===null||typeof r!="object"?null:(r=N&&r[N]||r["@@iterator"],typeof r=="function"?r:null)}var x=Object.assign,g;function P(r){if(g===void 0)try{throw Error()}catch(a){var n=a.stack.trim().match(/\n( *(at )?)/);g=n&&n[1]||""}return`
`+g+r}var G=!1;function k(r,n){if(!r||G)return"";G=!0;var a=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(n,[])}catch(f){var i=f}Reflect.construct(r,[],n)}else{try{n.call()}catch(f){i=f}r.call(n.prototype)}else{try{throw Error()}catch(f){i=f}r()}}catch(f){if(f&&i&&typeof f.stack=="string"){for(var o=f.stack.split(`
`),c=i.stack.split(`
`),t=o.length-1,u=c.length-1;1<=t&&0<=u&&o[t]!==c[u];)u--;for(;1<=t&&0<=u;t--,u--)if(o[t]!==c[u]){if(t!==1||u!==1)do if(t--,u--,0>u||o[t]!==c[u]){var j=`
`+o[t].replace(" at new "," at ");return r.displayName&&j.includes("<anonymous>")&&(j=j.replace("<anonymous>",r.displayName)),j}while(1<=t&&0<=u);break}}}finally{G=!1,Error.prepareStackTrace=a}return(r=r?r.displayName||r.name:"")?P(r):""}function Z(r){switch(r.tag){case 5:return P(r.type);case 16:return P("Lazy");case 13:return P("Suspense");case 19:return P("SuspenseList");case 0:case 2:case 15:return r=k(r.type,!1),r;case 11:return r=k(r.type.render,!1),r;case 1:return r=k(r.type,!0),r;default:return""}}function H(r){if(r==null)return null;if(typeof r=="function")return r.displayName||r.name||null;if(typeof r=="string")return r;switch(r){case Me:return"Fragment";case De:return"Portal";case Dr:return"Profiler";case Ke:return"StrictMode";case we:return"Suspense";case sr:return"SuspenseList"}if(typeof r=="object")switch(r.$$typeof){case Qr:return(r.displayName||"Context")+".Consumer";case gr:return(r._context.displayName||"Context")+".Provider";case xr:var n=r.render;return r=r.displayName,r||(r=n.displayName||n.name||"",r=r!==""?"ForwardRef("+r+")":"ForwardRef"),r;case mr:return n=r.displayName||null,n!==null?n:H(r.type)||"Memo";case Re:n=r._payload,r=r._init;try{return H(r(n))}catch{}}return null}function $(r){var n=r.type;switch(r.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return r=n.render,r=r.displayName||r.name||"",n.displayName||(r!==""?"ForwardRef("+r+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return H(n);case 8:return n===Ke?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof n=="function")return n.displayName||n.name||null;if(typeof n=="string")return n}return null}function W(r){switch(typeof r){case"boolean":case"number":case"string":case"undefined":return r;case"object":return r;default:return""}}function Ue(r){var n=r.type;return(r=r.nodeName)&&r.toLowerCase()==="input"&&(n==="checkbox"||n==="radio")}function Vt(r){var n=Ue(r)?"checked":"value",a=Object.getOwnPropertyDescriptor(r.constructor.prototype,n),i=""+r[n];if(!r.hasOwnProperty(n)&&typeof a<"u"&&typeof a.get=="function"&&typeof a.set=="function"){var o=a.get,c=a.set;return Object.defineProperty(r,n,{configurable:!0,get:function(){return o.call(this)},set:function(t){i=""+t,c.call(this,t)}}),Object.defineProperty(r,n,{enumerable:a.enumerable}),{getValue:function(){return i},setValue:function(t){i=""+t},stopTracking:function(){r._valueTracker=null,delete r[n]}}}}function va(r){r._valueTracker||(r._valueTracker=Vt(r))}function yl(r){if(!r)return!1;var n=r._valueTracker;if(!n)return!0;var a=n.getValue(),i="";return r&&(i=Ue(r)?r.checked?"true":"false":r.value),r=i,r!==a?(n.setValue(r),!0):!1}function Ca(r){if(r=r||(typeof document<"u"?document:void 0),typeof r>"u")return null;try{return r.activeElement||r.body}catch{return r.body}}function Ms(r,n){var a=n.checked;return x({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:a??r._wrapperState.initialChecked})}function Ml(r,n){var a=n.defaultValue==null?"":n.defaultValue,i=n.checked!=null?n.checked:n.defaultChecked;a=W(n.value!=null?n.value:a),r._wrapperState={initialChecked:i,initialValue:a,controlled:n.type==="checkbox"||n.type==="radio"?n.checked!=null:n.value!=null}}function Rl(r,n){n=n.checked,n!=null&&nr(r,"checked",n,!1)}function Rs(r,n){Rl(r,n);var a=W(n.value),i=n.type;if(a!=null)i==="number"?(a===0&&r.value===""||r.value!=a)&&(r.value=""+a):r.value!==""+a&&(r.value=""+a);else if(i==="submit"||i==="reset"){r.removeAttribute("value");return}n.hasOwnProperty("value")?Us(r,n.type,a):n.hasOwnProperty("defaultValue")&&Us(r,n.type,W(n.defaultValue)),n.checked==null&&n.defaultChecked!=null&&(r.defaultChecked=!!n.defaultChecked)}function Ul(r,n,a){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var i=n.type;if(!(i!=="submit"&&i!=="reset"||n.value!==void 0&&n.value!==null))return;n=""+r._wrapperState.initialValue,a||n===r.value||(r.value=n),r.defaultValue=n}a=r.name,a!==""&&(r.name=""),r.defaultChecked=!!r._wrapperState.initialChecked,a!==""&&(r.name=a)}function Us(r,n,a){(n!=="number"||Ca(r.ownerDocument)!==r)&&(a==null?r.defaultValue=""+r._wrapperState.initialValue:r.defaultValue!==""+a&&(r.defaultValue=""+a))}var zn=Array.isArray;function un(r,n,a,i){if(r=r.options,n){n={};for(var o=0;o<a.length;o++)n["$"+a[o]]=!0;for(a=0;a<r.length;a++)o=n.hasOwnProperty("$"+r[a].value),r[a].selected!==o&&(r[a].selected=o),o&&i&&(r[a].defaultSelected=!0)}else{for(a=""+W(a),n=null,o=0;o<r.length;o++){if(r[o].value===a){r[o].selected=!0,i&&(r[o].defaultSelected=!0);return}n!==null||r[o].disabled||(n=r[o])}n!==null&&(n.selected=!0)}}function zs(r,n){if(n.dangerouslySetInnerHTML!=null)throw Error(d(91));return x({},n,{value:void 0,defaultValue:void 0,children:""+r._wrapperState.initialValue})}function zl(r,n){var a=n.value;if(a==null){if(a=n.children,n=n.defaultValue,a!=null){if(n!=null)throw Error(d(92));if(zn(a)){if(1<a.length)throw Error(d(93));a=a[0]}n=a}n==null&&(n=""),a=n}r._wrapperState={initialValue:W(a)}}function Bl(r,n){var a=W(n.value),i=W(n.defaultValue);a!=null&&(a=""+a,a!==r.value&&(r.value=a),n.defaultValue==null&&r.defaultValue!==a&&(r.defaultValue=a)),i!=null&&(r.defaultValue=""+i)}function Vl(r){var n=r.textContent;n===r._wrapperState.initialValue&&n!==""&&n!==null&&(r.value=n)}function Fl(r){switch(r){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Bs(r,n){return r==null||r==="http://www.w3.org/1999/xhtml"?Fl(n):r==="http://www.w3.org/2000/svg"&&n==="foreignObject"?"http://www.w3.org/1999/xhtml":r}var Aa,ql=function(r){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(n,a,i,o){MSApp.execUnsafeLocalFunction(function(){return r(n,a,i,o)})}:r}(function(r,n){if(r.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in r)r.innerHTML=n;else{for(Aa=Aa||document.createElement("div"),Aa.innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=Aa.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;n.firstChild;)r.appendChild(n.firstChild)}});function Bn(r,n){if(n){var a=r.firstChild;if(a&&a===r.lastChild&&a.nodeType===3){a.nodeValue=n;return}}r.textContent=n}var Vn={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Ft=["Webkit","ms","Moz","O"];Object.keys(Vn).forEach(function(r){Ft.forEach(function(n){n=n+r.charAt(0).toUpperCase()+r.substring(1),Vn[n]=Vn[r]})});function kl(r,n,a){return n==null||typeof n=="boolean"||n===""?"":a||typeof n!="number"||n===0||Vn.hasOwnProperty(r)&&Vn[r]?(""+n).trim():n+"px"}function wl(r,n){r=r.style;for(var a in n)if(n.hasOwnProperty(a)){var i=a.indexOf("--")===0,o=kl(a,n[a],i);a==="float"&&(a="cssFloat"),i?r.setProperty(a,o):r[a]=o}}var qt=x({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Vs(r,n){if(n){if(qt[r]&&(n.children!=null||n.dangerouslySetInnerHTML!=null))throw Error(d(137,r));if(n.dangerouslySetInnerHTML!=null){if(n.children!=null)throw Error(d(60));if(typeof n.dangerouslySetInnerHTML!="object"||!("__html"in n.dangerouslySetInnerHTML))throw Error(d(61))}if(n.style!=null&&typeof n.style!="object")throw Error(d(62))}}function Fs(r,n){if(r.indexOf("-")===-1)return typeof n.is=="string";switch(r){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var qs=null;function ks(r){return r=r.target||r.srcElement||window,r.correspondingUseElement&&(r=r.correspondingUseElement),r.nodeType===3?r.parentNode:r}var ws=null,jn=null,xn=null;function Gl(r){if(r=la(r)){if(typeof ws!="function")throw Error(d(280));var n=r.stateNode;n&&(n=Wa(n),ws(r.stateNode,r.type,n))}}function Yl(r){jn?xn?xn.push(r):xn=[r]:jn=r}function _l(){if(jn){var r=jn,n=xn;if(xn=jn=null,Gl(r),n)for(r=0;r<n.length;r++)Gl(n[r])}}function Hl(r,n){return r(n)}function Wl(){}var Gs=!1;function Xl(r,n,a){if(Gs)return r(n,a);Gs=!0;try{return Hl(r,n,a)}finally{Gs=!1,(jn!==null||xn!==null)&&(Wl(),_l())}}function Fn(r,n){var a=r.stateNode;if(a===null)return null;var i=Wa(a);if(i===null)return null;a=i[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(i=!i.disabled)||(r=r.type,i=!(r==="button"||r==="input"||r==="select"||r==="textarea")),r=!i;break e;default:r=!1}if(r)return null;if(a&&typeof a!="function")throw Error(d(231,n,typeof a));return a}var Ys=!1;if(fe)try{var qn={};Object.defineProperty(qn,"passive",{get:function(){Ys=!0}}),window.addEventListener("test",qn,qn),window.removeEventListener("test",qn,qn)}catch{Ys=!1}function kt(r,n,a,i,o,c,t,u,j){var f=Array.prototype.slice.call(arguments,3);try{n.apply(a,f)}catch(v){this.onError(v)}}var kn=!1,Na=null,Sa=!1,_s=null,wt={onError:function(r){kn=!0,Na=r}};function Gt(r,n,a,i,o,c,t,u,j){kn=!1,Na=null,kt.apply(wt,arguments)}function Yt(r,n,a,i,o,c,t,u,j){if(Gt.apply(this,arguments),kn){if(kn){var f=Na;kn=!1,Na=null}else throw Error(d(198));Sa||(Sa=!0,_s=f)}}function $r(r){var n=r,a=r;if(r.alternate)for(;n.return;)n=n.return;else{r=n;do n=r,(n.flags&4098)!==0&&(a=n.return),r=n.return;while(r)}return n.tag===3?a:null}function Kl(r){if(r.tag===13){var n=r.memoizedState;if(n===null&&(r=r.alternate,r!==null&&(n=r.memoizedState)),n!==null)return n.dehydrated}return null}function Ql(r){if($r(r)!==r)throw Error(d(188))}function _t(r){var n=r.alternate;if(!n){if(n=$r(r),n===null)throw Error(d(188));return n!==r?null:r}for(var a=r,i=n;;){var o=a.return;if(o===null)break;var c=o.alternate;if(c===null){if(i=o.return,i!==null){a=i;continue}break}if(o.child===c.child){for(c=o.child;c;){if(c===a)return Ql(o),r;if(c===i)return Ql(o),n;c=c.sibling}throw Error(d(188))}if(a.return!==i.return)a=o,i=c;else{for(var t=!1,u=o.child;u;){if(u===a){t=!0,a=o,i=c;break}if(u===i){t=!0,i=o,a=c;break}u=u.sibling}if(!t){for(u=c.child;u;){if(u===a){t=!0,a=c,i=o;break}if(u===i){t=!0,i=c,a=o;break}u=u.sibling}if(!t)throw Error(d(189))}}if(a.alternate!==i)throw Error(d(190))}if(a.tag!==3)throw Error(d(188));return a.stateNode.current===a?r:n}function $l(r){return r=_t(r),r!==null?Zl(r):null}function Zl(r){if(r.tag===5||r.tag===6)return r;for(r=r.child;r!==null;){var n=Zl(r);if(n!==null)return n;r=r.sibling}return null}var Jl=s.unstable_scheduleCallback,eo=s.unstable_cancelCallback,Ht=s.unstable_shouldYield,Wt=s.unstable_requestPaint,ue=s.unstable_now,Xt=s.unstable_getCurrentPriorityLevel,Hs=s.unstable_ImmediatePriority,ro=s.unstable_UserBlockingPriority,La=s.unstable_NormalPriority,Kt=s.unstable_LowPriority,no=s.unstable_IdlePriority,ba=null,hr=null;function Qt(r){if(hr&&typeof hr.onCommitFiberRoot=="function")try{hr.onCommitFiberRoot(ba,r,void 0,(r.current.flags&128)===128)}catch{}}var ir=Math.clz32?Math.clz32:Jt,$t=Math.log,Zt=Math.LN2;function Jt(r){return r>>>=0,r===0?32:31-($t(r)/Zt|0)|0}var Ta=64,Da=4194304;function wn(r){switch(r&-r){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return r&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return r&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return r}}function Pa(r,n){var a=r.pendingLanes;if(a===0)return 0;var i=0,o=r.suspendedLanes,c=r.pingedLanes,t=a&268435455;if(t!==0){var u=t&~o;u!==0?i=wn(u):(c&=t,c!==0&&(i=wn(c)))}else t=a&~o,t!==0?i=wn(t):c!==0&&(i=wn(c));if(i===0)return 0;if(n!==0&&n!==i&&(n&o)===0&&(o=i&-i,c=n&-n,o>=c||o===16&&(c&4194240)!==0))return n;if((i&4)!==0&&(i|=a&16),n=r.entangledLanes,n!==0)for(r=r.entanglements,n&=i;0<n;)a=31-ir(n),o=1<<a,i|=r[a],n&=~o;return i}function ed(r,n){switch(r){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function rd(r,n){for(var a=r.suspendedLanes,i=r.pingedLanes,o=r.expirationTimes,c=r.pendingLanes;0<c;){var t=31-ir(c),u=1<<t,j=o[t];j===-1?((u&a)===0||(u&i)!==0)&&(o[t]=ed(u,n)):j<=n&&(r.expiredLanes|=u),c&=~u}}function Ws(r){return r=r.pendingLanes&-1073741825,r!==0?r:r&1073741824?1073741824:0}function ao(){var r=Ta;return Ta<<=1,(Ta&4194240)===0&&(Ta=64),r}function Xs(r){for(var n=[],a=0;31>a;a++)n.push(r);return n}function Gn(r,n,a){r.pendingLanes|=n,n!==536870912&&(r.suspendedLanes=0,r.pingedLanes=0),r=r.eventTimes,n=31-ir(n),r[n]=a}function nd(r,n){var a=r.pendingLanes&~n;r.pendingLanes=n,r.suspendedLanes=0,r.pingedLanes=0,r.expiredLanes&=n,r.mutableReadLanes&=n,r.entangledLanes&=n,n=r.entanglements;var i=r.eventTimes;for(r=r.expirationTimes;0<a;){var o=31-ir(a),c=1<<o;n[o]=0,i[o]=-1,r[o]=-1,a&=~c}}function Ks(r,n){var a=r.entangledLanes|=n;for(r=r.entanglements;a;){var i=31-ir(a),o=1<<i;o&n|r[i]&n&&(r[i]|=n),a&=~o}}var X=0;function so(r){return r&=-r,1<r?4<r?(r&268435455)!==0?16:536870912:4:1}var io,Qs,lo,oo,co,$s=!1,ya=[],Pr=null,yr=null,Mr=null,Yn=new Map,_n=new Map,Rr=[],ad="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function to(r,n){switch(r){case"focusin":case"focusout":Pr=null;break;case"dragenter":case"dragleave":yr=null;break;case"mouseover":case"mouseout":Mr=null;break;case"pointerover":case"pointerout":Yn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":_n.delete(n.pointerId)}}function Hn(r,n,a,i,o,c){return r===null||r.nativeEvent!==c?(r={blockedOn:n,domEventName:a,eventSystemFlags:i,nativeEvent:c,targetContainers:[o]},n!==null&&(n=la(n),n!==null&&Qs(n)),r):(r.eventSystemFlags|=i,n=r.targetContainers,o!==null&&n.indexOf(o)===-1&&n.push(o),r)}function sd(r,n,a,i,o){switch(n){case"focusin":return Pr=Hn(Pr,r,n,a,i,o),!0;case"dragenter":return yr=Hn(yr,r,n,a,i,o),!0;case"mouseover":return Mr=Hn(Mr,r,n,a,i,o),!0;case"pointerover":var c=o.pointerId;return Yn.set(c,Hn(Yn.get(c)||null,r,n,a,i,o)),!0;case"gotpointercapture":return c=o.pointerId,_n.set(c,Hn(_n.get(c)||null,r,n,a,i,o)),!0}return!1}function uo(r){var n=Zr(r.target);if(n!==null){var a=$r(n);if(a!==null){if(n=a.tag,n===13){if(n=Kl(a),n!==null){r.blockedOn=n,co(r.priority,function(){lo(a)});return}}else if(n===3&&a.stateNode.current.memoizedState.isDehydrated){r.blockedOn=a.tag===3?a.stateNode.containerInfo:null;return}}}r.blockedOn=null}function Ma(r){if(r.blockedOn!==null)return!1;for(var n=r.targetContainers;0<n.length;){var a=Js(r.domEventName,r.eventSystemFlags,n[0],r.nativeEvent);if(a===null){a=r.nativeEvent;var i=new a.constructor(a.type,a);qs=i,a.target.dispatchEvent(i),qs=null}else return n=la(a),n!==null&&Qs(n),r.blockedOn=a,!1;n.shift()}return!0}function jo(r,n,a){Ma(r)&&a.delete(n)}function id(){$s=!1,Pr!==null&&Ma(Pr)&&(Pr=null),yr!==null&&Ma(yr)&&(yr=null),Mr!==null&&Ma(Mr)&&(Mr=null),Yn.forEach(jo),_n.forEach(jo)}function Wn(r,n){r.blockedOn===n&&(r.blockedOn=null,$s||($s=!0,s.unstable_scheduleCallback(s.unstable_NormalPriority,id)))}function Xn(r){function n(o){return Wn(o,r)}if(0<ya.length){Wn(ya[0],r);for(var a=1;a<ya.length;a++){var i=ya[a];i.blockedOn===r&&(i.blockedOn=null)}}for(Pr!==null&&Wn(Pr,r),yr!==null&&Wn(yr,r),Mr!==null&&Wn(Mr,r),Yn.forEach(n),_n.forEach(n),a=0;a<Rr.length;a++)i=Rr[a],i.blockedOn===r&&(i.blockedOn=null);for(;0<Rr.length&&(a=Rr[0],a.blockedOn===null);)uo(a),a.blockedOn===null&&Rr.shift()}var mn=Ae.ReactCurrentBatchConfig,Ra=!0;function ld(r,n,a,i){var o=X,c=mn.transition;mn.transition=null;try{X=1,Zs(r,n,a,i)}finally{X=o,mn.transition=c}}function od(r,n,a,i){var o=X,c=mn.transition;mn.transition=null;try{X=4,Zs(r,n,a,i)}finally{X=o,mn.transition=c}}function Zs(r,n,a,i){if(Ra){var o=Js(r,n,a,i);if(o===null)pi(r,n,i,Ua,a),to(r,i);else if(sd(o,r,n,a,i))i.stopPropagation();else if(to(r,i),n&4&&-1<ad.indexOf(r)){for(;o!==null;){var c=la(o);if(c!==null&&io(c),c=Js(r,n,a,i),c===null&&pi(r,n,i,Ua,a),c===o)break;o=c}o!==null&&i.stopPropagation()}else pi(r,n,i,null,a)}}var Ua=null;function Js(r,n,a,i){if(Ua=null,r=ks(i),r=Zr(r),r!==null)if(n=$r(r),n===null)r=null;else if(a=n.tag,a===13){if(r=Kl(n),r!==null)return r;r=null}else if(a===3){if(n.stateNode.current.memoizedState.isDehydrated)return n.tag===3?n.stateNode.containerInfo:null;r=null}else n!==r&&(r=null);return Ua=r,null}function xo(r){switch(r){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Xt()){case Hs:return 1;case ro:return 4;case La:case Kt:return 16;case no:return 536870912;default:return 16}default:return 16}}var Ur=null,ei=null,za=null;function mo(){if(za)return za;var r,n=ei,a=n.length,i,o="value"in Ur?Ur.value:Ur.textContent,c=o.length;for(r=0;r<a&&n[r]===o[r];r++);var t=a-r;for(i=1;i<=t&&n[a-i]===o[c-i];i++);return za=o.slice(r,1<i?1-i:void 0)}function Ba(r){var n=r.keyCode;return"charCode"in r?(r=r.charCode,r===0&&n===13&&(r=13)):r=n,r===10&&(r=13),32<=r||r===13?r:0}function Va(){return!0}function ho(){return!1}function Ge(r){function n(a,i,o,c,t){this._reactName=a,this._targetInst=o,this.type=i,this.nativeEvent=c,this.target=t,this.currentTarget=null;for(var u in r)r.hasOwnProperty(u)&&(a=r[u],this[u]=a?a(c):c[u]);return this.isDefaultPrevented=(c.defaultPrevented!=null?c.defaultPrevented:c.returnValue===!1)?Va:ho,this.isPropagationStopped=ho,this}return x(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():typeof a.returnValue!="unknown"&&(a.returnValue=!1),this.isDefaultPrevented=Va)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():typeof a.cancelBubble!="unknown"&&(a.cancelBubble=!0),this.isPropagationStopped=Va)},persist:function(){},isPersistent:Va}),n}var hn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(r){return r.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ri=Ge(hn),Kn=x({},hn,{view:0,detail:0}),cd=Ge(Kn),ni,ai,Qn,Fa=x({},Kn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:ii,button:0,buttons:0,relatedTarget:function(r){return r.relatedTarget===void 0?r.fromElement===r.srcElement?r.toElement:r.fromElement:r.relatedTarget},movementX:function(r){return"movementX"in r?r.movementX:(r!==Qn&&(Qn&&r.type==="mousemove"?(ni=r.screenX-Qn.screenX,ai=r.screenY-Qn.screenY):ai=ni=0,Qn=r),ni)},movementY:function(r){return"movementY"in r?r.movementY:ai}}),po=Ge(Fa),td=x({},Fa,{dataTransfer:0}),dd=Ge(td),ud=x({},Kn,{relatedTarget:0}),si=Ge(ud),jd=x({},hn,{animationName:0,elapsedTime:0,pseudoElement:0}),xd=Ge(jd),md=x({},hn,{clipboardData:function(r){return"clipboardData"in r?r.clipboardData:window.clipboardData}}),hd=Ge(md),pd=x({},hn,{data:0}),fo=Ge(pd),fd={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Od={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Id={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Ed(r){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(r):(r=Id[r])?!!n[r]:!1}function ii(){return Ed}var gd=x({},Kn,{key:function(r){if(r.key){var n=fd[r.key]||r.key;if(n!=="Unidentified")return n}return r.type==="keypress"?(r=Ba(r),r===13?"Enter":String.fromCharCode(r)):r.type==="keydown"||r.type==="keyup"?Od[r.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:ii,charCode:function(r){return r.type==="keypress"?Ba(r):0},keyCode:function(r){return r.type==="keydown"||r.type==="keyup"?r.keyCode:0},which:function(r){return r.type==="keypress"?Ba(r):r.type==="keydown"||r.type==="keyup"?r.keyCode:0}}),vd=Ge(gd),Cd=x({},Fa,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Oo=Ge(Cd),Ad=x({},Kn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:ii}),Nd=Ge(Ad),Sd=x({},hn,{propertyName:0,elapsedTime:0,pseudoElement:0}),Ld=Ge(Sd),bd=x({},Fa,{deltaX:function(r){return"deltaX"in r?r.deltaX:"wheelDeltaX"in r?-r.wheelDeltaX:0},deltaY:function(r){return"deltaY"in r?r.deltaY:"wheelDeltaY"in r?-r.wheelDeltaY:"wheelDelta"in r?-r.wheelDelta:0},deltaZ:0,deltaMode:0}),Td=Ge(bd),Dd=[9,13,27,32],li=fe&&"CompositionEvent"in window,$n=null;fe&&"documentMode"in document&&($n=document.documentMode);var Pd=fe&&"TextEvent"in window&&!$n,Io=fe&&(!li||$n&&8<$n&&11>=$n),Eo=" ",go=!1;function vo(r,n){switch(r){case"keyup":return Dd.indexOf(n.keyCode)!==-1;case"keydown":return n.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Co(r){return r=r.detail,typeof r=="object"&&"data"in r?r.data:null}var pn=!1;function yd(r,n){switch(r){case"compositionend":return Co(n);case"keypress":return n.which!==32?null:(go=!0,Eo);case"textInput":return r=n.data,r===Eo&&go?null:r;default:return null}}function Md(r,n){if(pn)return r==="compositionend"||!li&&vo(r,n)?(r=mo(),za=ei=Ur=null,pn=!1,r):null;switch(r){case"paste":return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return Io&&n.locale!=="ko"?null:n.data;default:return null}}var Rd={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ao(r){var n=r&&r.nodeName&&r.nodeName.toLowerCase();return n==="input"?!!Rd[r.type]:n==="textarea"}function No(r,n,a,i){Yl(i),n=Ya(n,"onChange"),0<n.length&&(a=new ri("onChange","change",null,a,i),r.push({event:a,listeners:n}))}var Zn=null,Jn=null;function Ud(r){Go(r,0)}function qa(r){var n=gn(r);if(yl(n))return r}function zd(r,n){if(r==="change")return n}var So=!1;if(fe){var oi;if(fe){var ci="oninput"in document;if(!ci){var Lo=document.createElement("div");Lo.setAttribute("oninput","return;"),ci=typeof Lo.oninput=="function"}oi=ci}else oi=!1;So=oi&&(!document.documentMode||9<document.documentMode)}function bo(){Zn&&(Zn.detachEvent("onpropertychange",To),Jn=Zn=null)}function To(r){if(r.propertyName==="value"&&qa(Jn)){var n=[];No(n,Jn,r,ks(r)),Xl(Ud,n)}}function Bd(r,n,a){r==="focusin"?(bo(),Zn=n,Jn=a,Zn.attachEvent("onpropertychange",To)):r==="focusout"&&bo()}function Vd(r){if(r==="selectionchange"||r==="keyup"||r==="keydown")return qa(Jn)}function Fd(r,n){if(r==="click")return qa(n)}function qd(r,n){if(r==="input"||r==="change")return qa(n)}function kd(r,n){return r===n&&(r!==0||1/r===1/n)||r!==r&&n!==n}var lr=typeof Object.is=="function"?Object.is:kd;function ea(r,n){if(lr(r,n))return!0;if(typeof r!="object"||r===null||typeof n!="object"||n===null)return!1;var a=Object.keys(r),i=Object.keys(n);if(a.length!==i.length)return!1;for(i=0;i<a.length;i++){var o=a[i];if(!K.call(n,o)||!lr(r[o],n[o]))return!1}return!0}function Do(r){for(;r&&r.firstChild;)r=r.firstChild;return r}function Po(r,n){var a=Do(r);r=0;for(var i;a;){if(a.nodeType===3){if(i=r+a.textContent.length,r<=n&&i>=n)return{node:a,offset:n-r};r=i}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=Do(a)}}function yo(r,n){return r&&n?r===n?!0:r&&r.nodeType===3?!1:n&&n.nodeType===3?yo(r,n.parentNode):"contains"in r?r.contains(n):r.compareDocumentPosition?!!(r.compareDocumentPosition(n)&16):!1:!1}function Mo(){for(var r=window,n=Ca();n instanceof r.HTMLIFrameElement;){try{var a=typeof n.contentWindow.location.href=="string"}catch{a=!1}if(a)r=n.contentWindow;else break;n=Ca(r.document)}return n}function ti(r){var n=r&&r.nodeName&&r.nodeName.toLowerCase();return n&&(n==="input"&&(r.type==="text"||r.type==="search"||r.type==="tel"||r.type==="url"||r.type==="password")||n==="textarea"||r.contentEditable==="true")}function wd(r){var n=Mo(),a=r.focusedElem,i=r.selectionRange;if(n!==a&&a&&a.ownerDocument&&yo(a.ownerDocument.documentElement,a)){if(i!==null&&ti(a)){if(n=i.start,r=i.end,r===void 0&&(r=n),"selectionStart"in a)a.selectionStart=n,a.selectionEnd=Math.min(r,a.value.length);else if(r=(n=a.ownerDocument||document)&&n.defaultView||window,r.getSelection){r=r.getSelection();var o=a.textContent.length,c=Math.min(i.start,o);i=i.end===void 0?c:Math.min(i.end,o),!r.extend&&c>i&&(o=i,i=c,c=o),o=Po(a,c);var t=Po(a,i);o&&t&&(r.rangeCount!==1||r.anchorNode!==o.node||r.anchorOffset!==o.offset||r.focusNode!==t.node||r.focusOffset!==t.offset)&&(n=n.createRange(),n.setStart(o.node,o.offset),r.removeAllRanges(),c>i?(r.addRange(n),r.extend(t.node,t.offset)):(n.setEnd(t.node,t.offset),r.addRange(n)))}}for(n=[],r=a;r=r.parentNode;)r.nodeType===1&&n.push({element:r,left:r.scrollLeft,top:r.scrollTop});for(typeof a.focus=="function"&&a.focus(),a=0;a<n.length;a++)r=n[a],r.element.scrollLeft=r.left,r.element.scrollTop=r.top}}var Gd=fe&&"documentMode"in document&&11>=document.documentMode,fn=null,di=null,ra=null,ui=!1;function Ro(r,n,a){var i=a.window===a?a.document:a.nodeType===9?a:a.ownerDocument;ui||fn==null||fn!==Ca(i)||(i=fn,"selectionStart"in i&&ti(i)?i={start:i.selectionStart,end:i.selectionEnd}:(i=(i.ownerDocument&&i.ownerDocument.defaultView||window).getSelection(),i={anchorNode:i.anchorNode,anchorOffset:i.anchorOffset,focusNode:i.focusNode,focusOffset:i.focusOffset}),ra&&ea(ra,i)||(ra=i,i=Ya(di,"onSelect"),0<i.length&&(n=new ri("onSelect","select",null,n,a),r.push({event:n,listeners:i}),n.target=fn)))}function ka(r,n){var a={};return a[r.toLowerCase()]=n.toLowerCase(),a["Webkit"+r]="webkit"+n,a["Moz"+r]="moz"+n,a}var On={animationend:ka("Animation","AnimationEnd"),animationiteration:ka("Animation","AnimationIteration"),animationstart:ka("Animation","AnimationStart"),transitionend:ka("Transition","TransitionEnd")},ji={},Uo={};fe&&(Uo=document.createElement("div").style,"AnimationEvent"in window||(delete On.animationend.animation,delete On.animationiteration.animation,delete On.animationstart.animation),"TransitionEvent"in window||delete On.transitionend.transition);function wa(r){if(ji[r])return ji[r];if(!On[r])return r;var n=On[r],a;for(a in n)if(n.hasOwnProperty(a)&&a in Uo)return ji[r]=n[a];return r}var zo=wa("animationend"),Bo=wa("animationiteration"),Vo=wa("animationstart"),Fo=wa("transitionend"),qo=new Map,ko="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function zr(r,n){qo.set(r,n),ee(n,[r])}for(var xi=0;xi<ko.length;xi++){var mi=ko[xi],Yd=mi.toLowerCase(),_d=mi[0].toUpperCase()+mi.slice(1);zr(Yd,"on"+_d)}zr(zo,"onAnimationEnd"),zr(Bo,"onAnimationIteration"),zr(Vo,"onAnimationStart"),zr("dblclick","onDoubleClick"),zr("focusin","onFocus"),zr("focusout","onBlur"),zr(Fo,"onTransitionEnd"),pe("onMouseEnter",["mouseout","mouseover"]),pe("onMouseLeave",["mouseout","mouseover"]),pe("onPointerEnter",["pointerout","pointerover"]),pe("onPointerLeave",["pointerout","pointerover"]),ee("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),ee("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),ee("onBeforeInput",["compositionend","keypress","textInput","paste"]),ee("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),ee("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),ee("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var na="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Hd=new Set("cancel close invalid load scroll toggle".split(" ").concat(na));function wo(r,n,a){var i=r.type||"unknown-event";r.currentTarget=a,Yt(i,n,void 0,r),r.currentTarget=null}function Go(r,n){n=(n&4)!==0;for(var a=0;a<r.length;a++){var i=r[a],o=i.event;i=i.listeners;e:{var c=void 0;if(n)for(var t=i.length-1;0<=t;t--){var u=i[t],j=u.instance,f=u.currentTarget;if(u=u.listener,j!==c&&o.isPropagationStopped())break e;wo(o,u,f),c=j}else for(t=0;t<i.length;t++){if(u=i[t],j=u.instance,f=u.currentTarget,u=u.listener,j!==c&&o.isPropagationStopped())break e;wo(o,u,f),c=j}}}if(Sa)throw r=_s,Sa=!1,_s=null,r}function re(r,n){var a=n[vi];a===void 0&&(a=n[vi]=new Set);var i=r+"__bubble";a.has(i)||(Yo(n,r,2,!1),a.add(i))}function hi(r,n,a){var i=0;n&&(i|=4),Yo(a,r,i,n)}var Ga="_reactListening"+Math.random().toString(36).slice(2);function aa(r){if(!r[Ga]){r[Ga]=!0,l.forEach(function(a){a!=="selectionchange"&&(Hd.has(a)||hi(a,!1,r),hi(a,!0,r))});var n=r.nodeType===9?r:r.ownerDocument;n===null||n[Ga]||(n[Ga]=!0,hi("selectionchange",!1,n))}}function Yo(r,n,a,i){switch(xo(n)){case 1:var o=ld;break;case 4:o=od;break;default:o=Zs}a=o.bind(null,n,a,r),o=void 0,!Ys||n!=="touchstart"&&n!=="touchmove"&&n!=="wheel"||(o=!0),i?o!==void 0?r.addEventListener(n,a,{capture:!0,passive:o}):r.addEventListener(n,a,!0):o!==void 0?r.addEventListener(n,a,{passive:o}):r.addEventListener(n,a,!1)}function pi(r,n,a,i,o){var c=i;if((n&1)===0&&(n&2)===0&&i!==null)e:for(;;){if(i===null)return;var t=i.tag;if(t===3||t===4){var u=i.stateNode.containerInfo;if(u===o||u.nodeType===8&&u.parentNode===o)break;if(t===4)for(t=i.return;t!==null;){var j=t.tag;if((j===3||j===4)&&(j=t.stateNode.containerInfo,j===o||j.nodeType===8&&j.parentNode===o))return;t=t.return}for(;u!==null;){if(t=Zr(u),t===null)return;if(j=t.tag,j===5||j===6){i=c=t;continue e}u=u.parentNode}}i=i.return}Xl(function(){var f=c,v=ks(a),C=[];e:{var E=qo.get(r);if(E!==void 0){var S=ri,b=r;switch(r){case"keypress":if(Ba(a)===0)break e;case"keydown":case"keyup":S=vd;break;case"focusin":b="focus",S=si;break;case"focusout":b="blur",S=si;break;case"beforeblur":case"afterblur":S=si;break;case"click":if(a.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":S=po;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":S=dd;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":S=Nd;break;case zo:case Bo:case Vo:S=xd;break;case Fo:S=Ld;break;case"scroll":S=cd;break;case"wheel":S=Td;break;case"copy":case"cut":case"paste":S=hd;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":S=Oo}var T=(n&4)!==0,je=!T&&r==="scroll",h=T?E!==null?E+"Capture":null:E;T=[];for(var m=f,p;m!==null;){p=m;var A=p.stateNode;if(p.tag===5&&A!==null&&(p=A,h!==null&&(A=Fn(m,h),A!=null&&T.push(sa(m,A,p)))),je)break;m=m.return}0<T.length&&(E=new S(E,b,null,a,v),C.push({event:E,listeners:T}))}}if((n&7)===0){e:{if(E=r==="mouseover"||r==="pointerover",S=r==="mouseout"||r==="pointerout",E&&a!==qs&&(b=a.relatedTarget||a.fromElement)&&(Zr(b)||b[vr]))break e;if((S||E)&&(E=v.window===v?v:(E=v.ownerDocument)?E.defaultView||E.parentWindow:window,S?(b=a.relatedTarget||a.toElement,S=f,b=b?Zr(b):null,b!==null&&(je=$r(b),b!==je||b.tag!==5&&b.tag!==6)&&(b=null)):(S=null,b=f),S!==b)){if(T=po,A="onMouseLeave",h="onMouseEnter",m="mouse",(r==="pointerout"||r==="pointerover")&&(T=Oo,A="onPointerLeave",h="onPointerEnter",m="pointer"),je=S==null?E:gn(S),p=b==null?E:gn(b),E=new T(A,m+"leave",S,a,v),E.target=je,E.relatedTarget=p,A=null,Zr(v)===f&&(T=new T(h,m+"enter",b,a,v),T.target=p,T.relatedTarget=je,A=T),je=A,S&&b)r:{for(T=S,h=b,m=0,p=T;p;p=In(p))m++;for(p=0,A=h;A;A=In(A))p++;for(;0<m-p;)T=In(T),m--;for(;0<p-m;)h=In(h),p--;for(;m--;){if(T===h||h!==null&&T===h.alternate)break r;T=In(T),h=In(h)}T=null}else T=null;S!==null&&_o(C,E,S,T,!1),b!==null&&je!==null&&_o(C,je,b,T,!0)}}e:{if(E=f?gn(f):window,S=E.nodeName&&E.nodeName.toLowerCase(),S==="select"||S==="input"&&E.type==="file")var D=zd;else if(Ao(E))if(So)D=qd;else{D=Vd;var B=Bd}else(S=E.nodeName)&&S.toLowerCase()==="input"&&(E.type==="checkbox"||E.type==="radio")&&(D=Fd);if(D&&(D=D(r,f))){No(C,D,a,v);break e}B&&B(r,E,f),r==="focusout"&&(B=E._wrapperState)&&B.controlled&&E.type==="number"&&Us(E,"number",E.value)}switch(B=f?gn(f):window,r){case"focusin":(Ao(B)||B.contentEditable==="true")&&(fn=B,di=f,ra=null);break;case"focusout":ra=di=fn=null;break;case"mousedown":ui=!0;break;case"contextmenu":case"mouseup":case"dragend":ui=!1,Ro(C,a,v);break;case"selectionchange":if(Gd)break;case"keydown":case"keyup":Ro(C,a,v)}var V;if(li)e:{switch(r){case"compositionstart":var q="onCompositionStart";break e;case"compositionend":q="onCompositionEnd";break e;case"compositionupdate":q="onCompositionUpdate";break e}q=void 0}else pn?vo(r,a)&&(q="onCompositionEnd"):r==="keydown"&&a.keyCode===229&&(q="onCompositionStart");q&&(Io&&a.locale!=="ko"&&(pn||q!=="onCompositionStart"?q==="onCompositionEnd"&&pn&&(V=mo()):(Ur=v,ei="value"in Ur?Ur.value:Ur.textContent,pn=!0)),B=Ya(f,q),0<B.length&&(q=new fo(q,r,null,a,v),C.push({event:q,listeners:B}),V?q.data=V:(V=Co(a),V!==null&&(q.data=V)))),(V=Pd?yd(r,a):Md(r,a))&&(f=Ya(f,"onBeforeInput"),0<f.length&&(v=new fo("onBeforeInput","beforeinput",null,a,v),C.push({event:v,listeners:f}),v.data=V))}Go(C,n)})}function sa(r,n,a){return{instance:r,listener:n,currentTarget:a}}function Ya(r,n){for(var a=n+"Capture",i=[];r!==null;){var o=r,c=o.stateNode;o.tag===5&&c!==null&&(o=c,c=Fn(r,a),c!=null&&i.unshift(sa(r,c,o)),c=Fn(r,n),c!=null&&i.push(sa(r,c,o))),r=r.return}return i}function In(r){if(r===null)return null;do r=r.return;while(r&&r.tag!==5);return r||null}function _o(r,n,a,i,o){for(var c=n._reactName,t=[];a!==null&&a!==i;){var u=a,j=u.alternate,f=u.stateNode;if(j!==null&&j===i)break;u.tag===5&&f!==null&&(u=f,o?(j=Fn(a,c),j!=null&&t.unshift(sa(a,j,u))):o||(j=Fn(a,c),j!=null&&t.push(sa(a,j,u)))),a=a.return}t.length!==0&&r.push({event:n,listeners:t})}var Wd=/\r\n?/g,Xd=/\u0000|\uFFFD/g;function Ho(r){return(typeof r=="string"?r:""+r).replace(Wd,`
`).replace(Xd,"")}function _a(r,n,a){if(n=Ho(n),Ho(r)!==n&&a)throw Error(d(425))}function Ha(){}var fi=null,Oi=null;function Ii(r,n){return r==="textarea"||r==="noscript"||typeof n.children=="string"||typeof n.children=="number"||typeof n.dangerouslySetInnerHTML=="object"&&n.dangerouslySetInnerHTML!==null&&n.dangerouslySetInnerHTML.__html!=null}var Ei=typeof setTimeout=="function"?setTimeout:void 0,Kd=typeof clearTimeout=="function"?clearTimeout:void 0,Wo=typeof Promise=="function"?Promise:void 0,Qd=typeof queueMicrotask=="function"?queueMicrotask:typeof Wo<"u"?function(r){return Wo.resolve(null).then(r).catch($d)}:Ei;function $d(r){setTimeout(function(){throw r})}function gi(r,n){var a=n,i=0;do{var o=a.nextSibling;if(r.removeChild(a),o&&o.nodeType===8)if(a=o.data,a==="/$"){if(i===0){r.removeChild(o),Xn(n);return}i--}else a!=="$"&&a!=="$?"&&a!=="$!"||i++;a=o}while(a);Xn(n)}function Br(r){for(;r!=null;r=r.nextSibling){var n=r.nodeType;if(n===1||n===3)break;if(n===8){if(n=r.data,n==="$"||n==="$!"||n==="$?")break;if(n==="/$")return null}}return r}function Xo(r){r=r.previousSibling;for(var n=0;r;){if(r.nodeType===8){var a=r.data;if(a==="$"||a==="$!"||a==="$?"){if(n===0)return r;n--}else a==="/$"&&n++}r=r.previousSibling}return null}var En=Math.random().toString(36).slice(2),pr="__reactFiber$"+En,ia="__reactProps$"+En,vr="__reactContainer$"+En,vi="__reactEvents$"+En,Zd="__reactListeners$"+En,Jd="__reactHandles$"+En;function Zr(r){var n=r[pr];if(n)return n;for(var a=r.parentNode;a;){if(n=a[vr]||a[pr]){if(a=n.alternate,n.child!==null||a!==null&&a.child!==null)for(r=Xo(r);r!==null;){if(a=r[pr])return a;r=Xo(r)}return n}r=a,a=r.parentNode}return null}function la(r){return r=r[pr]||r[vr],!r||r.tag!==5&&r.tag!==6&&r.tag!==13&&r.tag!==3?null:r}function gn(r){if(r.tag===5||r.tag===6)return r.stateNode;throw Error(d(33))}function Wa(r){return r[ia]||null}var Ci=[],vn=-1;function Vr(r){return{current:r}}function ne(r){0>vn||(r.current=Ci[vn],Ci[vn]=null,vn--)}function J(r,n){vn++,Ci[vn]=r.current,r.current=n}var Fr={},Ne=Vr(Fr),ze=Vr(!1),Jr=Fr;function Cn(r,n){var a=r.type.contextTypes;if(!a)return Fr;var i=r.stateNode;if(i&&i.__reactInternalMemoizedUnmaskedChildContext===n)return i.__reactInternalMemoizedMaskedChildContext;var o={},c;for(c in a)o[c]=n[c];return i&&(r=r.stateNode,r.__reactInternalMemoizedUnmaskedChildContext=n,r.__reactInternalMemoizedMaskedChildContext=o),o}function Be(r){return r=r.childContextTypes,r!=null}function Xa(){ne(ze),ne(Ne)}function Ko(r,n,a){if(Ne.current!==Fr)throw Error(d(168));J(Ne,n),J(ze,a)}function Qo(r,n,a){var i=r.stateNode;if(n=n.childContextTypes,typeof i.getChildContext!="function")return a;i=i.getChildContext();for(var o in i)if(!(o in n))throw Error(d(108,$(r)||"Unknown",o));return x({},a,i)}function Ka(r){return r=(r=r.stateNode)&&r.__reactInternalMemoizedMergedChildContext||Fr,Jr=Ne.current,J(Ne,r),J(ze,ze.current),!0}function $o(r,n,a){var i=r.stateNode;if(!i)throw Error(d(169));a?(r=Qo(r,n,Jr),i.__reactInternalMemoizedMergedChildContext=r,ne(ze),ne(Ne),J(Ne,r)):ne(ze),J(ze,a)}var Cr=null,Qa=!1,Ai=!1;function Zo(r){Cr===null?Cr=[r]:Cr.push(r)}function eu(r){Qa=!0,Zo(r)}function qr(){if(!Ai&&Cr!==null){Ai=!0;var r=0,n=X;try{var a=Cr;for(X=1;r<a.length;r++){var i=a[r];do i=i(!0);while(i!==null)}Cr=null,Qa=!1}catch(o){throw Cr!==null&&(Cr=Cr.slice(r+1)),Jl(Hs,qr),o}finally{X=n,Ai=!1}}return null}var An=[],Nn=0,$a=null,Za=0,Qe=[],$e=0,en=null,Ar=1,Nr="";function rn(r,n){An[Nn++]=Za,An[Nn++]=$a,$a=r,Za=n}function Jo(r,n,a){Qe[$e++]=Ar,Qe[$e++]=Nr,Qe[$e++]=en,en=r;var i=Ar;r=Nr;var o=32-ir(i)-1;i&=~(1<<o),a+=1;var c=32-ir(n)+o;if(30<c){var t=o-o%5;c=(i&(1<<t)-1).toString(32),i>>=t,o-=t,Ar=1<<32-ir(n)+o|a<<o|i,Nr=c+r}else Ar=1<<c|a<<o|i,Nr=r}function Ni(r){r.return!==null&&(rn(r,1),Jo(r,1,0))}function Si(r){for(;r===$a;)$a=An[--Nn],An[Nn]=null,Za=An[--Nn],An[Nn]=null;for(;r===en;)en=Qe[--$e],Qe[$e]=null,Nr=Qe[--$e],Qe[$e]=null,Ar=Qe[--$e],Qe[$e]=null}var Ye=null,_e=null,ie=!1,or=null;function ec(r,n){var a=rr(5,null,null,0);a.elementType="DELETED",a.stateNode=n,a.return=r,n=r.deletions,n===null?(r.deletions=[a],r.flags|=16):n.push(a)}function rc(r,n){switch(r.tag){case 5:var a=r.type;return n=n.nodeType!==1||a.toLowerCase()!==n.nodeName.toLowerCase()?null:n,n!==null?(r.stateNode=n,Ye=r,_e=Br(n.firstChild),!0):!1;case 6:return n=r.pendingProps===""||n.nodeType!==3?null:n,n!==null?(r.stateNode=n,Ye=r,_e=null,!0):!1;case 13:return n=n.nodeType!==8?null:n,n!==null?(a=en!==null?{id:Ar,overflow:Nr}:null,r.memoizedState={dehydrated:n,treeContext:a,retryLane:1073741824},a=rr(18,null,null,0),a.stateNode=n,a.return=r,r.child=a,Ye=r,_e=null,!0):!1;default:return!1}}function Li(r){return(r.mode&1)!==0&&(r.flags&128)===0}function bi(r){if(ie){var n=_e;if(n){var a=n;if(!rc(r,n)){if(Li(r))throw Error(d(418));n=Br(a.nextSibling);var i=Ye;n&&rc(r,n)?ec(i,a):(r.flags=r.flags&-4097|2,ie=!1,Ye=r)}}else{if(Li(r))throw Error(d(418));r.flags=r.flags&-4097|2,ie=!1,Ye=r}}}function nc(r){for(r=r.return;r!==null&&r.tag!==5&&r.tag!==3&&r.tag!==13;)r=r.return;Ye=r}function Ja(r){if(r!==Ye)return!1;if(!ie)return nc(r),ie=!0,!1;var n;if((n=r.tag!==3)&&!(n=r.tag!==5)&&(n=r.type,n=n!=="head"&&n!=="body"&&!Ii(r.type,r.memoizedProps)),n&&(n=_e)){if(Li(r))throw ac(),Error(d(418));for(;n;)ec(r,n),n=Br(n.nextSibling)}if(nc(r),r.tag===13){if(r=r.memoizedState,r=r!==null?r.dehydrated:null,!r)throw Error(d(317));e:{for(r=r.nextSibling,n=0;r;){if(r.nodeType===8){var a=r.data;if(a==="/$"){if(n===0){_e=Br(r.nextSibling);break e}n--}else a!=="$"&&a!=="$!"&&a!=="$?"||n++}r=r.nextSibling}_e=null}}else _e=Ye?Br(r.stateNode.nextSibling):null;return!0}function ac(){for(var r=_e;r;)r=Br(r.nextSibling)}function Sn(){_e=Ye=null,ie=!1}function Ti(r){or===null?or=[r]:or.push(r)}var ru=Ae.ReactCurrentBatchConfig;function cr(r,n){if(r&&r.defaultProps){n=x({},n),r=r.defaultProps;for(var a in r)n[a]===void 0&&(n[a]=r[a]);return n}return n}var es=Vr(null),rs=null,Ln=null,Di=null;function Pi(){Di=Ln=rs=null}function yi(r){var n=es.current;ne(es),r._currentValue=n}function Mi(r,n,a){for(;r!==null;){var i=r.alternate;if((r.childLanes&n)!==n?(r.childLanes|=n,i!==null&&(i.childLanes|=n)):i!==null&&(i.childLanes&n)!==n&&(i.childLanes|=n),r===a)break;r=r.return}}function bn(r,n){rs=r,Di=Ln=null,r=r.dependencies,r!==null&&r.firstContext!==null&&((r.lanes&n)!==0&&(Ve=!0),r.firstContext=null)}function Ze(r){var n=r._currentValue;if(Di!==r)if(r={context:r,memoizedValue:n,next:null},Ln===null){if(rs===null)throw Error(d(308));Ln=r,rs.dependencies={lanes:0,firstContext:r}}else Ln=Ln.next=r;return n}var nn=null;function Ri(r){nn===null?nn=[r]:nn.push(r)}function sc(r,n,a,i){var o=n.interleaved;return o===null?(a.next=a,Ri(n)):(a.next=o.next,o.next=a),n.interleaved=a,Sr(r,i)}function Sr(r,n){r.lanes|=n;var a=r.alternate;for(a!==null&&(a.lanes|=n),a=r,r=r.return;r!==null;)r.childLanes|=n,a=r.alternate,a!==null&&(a.childLanes|=n),a=r,r=r.return;return a.tag===3?a.stateNode:null}var kr=!1;function Ui(r){r.updateQueue={baseState:r.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function ic(r,n){r=r.updateQueue,n.updateQueue===r&&(n.updateQueue={baseState:r.baseState,firstBaseUpdate:r.firstBaseUpdate,lastBaseUpdate:r.lastBaseUpdate,shared:r.shared,effects:r.effects})}function Lr(r,n){return{eventTime:r,lane:n,tag:0,payload:null,callback:null,next:null}}function wr(r,n,a){var i=r.updateQueue;if(i===null)return null;if(i=i.shared,(Y&2)!==0){var o=i.pending;return o===null?n.next=n:(n.next=o.next,o.next=n),i.pending=n,Sr(r,a)}return o=i.interleaved,o===null?(n.next=n,Ri(i)):(n.next=o.next,o.next=n),i.interleaved=n,Sr(r,a)}function ns(r,n,a){if(n=n.updateQueue,n!==null&&(n=n.shared,(a&4194240)!==0)){var i=n.lanes;i&=r.pendingLanes,a|=i,n.lanes=a,Ks(r,a)}}function lc(r,n){var a=r.updateQueue,i=r.alternate;if(i!==null&&(i=i.updateQueue,a===i)){var o=null,c=null;if(a=a.firstBaseUpdate,a!==null){do{var t={eventTime:a.eventTime,lane:a.lane,tag:a.tag,payload:a.payload,callback:a.callback,next:null};c===null?o=c=t:c=c.next=t,a=a.next}while(a!==null);c===null?o=c=n:c=c.next=n}else o=c=n;a={baseState:i.baseState,firstBaseUpdate:o,lastBaseUpdate:c,shared:i.shared,effects:i.effects},r.updateQueue=a;return}r=a.lastBaseUpdate,r===null?a.firstBaseUpdate=n:r.next=n,a.lastBaseUpdate=n}function as(r,n,a,i){var o=r.updateQueue;kr=!1;var c=o.firstBaseUpdate,t=o.lastBaseUpdate,u=o.shared.pending;if(u!==null){o.shared.pending=null;var j=u,f=j.next;j.next=null,t===null?c=f:t.next=f,t=j;var v=r.alternate;v!==null&&(v=v.updateQueue,u=v.lastBaseUpdate,u!==t&&(u===null?v.firstBaseUpdate=f:u.next=f,v.lastBaseUpdate=j))}if(c!==null){var C=o.baseState;t=0,v=f=j=null,u=c;do{var E=u.lane,S=u.eventTime;if((i&E)===E){v!==null&&(v=v.next={eventTime:S,lane:0,tag:u.tag,payload:u.payload,callback:u.callback,next:null});e:{var b=r,T=u;switch(E=n,S=a,T.tag){case 1:if(b=T.payload,typeof b=="function"){C=b.call(S,C,E);break e}C=b;break e;case 3:b.flags=b.flags&-65537|128;case 0:if(b=T.payload,E=typeof b=="function"?b.call(S,C,E):b,E==null)break e;C=x({},C,E);break e;case 2:kr=!0}}u.callback!==null&&u.lane!==0&&(r.flags|=64,E=o.effects,E===null?o.effects=[u]:E.push(u))}else S={eventTime:S,lane:E,tag:u.tag,payload:u.payload,callback:u.callback,next:null},v===null?(f=v=S,j=C):v=v.next=S,t|=E;if(u=u.next,u===null){if(u=o.shared.pending,u===null)break;E=u,u=E.next,E.next=null,o.lastBaseUpdate=E,o.shared.pending=null}}while(!0);if(v===null&&(j=C),o.baseState=j,o.firstBaseUpdate=f,o.lastBaseUpdate=v,n=o.shared.interleaved,n!==null){o=n;do t|=o.lane,o=o.next;while(o!==n)}else c===null&&(o.shared.lanes=0);ln|=t,r.lanes=t,r.memoizedState=C}}function oc(r,n,a){if(r=n.effects,n.effects=null,r!==null)for(n=0;n<r.length;n++){var i=r[n],o=i.callback;if(o!==null){if(i.callback=null,i=a,typeof o!="function")throw Error(d(191,o));o.call(i)}}}var cc=new O.Component().refs;function zi(r,n,a,i){n=r.memoizedState,a=a(i,n),a=a==null?n:x({},n,a),r.memoizedState=a,r.lanes===0&&(r.updateQueue.baseState=a)}var ss={isMounted:function(r){return(r=r._reactInternals)?$r(r)===r:!1},enqueueSetState:function(r,n,a){r=r._reactInternals;var i=ye(),o=Hr(r),c=Lr(i,o);c.payload=n,a!=null&&(c.callback=a),n=wr(r,c,o),n!==null&&(ur(n,r,o,i),ns(n,r,o))},enqueueReplaceState:function(r,n,a){r=r._reactInternals;var i=ye(),o=Hr(r),c=Lr(i,o);c.tag=1,c.payload=n,a!=null&&(c.callback=a),n=wr(r,c,o),n!==null&&(ur(n,r,o,i),ns(n,r,o))},enqueueForceUpdate:function(r,n){r=r._reactInternals;var a=ye(),i=Hr(r),o=Lr(a,i);o.tag=2,n!=null&&(o.callback=n),n=wr(r,o,i),n!==null&&(ur(n,r,i,a),ns(n,r,i))}};function tc(r,n,a,i,o,c,t){return r=r.stateNode,typeof r.shouldComponentUpdate=="function"?r.shouldComponentUpdate(i,c,t):n.prototype&&n.prototype.isPureReactComponent?!ea(a,i)||!ea(o,c):!0}function dc(r,n,a){var i=!1,o=Fr,c=n.contextType;return typeof c=="object"&&c!==null?c=Ze(c):(o=Be(n)?Jr:Ne.current,i=n.contextTypes,c=(i=i!=null)?Cn(r,o):Fr),n=new n(a,c),r.memoizedState=n.state!==null&&n.state!==void 0?n.state:null,n.updater=ss,r.stateNode=n,n._reactInternals=r,i&&(r=r.stateNode,r.__reactInternalMemoizedUnmaskedChildContext=o,r.__reactInternalMemoizedMaskedChildContext=c),n}function uc(r,n,a,i){r=n.state,typeof n.componentWillReceiveProps=="function"&&n.componentWillReceiveProps(a,i),typeof n.UNSAFE_componentWillReceiveProps=="function"&&n.UNSAFE_componentWillReceiveProps(a,i),n.state!==r&&ss.enqueueReplaceState(n,n.state,null)}function Bi(r,n,a,i){var o=r.stateNode;o.props=a,o.state=r.memoizedState,o.refs=cc,Ui(r);var c=n.contextType;typeof c=="object"&&c!==null?o.context=Ze(c):(c=Be(n)?Jr:Ne.current,o.context=Cn(r,c)),o.state=r.memoizedState,c=n.getDerivedStateFromProps,typeof c=="function"&&(zi(r,n,c,a),o.state=r.memoizedState),typeof n.getDerivedStateFromProps=="function"||typeof o.getSnapshotBeforeUpdate=="function"||typeof o.UNSAFE_componentWillMount!="function"&&typeof o.componentWillMount!="function"||(n=o.state,typeof o.componentWillMount=="function"&&o.componentWillMount(),typeof o.UNSAFE_componentWillMount=="function"&&o.UNSAFE_componentWillMount(),n!==o.state&&ss.enqueueReplaceState(o,o.state,null),as(r,a,o,i),o.state=r.memoizedState),typeof o.componentDidMount=="function"&&(r.flags|=4194308)}function oa(r,n,a){if(r=a.ref,r!==null&&typeof r!="function"&&typeof r!="object"){if(a._owner){if(a=a._owner,a){if(a.tag!==1)throw Error(d(309));var i=a.stateNode}if(!i)throw Error(d(147,r));var o=i,c=""+r;return n!==null&&n.ref!==null&&typeof n.ref=="function"&&n.ref._stringRef===c?n.ref:(n=function(t){var u=o.refs;u===cc&&(u=o.refs={}),t===null?delete u[c]:u[c]=t},n._stringRef=c,n)}if(typeof r!="string")throw Error(d(284));if(!a._owner)throw Error(d(290,r))}return r}function is(r,n){throw r=Object.prototype.toString.call(n),Error(d(31,r==="[object Object]"?"object with keys {"+Object.keys(n).join(", ")+"}":r))}function jc(r){var n=r._init;return n(r._payload)}function xc(r){function n(h,m){if(r){var p=h.deletions;p===null?(h.deletions=[m],h.flags|=16):p.push(m)}}function a(h,m){if(!r)return null;for(;m!==null;)n(h,m),m=m.sibling;return null}function i(h,m){for(h=new Map;m!==null;)m.key!==null?h.set(m.key,m):h.set(m.index,m),m=m.sibling;return h}function o(h,m){return h=Xr(h,m),h.index=0,h.sibling=null,h}function c(h,m,p){return h.index=p,r?(p=h.alternate,p!==null?(p=p.index,p<m?(h.flags|=2,m):p):(h.flags|=2,m)):(h.flags|=1048576,m)}function t(h){return r&&h.alternate===null&&(h.flags|=2),h}function u(h,m,p,A){return m===null||m.tag!==6?(m=El(p,h.mode,A),m.return=h,m):(m=o(m,p),m.return=h,m)}function j(h,m,p,A){var D=p.type;return D===Me?v(h,m,p.props.children,A,p.key):m!==null&&(m.elementType===D||typeof D=="object"&&D!==null&&D.$$typeof===Re&&jc(D)===m.type)?(A=o(m,p.props),A.ref=oa(h,m,p),A.return=h,A):(A=As(p.type,p.key,p.props,null,h.mode,A),A.ref=oa(h,m,p),A.return=h,A)}function f(h,m,p,A){return m===null||m.tag!==4||m.stateNode.containerInfo!==p.containerInfo||m.stateNode.implementation!==p.implementation?(m=gl(p,h.mode,A),m.return=h,m):(m=o(m,p.children||[]),m.return=h,m)}function v(h,m,p,A,D){return m===null||m.tag!==7?(m=dn(p,h.mode,A,D),m.return=h,m):(m=o(m,p),m.return=h,m)}function C(h,m,p){if(typeof m=="string"&&m!==""||typeof m=="number")return m=El(""+m,h.mode,p),m.return=h,m;if(typeof m=="object"&&m!==null){switch(m.$$typeof){case ar:return p=As(m.type,m.key,m.props,null,h.mode,p),p.ref=oa(h,null,m),p.return=h,p;case De:return m=gl(m,h.mode,p),m.return=h,m;case Re:var A=m._init;return C(h,A(m._payload),p)}if(zn(m)||F(m))return m=dn(m,h.mode,p,null),m.return=h,m;is(h,m)}return null}function E(h,m,p,A){var D=m!==null?m.key:null;if(typeof p=="string"&&p!==""||typeof p=="number")return D!==null?null:u(h,m,""+p,A);if(typeof p=="object"&&p!==null){switch(p.$$typeof){case ar:return p.key===D?j(h,m,p,A):null;case De:return p.key===D?f(h,m,p,A):null;case Re:return D=p._init,E(h,m,D(p._payload),A)}if(zn(p)||F(p))return D!==null?null:v(h,m,p,A,null);is(h,p)}return null}function S(h,m,p,A,D){if(typeof A=="string"&&A!==""||typeof A=="number")return h=h.get(p)||null,u(m,h,""+A,D);if(typeof A=="object"&&A!==null){switch(A.$$typeof){case ar:return h=h.get(A.key===null?p:A.key)||null,j(m,h,A,D);case De:return h=h.get(A.key===null?p:A.key)||null,f(m,h,A,D);case Re:var B=A._init;return S(h,m,p,B(A._payload),D)}if(zn(A)||F(A))return h=h.get(p)||null,v(m,h,A,D,null);is(m,A)}return null}function b(h,m,p,A){for(var D=null,B=null,V=m,q=m=0,Ee=null;V!==null&&q<p.length;q++){V.index>q?(Ee=V,V=null):Ee=V.sibling;var _=E(h,V,p[q],A);if(_===null){V===null&&(V=Ee);break}r&&V&&_.alternate===null&&n(h,V),m=c(_,m,q),B===null?D=_:B.sibling=_,B=_,V=Ee}if(q===p.length)return a(h,V),ie&&rn(h,q),D;if(V===null){for(;q<p.length;q++)V=C(h,p[q],A),V!==null&&(m=c(V,m,q),B===null?D=V:B.sibling=V,B=V);return ie&&rn(h,q),D}for(V=i(h,V);q<p.length;q++)Ee=S(V,h,q,p[q],A),Ee!==null&&(r&&Ee.alternate!==null&&V.delete(Ee.key===null?q:Ee.key),m=c(Ee,m,q),B===null?D=Ee:B.sibling=Ee,B=Ee);return r&&V.forEach(function(Kr){return n(h,Kr)}),ie&&rn(h,q),D}function T(h,m,p,A){var D=F(p);if(typeof D!="function")throw Error(d(150));if(p=D.call(p),p==null)throw Error(d(151));for(var B=D=null,V=m,q=m=0,Ee=null,_=p.next();V!==null&&!_.done;q++,_=p.next()){V.index>q?(Ee=V,V=null):Ee=V.sibling;var Kr=E(h,V,_.value,A);if(Kr===null){V===null&&(V=Ee);break}r&&V&&Kr.alternate===null&&n(h,V),m=c(Kr,m,q),B===null?D=Kr:B.sibling=Kr,B=Kr,V=Ee}if(_.done)return a(h,V),ie&&rn(h,q),D;if(V===null){for(;!_.done;q++,_=p.next())_=C(h,_.value,A),_!==null&&(m=c(_,m,q),B===null?D=_:B.sibling=_,B=_);return ie&&rn(h,q),D}for(V=i(h,V);!_.done;q++,_=p.next())_=S(V,h,q,_.value,A),_!==null&&(r&&_.alternate!==null&&V.delete(_.key===null?q:_.key),m=c(_,m,q),B===null?D=_:B.sibling=_,B=_);return r&&V.forEach(function(Ru){return n(h,Ru)}),ie&&rn(h,q),D}function je(h,m,p,A){if(typeof p=="object"&&p!==null&&p.type===Me&&p.key===null&&(p=p.props.children),typeof p=="object"&&p!==null){switch(p.$$typeof){case ar:e:{for(var D=p.key,B=m;B!==null;){if(B.key===D){if(D=p.type,D===Me){if(B.tag===7){a(h,B.sibling),m=o(B,p.props.children),m.return=h,h=m;break e}}else if(B.elementType===D||typeof D=="object"&&D!==null&&D.$$typeof===Re&&jc(D)===B.type){a(h,B.sibling),m=o(B,p.props),m.ref=oa(h,B,p),m.return=h,h=m;break e}a(h,B);break}else n(h,B);B=B.sibling}p.type===Me?(m=dn(p.props.children,h.mode,A,p.key),m.return=h,h=m):(A=As(p.type,p.key,p.props,null,h.mode,A),A.ref=oa(h,m,p),A.return=h,h=A)}return t(h);case De:e:{for(B=p.key;m!==null;){if(m.key===B)if(m.tag===4&&m.stateNode.containerInfo===p.containerInfo&&m.stateNode.implementation===p.implementation){a(h,m.sibling),m=o(m,p.children||[]),m.return=h,h=m;break e}else{a(h,m);break}else n(h,m);m=m.sibling}m=gl(p,h.mode,A),m.return=h,h=m}return t(h);case Re:return B=p._init,je(h,m,B(p._payload),A)}if(zn(p))return b(h,m,p,A);if(F(p))return T(h,m,p,A);is(h,p)}return typeof p=="string"&&p!==""||typeof p=="number"?(p=""+p,m!==null&&m.tag===6?(a(h,m.sibling),m=o(m,p),m.return=h,h=m):(a(h,m),m=El(p,h.mode,A),m.return=h,h=m),t(h)):a(h,m)}return je}var Tn=xc(!0),mc=xc(!1),ca={},fr=Vr(ca),ta=Vr(ca),da=Vr(ca);function an(r){if(r===ca)throw Error(d(174));return r}function Vi(r,n){switch(J(da,n),J(ta,r),J(fr,ca),r=n.nodeType,r){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:Bs(null,"");break;default:r=r===8?n.parentNode:n,n=r.namespaceURI||null,r=r.tagName,n=Bs(n,r)}ne(fr),J(fr,n)}function Dn(){ne(fr),ne(ta),ne(da)}function hc(r){an(da.current);var n=an(fr.current),a=Bs(n,r.type);n!==a&&(J(ta,r),J(fr,a))}function Fi(r){ta.current===r&&(ne(fr),ne(ta))}var oe=Vr(0);function ls(r){for(var n=r;n!==null;){if(n.tag===13){var a=n.memoizedState;if(a!==null&&(a=a.dehydrated,a===null||a.data==="$?"||a.data==="$!"))return n}else if(n.tag===19&&n.memoizedProps.revealOrder!==void 0){if((n.flags&128)!==0)return n}else if(n.child!==null){n.child.return=n,n=n.child;continue}if(n===r)break;for(;n.sibling===null;){if(n.return===null||n.return===r)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var qi=[];function ki(){for(var r=0;r<qi.length;r++)qi[r]._workInProgressVersionPrimary=null;qi.length=0}var os=Ae.ReactCurrentDispatcher,wi=Ae.ReactCurrentBatchConfig,sn=0,ce=null,me=null,Oe=null,cs=!1,ua=!1,ja=0,nu=0;function Se(){throw Error(d(321))}function Gi(r,n){if(n===null)return!1;for(var a=0;a<n.length&&a<r.length;a++)if(!lr(r[a],n[a]))return!1;return!0}function Yi(r,n,a,i,o,c){if(sn=c,ce=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,os.current=r===null||r.memoizedState===null?lu:ou,r=a(i,o),ua){c=0;do{if(ua=!1,ja=0,25<=c)throw Error(d(301));c+=1,Oe=me=null,n.updateQueue=null,os.current=cu,r=a(i,o)}while(ua)}if(os.current=us,n=me!==null&&me.next!==null,sn=0,Oe=me=ce=null,cs=!1,n)throw Error(d(300));return r}function _i(){var r=ja!==0;return ja=0,r}function Or(){var r={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Oe===null?ce.memoizedState=Oe=r:Oe=Oe.next=r,Oe}function Je(){if(me===null){var r=ce.alternate;r=r!==null?r.memoizedState:null}else r=me.next;var n=Oe===null?ce.memoizedState:Oe.next;if(n!==null)Oe=n,me=r;else{if(r===null)throw Error(d(310));me=r,r={memoizedState:me.memoizedState,baseState:me.baseState,baseQueue:me.baseQueue,queue:me.queue,next:null},Oe===null?ce.memoizedState=Oe=r:Oe=Oe.next=r}return Oe}function xa(r,n){return typeof n=="function"?n(r):n}function Hi(r){var n=Je(),a=n.queue;if(a===null)throw Error(d(311));a.lastRenderedReducer=r;var i=me,o=i.baseQueue,c=a.pending;if(c!==null){if(o!==null){var t=o.next;o.next=c.next,c.next=t}i.baseQueue=o=c,a.pending=null}if(o!==null){c=o.next,i=i.baseState;var u=t=null,j=null,f=c;do{var v=f.lane;if((sn&v)===v)j!==null&&(j=j.next={lane:0,action:f.action,hasEagerState:f.hasEagerState,eagerState:f.eagerState,next:null}),i=f.hasEagerState?f.eagerState:r(i,f.action);else{var C={lane:v,action:f.action,hasEagerState:f.hasEagerState,eagerState:f.eagerState,next:null};j===null?(u=j=C,t=i):j=j.next=C,ce.lanes|=v,ln|=v}f=f.next}while(f!==null&&f!==c);j===null?t=i:j.next=u,lr(i,n.memoizedState)||(Ve=!0),n.memoizedState=i,n.baseState=t,n.baseQueue=j,a.lastRenderedState=i}if(r=a.interleaved,r!==null){o=r;do c=o.lane,ce.lanes|=c,ln|=c,o=o.next;while(o!==r)}else o===null&&(a.lanes=0);return[n.memoizedState,a.dispatch]}function Wi(r){var n=Je(),a=n.queue;if(a===null)throw Error(d(311));a.lastRenderedReducer=r;var i=a.dispatch,o=a.pending,c=n.memoizedState;if(o!==null){a.pending=null;var t=o=o.next;do c=r(c,t.action),t=t.next;while(t!==o);lr(c,n.memoizedState)||(Ve=!0),n.memoizedState=c,n.baseQueue===null&&(n.baseState=c),a.lastRenderedState=c}return[c,i]}function pc(){}function fc(r,n){var a=ce,i=Je(),o=n(),c=!lr(i.memoizedState,o);if(c&&(i.memoizedState=o,Ve=!0),i=i.queue,Xi(Ec.bind(null,a,i,r),[r]),i.getSnapshot!==n||c||Oe!==null&&Oe.memoizedState.tag&1){if(a.flags|=2048,ma(9,Ic.bind(null,a,i,o,n),void 0,null),Ie===null)throw Error(d(349));(sn&30)!==0||Oc(a,n,o)}return o}function Oc(r,n,a){r.flags|=16384,r={getSnapshot:n,value:a},n=ce.updateQueue,n===null?(n={lastEffect:null,stores:null},ce.updateQueue=n,n.stores=[r]):(a=n.stores,a===null?n.stores=[r]:a.push(r))}function Ic(r,n,a,i){n.value=a,n.getSnapshot=i,gc(n)&&vc(r)}function Ec(r,n,a){return a(function(){gc(n)&&vc(r)})}function gc(r){var n=r.getSnapshot;r=r.value;try{var a=n();return!lr(r,a)}catch{return!0}}function vc(r){var n=Sr(r,1);n!==null&&ur(n,r,1,-1)}function Cc(r){var n=Or();return typeof r=="function"&&(r=r()),n.memoizedState=n.baseState=r,r={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:xa,lastRenderedState:r},n.queue=r,r=r.dispatch=iu.bind(null,ce,r),[n.memoizedState,r]}function ma(r,n,a,i){return r={tag:r,create:n,destroy:a,deps:i,next:null},n=ce.updateQueue,n===null?(n={lastEffect:null,stores:null},ce.updateQueue=n,n.lastEffect=r.next=r):(a=n.lastEffect,a===null?n.lastEffect=r.next=r:(i=a.next,a.next=r,r.next=i,n.lastEffect=r)),r}function Ac(){return Je().memoizedState}function ts(r,n,a,i){var o=Or();ce.flags|=r,o.memoizedState=ma(1|n,a,void 0,i===void 0?null:i)}function ds(r,n,a,i){var o=Je();i=i===void 0?null:i;var c=void 0;if(me!==null){var t=me.memoizedState;if(c=t.destroy,i!==null&&Gi(i,t.deps)){o.memoizedState=ma(n,a,c,i);return}}ce.flags|=r,o.memoizedState=ma(1|n,a,c,i)}function Nc(r,n){return ts(8390656,8,r,n)}function Xi(r,n){return ds(2048,8,r,n)}function Sc(r,n){return ds(4,2,r,n)}function Lc(r,n){return ds(4,4,r,n)}function bc(r,n){if(typeof n=="function")return r=r(),n(r),function(){n(null)};if(n!=null)return r=r(),n.current=r,function(){n.current=null}}function Tc(r,n,a){return a=a!=null?a.concat([r]):null,ds(4,4,bc.bind(null,n,r),a)}function Ki(){}function Dc(r,n){var a=Je();n=n===void 0?null:n;var i=a.memoizedState;return i!==null&&n!==null&&Gi(n,i[1])?i[0]:(a.memoizedState=[r,n],r)}function Pc(r,n){var a=Je();n=n===void 0?null:n;var i=a.memoizedState;return i!==null&&n!==null&&Gi(n,i[1])?i[0]:(r=r(),a.memoizedState=[r,n],r)}function yc(r,n,a){return(sn&21)===0?(r.baseState&&(r.baseState=!1,Ve=!0),r.memoizedState=a):(lr(a,n)||(a=ao(),ce.lanes|=a,ln|=a,r.baseState=!0),n)}function au(r,n){var a=X;X=a!==0&&4>a?a:4,r(!0);var i=wi.transition;wi.transition={};try{r(!1),n()}finally{X=a,wi.transition=i}}function Mc(){return Je().memoizedState}function su(r,n,a){var i=Hr(r);if(a={lane:i,action:a,hasEagerState:!1,eagerState:null,next:null},Rc(r))Uc(n,a);else if(a=sc(r,n,a,i),a!==null){var o=ye();ur(a,r,i,o),zc(a,n,i)}}function iu(r,n,a){var i=Hr(r),o={lane:i,action:a,hasEagerState:!1,eagerState:null,next:null};if(Rc(r))Uc(n,o);else{var c=r.alternate;if(r.lanes===0&&(c===null||c.lanes===0)&&(c=n.lastRenderedReducer,c!==null))try{var t=n.lastRenderedState,u=c(t,a);if(o.hasEagerState=!0,o.eagerState=u,lr(u,t)){var j=n.interleaved;j===null?(o.next=o,Ri(n)):(o.next=j.next,j.next=o),n.interleaved=o;return}}catch{}finally{}a=sc(r,n,o,i),a!==null&&(o=ye(),ur(a,r,i,o),zc(a,n,i))}}function Rc(r){var n=r.alternate;return r===ce||n!==null&&n===ce}function Uc(r,n){ua=cs=!0;var a=r.pending;a===null?n.next=n:(n.next=a.next,a.next=n),r.pending=n}function zc(r,n,a){if((a&4194240)!==0){var i=n.lanes;i&=r.pendingLanes,a|=i,n.lanes=a,Ks(r,a)}}var us={readContext:Ze,useCallback:Se,useContext:Se,useEffect:Se,useImperativeHandle:Se,useInsertionEffect:Se,useLayoutEffect:Se,useMemo:Se,useReducer:Se,useRef:Se,useState:Se,useDebugValue:Se,useDeferredValue:Se,useTransition:Se,useMutableSource:Se,useSyncExternalStore:Se,useId:Se,unstable_isNewReconciler:!1},lu={readContext:Ze,useCallback:function(r,n){return Or().memoizedState=[r,n===void 0?null:n],r},useContext:Ze,useEffect:Nc,useImperativeHandle:function(r,n,a){return a=a!=null?a.concat([r]):null,ts(4194308,4,bc.bind(null,n,r),a)},useLayoutEffect:function(r,n){return ts(4194308,4,r,n)},useInsertionEffect:function(r,n){return ts(4,2,r,n)},useMemo:function(r,n){var a=Or();return n=n===void 0?null:n,r=r(),a.memoizedState=[r,n],r},useReducer:function(r,n,a){var i=Or();return n=a!==void 0?a(n):n,i.memoizedState=i.baseState=n,r={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:r,lastRenderedState:n},i.queue=r,r=r.dispatch=su.bind(null,ce,r),[i.memoizedState,r]},useRef:function(r){var n=Or();return r={current:r},n.memoizedState=r},useState:Cc,useDebugValue:Ki,useDeferredValue:function(r){return Or().memoizedState=r},useTransition:function(){var r=Cc(!1),n=r[0];return r=au.bind(null,r[1]),Or().memoizedState=r,[n,r]},useMutableSource:function(){},useSyncExternalStore:function(r,n,a){var i=ce,o=Or();if(ie){if(a===void 0)throw Error(d(407));a=a()}else{if(a=n(),Ie===null)throw Error(d(349));(sn&30)!==0||Oc(i,n,a)}o.memoizedState=a;var c={value:a,getSnapshot:n};return o.queue=c,Nc(Ec.bind(null,i,c,r),[r]),i.flags|=2048,ma(9,Ic.bind(null,i,c,a,n),void 0,null),a},useId:function(){var r=Or(),n=Ie.identifierPrefix;if(ie){var a=Nr,i=Ar;a=(i&~(1<<32-ir(i)-1)).toString(32)+a,n=":"+n+"R"+a,a=ja++,0<a&&(n+="H"+a.toString(32)),n+=":"}else a=nu++,n=":"+n+"r"+a.toString(32)+":";return r.memoizedState=n},unstable_isNewReconciler:!1},ou={readContext:Ze,useCallback:Dc,useContext:Ze,useEffect:Xi,useImperativeHandle:Tc,useInsertionEffect:Sc,useLayoutEffect:Lc,useMemo:Pc,useReducer:Hi,useRef:Ac,useState:function(){return Hi(xa)},useDebugValue:Ki,useDeferredValue:function(r){var n=Je();return yc(n,me.memoizedState,r)},useTransition:function(){var r=Hi(xa)[0],n=Je().memoizedState;return[r,n]},useMutableSource:pc,useSyncExternalStore:fc,useId:Mc,unstable_isNewReconciler:!1},cu={readContext:Ze,useCallback:Dc,useContext:Ze,useEffect:Xi,useImperativeHandle:Tc,useInsertionEffect:Sc,useLayoutEffect:Lc,useMemo:Pc,useReducer:Wi,useRef:Ac,useState:function(){return Wi(xa)},useDebugValue:Ki,useDeferredValue:function(r){var n=Je();return me===null?n.memoizedState=r:yc(n,me.memoizedState,r)},useTransition:function(){var r=Wi(xa)[0],n=Je().memoizedState;return[r,n]},useMutableSource:pc,useSyncExternalStore:fc,useId:Mc,unstable_isNewReconciler:!1};function Pn(r,n){try{var a="",i=n;do a+=Z(i),i=i.return;while(i);var o=a}catch(c){o=`
Error generating stack: `+c.message+`
`+c.stack}return{value:r,source:n,stack:o,digest:null}}function Qi(r,n,a){return{value:r,source:null,stack:a??null,digest:n??null}}function $i(r,n){try{console.error(n.value)}catch(a){setTimeout(function(){throw a})}}var tu=typeof WeakMap=="function"?WeakMap:Map;function Bc(r,n,a){a=Lr(-1,a),a.tag=3,a.payload={element:null};var i=n.value;return a.callback=function(){Os||(Os=!0,jl=i),$i(r,n)},a}function Vc(r,n,a){a=Lr(-1,a),a.tag=3;var i=r.type.getDerivedStateFromError;if(typeof i=="function"){var o=n.value;a.payload=function(){return i(o)},a.callback=function(){$i(r,n)}}var c=r.stateNode;return c!==null&&typeof c.componentDidCatch=="function"&&(a.callback=function(){$i(r,n),typeof i!="function"&&(Yr===null?Yr=new Set([this]):Yr.add(this));var t=n.stack;this.componentDidCatch(n.value,{componentStack:t!==null?t:""})}),a}function Fc(r,n,a){var i=r.pingCache;if(i===null){i=r.pingCache=new tu;var o=new Set;i.set(n,o)}else o=i.get(n),o===void 0&&(o=new Set,i.set(n,o));o.has(a)||(o.add(a),r=Cu.bind(null,r,n,a),n.then(r,r))}function qc(r){do{var n;if((n=r.tag===13)&&(n=r.memoizedState,n=n!==null?n.dehydrated!==null:!0),n)return r;r=r.return}while(r!==null);return null}function kc(r,n,a,i,o){return(r.mode&1)===0?(r===n?r.flags|=65536:(r.flags|=128,a.flags|=131072,a.flags&=-52805,a.tag===1&&(a.alternate===null?a.tag=17:(n=Lr(-1,1),n.tag=2,wr(a,n,1))),a.lanes|=1),r):(r.flags|=65536,r.lanes=o,r)}var du=Ae.ReactCurrentOwner,Ve=!1;function Pe(r,n,a,i){n.child=r===null?mc(n,null,a,i):Tn(n,r.child,a,i)}function wc(r,n,a,i,o){a=a.render;var c=n.ref;return bn(n,o),i=Yi(r,n,a,i,c,o),a=_i(),r!==null&&!Ve?(n.updateQueue=r.updateQueue,n.flags&=-2053,r.lanes&=~o,br(r,n,o)):(ie&&a&&Ni(n),n.flags|=1,Pe(r,n,i,o),n.child)}function Gc(r,n,a,i,o){if(r===null){var c=a.type;return typeof c=="function"&&!Il(c)&&c.defaultProps===void 0&&a.compare===null&&a.defaultProps===void 0?(n.tag=15,n.type=c,Yc(r,n,c,i,o)):(r=As(a.type,null,i,n,n.mode,o),r.ref=n.ref,r.return=n,n.child=r)}if(c=r.child,(r.lanes&o)===0){var t=c.memoizedProps;if(a=a.compare,a=a!==null?a:ea,a(t,i)&&r.ref===n.ref)return br(r,n,o)}return n.flags|=1,r=Xr(c,i),r.ref=n.ref,r.return=n,n.child=r}function Yc(r,n,a,i,o){if(r!==null){var c=r.memoizedProps;if(ea(c,i)&&r.ref===n.ref)if(Ve=!1,n.pendingProps=i=c,(r.lanes&o)!==0)(r.flags&131072)!==0&&(Ve=!0);else return n.lanes=r.lanes,br(r,n,o)}return Zi(r,n,a,i,o)}function _c(r,n,a){var i=n.pendingProps,o=i.children,c=r!==null?r.memoizedState:null;if(i.mode==="hidden")if((n.mode&1)===0)n.memoizedState={baseLanes:0,cachePool:null,transitions:null},J(Mn,He),He|=a;else{if((a&1073741824)===0)return r=c!==null?c.baseLanes|a:a,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:r,cachePool:null,transitions:null},n.updateQueue=null,J(Mn,He),He|=r,null;n.memoizedState={baseLanes:0,cachePool:null,transitions:null},i=c!==null?c.baseLanes:a,J(Mn,He),He|=i}else c!==null?(i=c.baseLanes|a,n.memoizedState=null):i=a,J(Mn,He),He|=i;return Pe(r,n,o,a),n.child}function Hc(r,n){var a=n.ref;(r===null&&a!==null||r!==null&&r.ref!==a)&&(n.flags|=512,n.flags|=2097152)}function Zi(r,n,a,i,o){var c=Be(a)?Jr:Ne.current;return c=Cn(n,c),bn(n,o),a=Yi(r,n,a,i,c,o),i=_i(),r!==null&&!Ve?(n.updateQueue=r.updateQueue,n.flags&=-2053,r.lanes&=~o,br(r,n,o)):(ie&&i&&Ni(n),n.flags|=1,Pe(r,n,a,o),n.child)}function Wc(r,n,a,i,o){if(Be(a)){var c=!0;Ka(n)}else c=!1;if(bn(n,o),n.stateNode===null)xs(r,n),dc(n,a,i),Bi(n,a,i,o),i=!0;else if(r===null){var t=n.stateNode,u=n.memoizedProps;t.props=u;var j=t.context,f=a.contextType;typeof f=="object"&&f!==null?f=Ze(f):(f=Be(a)?Jr:Ne.current,f=Cn(n,f));var v=a.getDerivedStateFromProps,C=typeof v=="function"||typeof t.getSnapshotBeforeUpdate=="function";C||typeof t.UNSAFE_componentWillReceiveProps!="function"&&typeof t.componentWillReceiveProps!="function"||(u!==i||j!==f)&&uc(n,t,i,f),kr=!1;var E=n.memoizedState;t.state=E,as(n,i,t,o),j=n.memoizedState,u!==i||E!==j||ze.current||kr?(typeof v=="function"&&(zi(n,a,v,i),j=n.memoizedState),(u=kr||tc(n,a,u,i,E,j,f))?(C||typeof t.UNSAFE_componentWillMount!="function"&&typeof t.componentWillMount!="function"||(typeof t.componentWillMount=="function"&&t.componentWillMount(),typeof t.UNSAFE_componentWillMount=="function"&&t.UNSAFE_componentWillMount()),typeof t.componentDidMount=="function"&&(n.flags|=4194308)):(typeof t.componentDidMount=="function"&&(n.flags|=4194308),n.memoizedProps=i,n.memoizedState=j),t.props=i,t.state=j,t.context=f,i=u):(typeof t.componentDidMount=="function"&&(n.flags|=4194308),i=!1)}else{t=n.stateNode,ic(r,n),u=n.memoizedProps,f=n.type===n.elementType?u:cr(n.type,u),t.props=f,C=n.pendingProps,E=t.context,j=a.contextType,typeof j=="object"&&j!==null?j=Ze(j):(j=Be(a)?Jr:Ne.current,j=Cn(n,j));var S=a.getDerivedStateFromProps;(v=typeof S=="function"||typeof t.getSnapshotBeforeUpdate=="function")||typeof t.UNSAFE_componentWillReceiveProps!="function"&&typeof t.componentWillReceiveProps!="function"||(u!==C||E!==j)&&uc(n,t,i,j),kr=!1,E=n.memoizedState,t.state=E,as(n,i,t,o);var b=n.memoizedState;u!==C||E!==b||ze.current||kr?(typeof S=="function"&&(zi(n,a,S,i),b=n.memoizedState),(f=kr||tc(n,a,f,i,E,b,j)||!1)?(v||typeof t.UNSAFE_componentWillUpdate!="function"&&typeof t.componentWillUpdate!="function"||(typeof t.componentWillUpdate=="function"&&t.componentWillUpdate(i,b,j),typeof t.UNSAFE_componentWillUpdate=="function"&&t.UNSAFE_componentWillUpdate(i,b,j)),typeof t.componentDidUpdate=="function"&&(n.flags|=4),typeof t.getSnapshotBeforeUpdate=="function"&&(n.flags|=1024)):(typeof t.componentDidUpdate!="function"||u===r.memoizedProps&&E===r.memoizedState||(n.flags|=4),typeof t.getSnapshotBeforeUpdate!="function"||u===r.memoizedProps&&E===r.memoizedState||(n.flags|=1024),n.memoizedProps=i,n.memoizedState=b),t.props=i,t.state=b,t.context=j,i=f):(typeof t.componentDidUpdate!="function"||u===r.memoizedProps&&E===r.memoizedState||(n.flags|=4),typeof t.getSnapshotBeforeUpdate!="function"||u===r.memoizedProps&&E===r.memoizedState||(n.flags|=1024),i=!1)}return Ji(r,n,a,i,c,o)}function Ji(r,n,a,i,o,c){Hc(r,n);var t=(n.flags&128)!==0;if(!i&&!t)return o&&$o(n,a,!1),br(r,n,c);i=n.stateNode,du.current=n;var u=t&&typeof a.getDerivedStateFromError!="function"?null:i.render();return n.flags|=1,r!==null&&t?(n.child=Tn(n,r.child,null,c),n.child=Tn(n,null,u,c)):Pe(r,n,u,c),n.memoizedState=i.state,o&&$o(n,a,!0),n.child}function Xc(r){var n=r.stateNode;n.pendingContext?Ko(r,n.pendingContext,n.pendingContext!==n.context):n.context&&Ko(r,n.context,!1),Vi(r,n.containerInfo)}function Kc(r,n,a,i,o){return Sn(),Ti(o),n.flags|=256,Pe(r,n,a,i),n.child}var el={dehydrated:null,treeContext:null,retryLane:0};function rl(r){return{baseLanes:r,cachePool:null,transitions:null}}function Qc(r,n,a){var i=n.pendingProps,o=oe.current,c=!1,t=(n.flags&128)!==0,u;if((u=t)||(u=r!==null&&r.memoizedState===null?!1:(o&2)!==0),u?(c=!0,n.flags&=-129):(r===null||r.memoizedState!==null)&&(o|=1),J(oe,o&1),r===null)return bi(n),r=n.memoizedState,r!==null&&(r=r.dehydrated,r!==null)?((n.mode&1)===0?n.lanes=1:r.data==="$!"?n.lanes=8:n.lanes=1073741824,null):(t=i.children,r=i.fallback,c?(i=n.mode,c=n.child,t={mode:"hidden",children:t},(i&1)===0&&c!==null?(c.childLanes=0,c.pendingProps=t):c=Ns(t,i,0,null),r=dn(r,i,a,null),c.return=n,r.return=n,c.sibling=r,n.child=c,n.child.memoizedState=rl(a),n.memoizedState=el,r):nl(n,t));if(o=r.memoizedState,o!==null&&(u=o.dehydrated,u!==null))return uu(r,n,t,i,u,o,a);if(c){c=i.fallback,t=n.mode,o=r.child,u=o.sibling;var j={mode:"hidden",children:i.children};return(t&1)===0&&n.child!==o?(i=n.child,i.childLanes=0,i.pendingProps=j,n.deletions=null):(i=Xr(o,j),i.subtreeFlags=o.subtreeFlags&14680064),u!==null?c=Xr(u,c):(c=dn(c,t,a,null),c.flags|=2),c.return=n,i.return=n,i.sibling=c,n.child=i,i=c,c=n.child,t=r.child.memoizedState,t=t===null?rl(a):{baseLanes:t.baseLanes|a,cachePool:null,transitions:t.transitions},c.memoizedState=t,c.childLanes=r.childLanes&~a,n.memoizedState=el,i}return c=r.child,r=c.sibling,i=Xr(c,{mode:"visible",children:i.children}),(n.mode&1)===0&&(i.lanes=a),i.return=n,i.sibling=null,r!==null&&(a=n.deletions,a===null?(n.deletions=[r],n.flags|=16):a.push(r)),n.child=i,n.memoizedState=null,i}function nl(r,n){return n=Ns({mode:"visible",children:n},r.mode,0,null),n.return=r,r.child=n}function js(r,n,a,i){return i!==null&&Ti(i),Tn(n,r.child,null,a),r=nl(n,n.pendingProps.children),r.flags|=2,n.memoizedState=null,r}function uu(r,n,a,i,o,c,t){if(a)return n.flags&256?(n.flags&=-257,i=Qi(Error(d(422))),js(r,n,t,i)):n.memoizedState!==null?(n.child=r.child,n.flags|=128,null):(c=i.fallback,o=n.mode,i=Ns({mode:"visible",children:i.children},o,0,null),c=dn(c,o,t,null),c.flags|=2,i.return=n,c.return=n,i.sibling=c,n.child=i,(n.mode&1)!==0&&Tn(n,r.child,null,t),n.child.memoizedState=rl(t),n.memoizedState=el,c);if((n.mode&1)===0)return js(r,n,t,null);if(o.data==="$!"){if(i=o.nextSibling&&o.nextSibling.dataset,i)var u=i.dgst;return i=u,c=Error(d(419)),i=Qi(c,i,void 0),js(r,n,t,i)}if(u=(t&r.childLanes)!==0,Ve||u){if(i=Ie,i!==null){switch(t&-t){case 4:o=2;break;case 16:o=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:o=32;break;case 536870912:o=268435456;break;default:o=0}o=(o&(i.suspendedLanes|t))!==0?0:o,o!==0&&o!==c.retryLane&&(c.retryLane=o,Sr(r,o),ur(i,r,o,-1))}return Ol(),i=Qi(Error(d(421))),js(r,n,t,i)}return o.data==="$?"?(n.flags|=128,n.child=r.child,n=Au.bind(null,r),o._reactRetry=n,null):(r=c.treeContext,_e=Br(o.nextSibling),Ye=n,ie=!0,or=null,r!==null&&(Qe[$e++]=Ar,Qe[$e++]=Nr,Qe[$e++]=en,Ar=r.id,Nr=r.overflow,en=n),n=nl(n,i.children),n.flags|=4096,n)}function $c(r,n,a){r.lanes|=n;var i=r.alternate;i!==null&&(i.lanes|=n),Mi(r.return,n,a)}function al(r,n,a,i,o){var c=r.memoizedState;c===null?r.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:i,tail:a,tailMode:o}:(c.isBackwards=n,c.rendering=null,c.renderingStartTime=0,c.last=i,c.tail=a,c.tailMode=o)}function Zc(r,n,a){var i=n.pendingProps,o=i.revealOrder,c=i.tail;if(Pe(r,n,i.children,a),i=oe.current,(i&2)!==0)i=i&1|2,n.flags|=128;else{if(r!==null&&(r.flags&128)!==0)e:for(r=n.child;r!==null;){if(r.tag===13)r.memoizedState!==null&&$c(r,a,n);else if(r.tag===19)$c(r,a,n);else if(r.child!==null){r.child.return=r,r=r.child;continue}if(r===n)break e;for(;r.sibling===null;){if(r.return===null||r.return===n)break e;r=r.return}r.sibling.return=r.return,r=r.sibling}i&=1}if(J(oe,i),(n.mode&1)===0)n.memoizedState=null;else switch(o){case"forwards":for(a=n.child,o=null;a!==null;)r=a.alternate,r!==null&&ls(r)===null&&(o=a),a=a.sibling;a=o,a===null?(o=n.child,n.child=null):(o=a.sibling,a.sibling=null),al(n,!1,o,a,c);break;case"backwards":for(a=null,o=n.child,n.child=null;o!==null;){if(r=o.alternate,r!==null&&ls(r)===null){n.child=o;break}r=o.sibling,o.sibling=a,a=o,o=r}al(n,!0,a,null,c);break;case"together":al(n,!1,null,null,void 0);break;default:n.memoizedState=null}return n.child}function xs(r,n){(n.mode&1)===0&&r!==null&&(r.alternate=null,n.alternate=null,n.flags|=2)}function br(r,n,a){if(r!==null&&(n.dependencies=r.dependencies),ln|=n.lanes,(a&n.childLanes)===0)return null;if(r!==null&&n.child!==r.child)throw Error(d(153));if(n.child!==null){for(r=n.child,a=Xr(r,r.pendingProps),n.child=a,a.return=n;r.sibling!==null;)r=r.sibling,a=a.sibling=Xr(r,r.pendingProps),a.return=n;a.sibling=null}return n.child}function ju(r,n,a){switch(n.tag){case 3:Xc(n),Sn();break;case 5:hc(n);break;case 1:Be(n.type)&&Ka(n);break;case 4:Vi(n,n.stateNode.containerInfo);break;case 10:var i=n.type._context,o=n.memoizedProps.value;J(es,i._currentValue),i._currentValue=o;break;case 13:if(i=n.memoizedState,i!==null)return i.dehydrated!==null?(J(oe,oe.current&1),n.flags|=128,null):(a&n.child.childLanes)!==0?Qc(r,n,a):(J(oe,oe.current&1),r=br(r,n,a),r!==null?r.sibling:null);J(oe,oe.current&1);break;case 19:if(i=(a&n.childLanes)!==0,(r.flags&128)!==0){if(i)return Zc(r,n,a);n.flags|=128}if(o=n.memoizedState,o!==null&&(o.rendering=null,o.tail=null,o.lastEffect=null),J(oe,oe.current),i)break;return null;case 22:case 23:return n.lanes=0,_c(r,n,a)}return br(r,n,a)}var Jc,sl,et,rt;Jc=function(r,n){for(var a=n.child;a!==null;){if(a.tag===5||a.tag===6)r.appendChild(a.stateNode);else if(a.tag!==4&&a.child!==null){a.child.return=a,a=a.child;continue}if(a===n)break;for(;a.sibling===null;){if(a.return===null||a.return===n)return;a=a.return}a.sibling.return=a.return,a=a.sibling}},sl=function(){},et=function(r,n,a,i){var o=r.memoizedProps;if(o!==i){r=n.stateNode,an(fr.current);var c=null;switch(a){case"input":o=Ms(r,o),i=Ms(r,i),c=[];break;case"select":o=x({},o,{value:void 0}),i=x({},i,{value:void 0}),c=[];break;case"textarea":o=zs(r,o),i=zs(r,i),c=[];break;default:typeof o.onClick!="function"&&typeof i.onClick=="function"&&(r.onclick=Ha)}Vs(a,i);var t;a=null;for(f in o)if(!i.hasOwnProperty(f)&&o.hasOwnProperty(f)&&o[f]!=null)if(f==="style"){var u=o[f];for(t in u)u.hasOwnProperty(t)&&(a||(a={}),a[t]="")}else f!=="dangerouslySetInnerHTML"&&f!=="children"&&f!=="suppressContentEditableWarning"&&f!=="suppressHydrationWarning"&&f!=="autoFocus"&&(I.hasOwnProperty(f)?c||(c=[]):(c=c||[]).push(f,null));for(f in i){var j=i[f];if(u=o!=null?o[f]:void 0,i.hasOwnProperty(f)&&j!==u&&(j!=null||u!=null))if(f==="style")if(u){for(t in u)!u.hasOwnProperty(t)||j&&j.hasOwnProperty(t)||(a||(a={}),a[t]="");for(t in j)j.hasOwnProperty(t)&&u[t]!==j[t]&&(a||(a={}),a[t]=j[t])}else a||(c||(c=[]),c.push(f,a)),a=j;else f==="dangerouslySetInnerHTML"?(j=j?j.__html:void 0,u=u?u.__html:void 0,j!=null&&u!==j&&(c=c||[]).push(f,j)):f==="children"?typeof j!="string"&&typeof j!="number"||(c=c||[]).push(f,""+j):f!=="suppressContentEditableWarning"&&f!=="suppressHydrationWarning"&&(I.hasOwnProperty(f)?(j!=null&&f==="onScroll"&&re("scroll",r),c||u===j||(c=[])):(c=c||[]).push(f,j))}a&&(c=c||[]).push("style",a);var f=c;(n.updateQueue=f)&&(n.flags|=4)}},rt=function(r,n,a,i){a!==i&&(n.flags|=4)};function ha(r,n){if(!ie)switch(r.tailMode){case"hidden":n=r.tail;for(var a=null;n!==null;)n.alternate!==null&&(a=n),n=n.sibling;a===null?r.tail=null:a.sibling=null;break;case"collapsed":a=r.tail;for(var i=null;a!==null;)a.alternate!==null&&(i=a),a=a.sibling;i===null?n||r.tail===null?r.tail=null:r.tail.sibling=null:i.sibling=null}}function Le(r){var n=r.alternate!==null&&r.alternate.child===r.child,a=0,i=0;if(n)for(var o=r.child;o!==null;)a|=o.lanes|o.childLanes,i|=o.subtreeFlags&14680064,i|=o.flags&14680064,o.return=r,o=o.sibling;else for(o=r.child;o!==null;)a|=o.lanes|o.childLanes,i|=o.subtreeFlags,i|=o.flags,o.return=r,o=o.sibling;return r.subtreeFlags|=i,r.childLanes=a,n}function xu(r,n,a){var i=n.pendingProps;switch(Si(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Le(n),null;case 1:return Be(n.type)&&Xa(),Le(n),null;case 3:return i=n.stateNode,Dn(),ne(ze),ne(Ne),ki(),i.pendingContext&&(i.context=i.pendingContext,i.pendingContext=null),(r===null||r.child===null)&&(Ja(n)?n.flags|=4:r===null||r.memoizedState.isDehydrated&&(n.flags&256)===0||(n.flags|=1024,or!==null&&(hl(or),or=null))),sl(r,n),Le(n),null;case 5:Fi(n);var o=an(da.current);if(a=n.type,r!==null&&n.stateNode!=null)et(r,n,a,i,o),r.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!i){if(n.stateNode===null)throw Error(d(166));return Le(n),null}if(r=an(fr.current),Ja(n)){i=n.stateNode,a=n.type;var c=n.memoizedProps;switch(i[pr]=n,i[ia]=c,r=(n.mode&1)!==0,a){case"dialog":re("cancel",i),re("close",i);break;case"iframe":case"object":case"embed":re("load",i);break;case"video":case"audio":for(o=0;o<na.length;o++)re(na[o],i);break;case"source":re("error",i);break;case"img":case"image":case"link":re("error",i),re("load",i);break;case"details":re("toggle",i);break;case"input":Ml(i,c),re("invalid",i);break;case"select":i._wrapperState={wasMultiple:!!c.multiple},re("invalid",i);break;case"textarea":zl(i,c),re("invalid",i)}Vs(a,c),o=null;for(var t in c)if(c.hasOwnProperty(t)){var u=c[t];t==="children"?typeof u=="string"?i.textContent!==u&&(c.suppressHydrationWarning!==!0&&_a(i.textContent,u,r),o=["children",u]):typeof u=="number"&&i.textContent!==""+u&&(c.suppressHydrationWarning!==!0&&_a(i.textContent,u,r),o=["children",""+u]):I.hasOwnProperty(t)&&u!=null&&t==="onScroll"&&re("scroll",i)}switch(a){case"input":va(i),Ul(i,c,!0);break;case"textarea":va(i),Vl(i);break;case"select":case"option":break;default:typeof c.onClick=="function"&&(i.onclick=Ha)}i=o,n.updateQueue=i,i!==null&&(n.flags|=4)}else{t=o.nodeType===9?o:o.ownerDocument,r==="http://www.w3.org/1999/xhtml"&&(r=Fl(a)),r==="http://www.w3.org/1999/xhtml"?a==="script"?(r=t.createElement("div"),r.innerHTML="<script><\/script>",r=r.removeChild(r.firstChild)):typeof i.is=="string"?r=t.createElement(a,{is:i.is}):(r=t.createElement(a),a==="select"&&(t=r,i.multiple?t.multiple=!0:i.size&&(t.size=i.size))):r=t.createElementNS(r,a),r[pr]=n,r[ia]=i,Jc(r,n,!1,!1),n.stateNode=r;e:{switch(t=Fs(a,i),a){case"dialog":re("cancel",r),re("close",r),o=i;break;case"iframe":case"object":case"embed":re("load",r),o=i;break;case"video":case"audio":for(o=0;o<na.length;o++)re(na[o],r);o=i;break;case"source":re("error",r),o=i;break;case"img":case"image":case"link":re("error",r),re("load",r),o=i;break;case"details":re("toggle",r),o=i;break;case"input":Ml(r,i),o=Ms(r,i),re("invalid",r);break;case"option":o=i;break;case"select":r._wrapperState={wasMultiple:!!i.multiple},o=x({},i,{value:void 0}),re("invalid",r);break;case"textarea":zl(r,i),o=zs(r,i),re("invalid",r);break;default:o=i}Vs(a,o),u=o;for(c in u)if(u.hasOwnProperty(c)){var j=u[c];c==="style"?wl(r,j):c==="dangerouslySetInnerHTML"?(j=j?j.__html:void 0,j!=null&&ql(r,j)):c==="children"?typeof j=="string"?(a!=="textarea"||j!=="")&&Bn(r,j):typeof j=="number"&&Bn(r,""+j):c!=="suppressContentEditableWarning"&&c!=="suppressHydrationWarning"&&c!=="autoFocus"&&(I.hasOwnProperty(c)?j!=null&&c==="onScroll"&&re("scroll",r):j!=null&&nr(r,c,j,t))}switch(a){case"input":va(r),Ul(r,i,!1);break;case"textarea":va(r),Vl(r);break;case"option":i.value!=null&&r.setAttribute("value",""+W(i.value));break;case"select":r.multiple=!!i.multiple,c=i.value,c!=null?un(r,!!i.multiple,c,!1):i.defaultValue!=null&&un(r,!!i.multiple,i.defaultValue,!0);break;default:typeof o.onClick=="function"&&(r.onclick=Ha)}switch(a){case"button":case"input":case"select":case"textarea":i=!!i.autoFocus;break e;case"img":i=!0;break e;default:i=!1}}i&&(n.flags|=4)}n.ref!==null&&(n.flags|=512,n.flags|=2097152)}return Le(n),null;case 6:if(r&&n.stateNode!=null)rt(r,n,r.memoizedProps,i);else{if(typeof i!="string"&&n.stateNode===null)throw Error(d(166));if(a=an(da.current),an(fr.current),Ja(n)){if(i=n.stateNode,a=n.memoizedProps,i[pr]=n,(c=i.nodeValue!==a)&&(r=Ye,r!==null))switch(r.tag){case 3:_a(i.nodeValue,a,(r.mode&1)!==0);break;case 5:r.memoizedProps.suppressHydrationWarning!==!0&&_a(i.nodeValue,a,(r.mode&1)!==0)}c&&(n.flags|=4)}else i=(a.nodeType===9?a:a.ownerDocument).createTextNode(i),i[pr]=n,n.stateNode=i}return Le(n),null;case 13:if(ne(oe),i=n.memoizedState,r===null||r.memoizedState!==null&&r.memoizedState.dehydrated!==null){if(ie&&_e!==null&&(n.mode&1)!==0&&(n.flags&128)===0)ac(),Sn(),n.flags|=98560,c=!1;else if(c=Ja(n),i!==null&&i.dehydrated!==null){if(r===null){if(!c)throw Error(d(318));if(c=n.memoizedState,c=c!==null?c.dehydrated:null,!c)throw Error(d(317));c[pr]=n}else Sn(),(n.flags&128)===0&&(n.memoizedState=null),n.flags|=4;Le(n),c=!1}else or!==null&&(hl(or),or=null),c=!0;if(!c)return n.flags&65536?n:null}return(n.flags&128)!==0?(n.lanes=a,n):(i=i!==null,i!==(r!==null&&r.memoizedState!==null)&&i&&(n.child.flags|=8192,(n.mode&1)!==0&&(r===null||(oe.current&1)!==0?he===0&&(he=3):Ol())),n.updateQueue!==null&&(n.flags|=4),Le(n),null);case 4:return Dn(),sl(r,n),r===null&&aa(n.stateNode.containerInfo),Le(n),null;case 10:return yi(n.type._context),Le(n),null;case 17:return Be(n.type)&&Xa(),Le(n),null;case 19:if(ne(oe),c=n.memoizedState,c===null)return Le(n),null;if(i=(n.flags&128)!==0,t=c.rendering,t===null)if(i)ha(c,!1);else{if(he!==0||r!==null&&(r.flags&128)!==0)for(r=n.child;r!==null;){if(t=ls(r),t!==null){for(n.flags|=128,ha(c,!1),i=t.updateQueue,i!==null&&(n.updateQueue=i,n.flags|=4),n.subtreeFlags=0,i=a,a=n.child;a!==null;)c=a,r=i,c.flags&=14680066,t=c.alternate,t===null?(c.childLanes=0,c.lanes=r,c.child=null,c.subtreeFlags=0,c.memoizedProps=null,c.memoizedState=null,c.updateQueue=null,c.dependencies=null,c.stateNode=null):(c.childLanes=t.childLanes,c.lanes=t.lanes,c.child=t.child,c.subtreeFlags=0,c.deletions=null,c.memoizedProps=t.memoizedProps,c.memoizedState=t.memoizedState,c.updateQueue=t.updateQueue,c.type=t.type,r=t.dependencies,c.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext}),a=a.sibling;return J(oe,oe.current&1|2),n.child}r=r.sibling}c.tail!==null&&ue()>Rn&&(n.flags|=128,i=!0,ha(c,!1),n.lanes=4194304)}else{if(!i)if(r=ls(t),r!==null){if(n.flags|=128,i=!0,a=r.updateQueue,a!==null&&(n.updateQueue=a,n.flags|=4),ha(c,!0),c.tail===null&&c.tailMode==="hidden"&&!t.alternate&&!ie)return Le(n),null}else 2*ue()-c.renderingStartTime>Rn&&a!==1073741824&&(n.flags|=128,i=!0,ha(c,!1),n.lanes=4194304);c.isBackwards?(t.sibling=n.child,n.child=t):(a=c.last,a!==null?a.sibling=t:n.child=t,c.last=t)}return c.tail!==null?(n=c.tail,c.rendering=n,c.tail=n.sibling,c.renderingStartTime=ue(),n.sibling=null,a=oe.current,J(oe,i?a&1|2:a&1),n):(Le(n),null);case 22:case 23:return fl(),i=n.memoizedState!==null,r!==null&&r.memoizedState!==null!==i&&(n.flags|=8192),i&&(n.mode&1)!==0?(He&1073741824)!==0&&(Le(n),n.subtreeFlags&6&&(n.flags|=8192)):Le(n),null;case 24:return null;case 25:return null}throw Error(d(156,n.tag))}function mu(r,n){switch(Si(n),n.tag){case 1:return Be(n.type)&&Xa(),r=n.flags,r&65536?(n.flags=r&-65537|128,n):null;case 3:return Dn(),ne(ze),ne(Ne),ki(),r=n.flags,(r&65536)!==0&&(r&128)===0?(n.flags=r&-65537|128,n):null;case 5:return Fi(n),null;case 13:if(ne(oe),r=n.memoizedState,r!==null&&r.dehydrated!==null){if(n.alternate===null)throw Error(d(340));Sn()}return r=n.flags,r&65536?(n.flags=r&-65537|128,n):null;case 19:return ne(oe),null;case 4:return Dn(),null;case 10:return yi(n.type._context),null;case 22:case 23:return fl(),null;case 24:return null;default:return null}}var ms=!1,be=!1,hu=typeof WeakSet=="function"?WeakSet:Set,L=null;function yn(r,n){var a=r.ref;if(a!==null)if(typeof a=="function")try{a(null)}catch(i){de(r,n,i)}else a.current=null}function il(r,n,a){try{a()}catch(i){de(r,n,i)}}var nt=!1;function pu(r,n){if(fi=Ra,r=Mo(),ti(r)){if("selectionStart"in r)var a={start:r.selectionStart,end:r.selectionEnd};else e:{a=(a=r.ownerDocument)&&a.defaultView||window;var i=a.getSelection&&a.getSelection();if(i&&i.rangeCount!==0){a=i.anchorNode;var o=i.anchorOffset,c=i.focusNode;i=i.focusOffset;try{a.nodeType,c.nodeType}catch{a=null;break e}var t=0,u=-1,j=-1,f=0,v=0,C=r,E=null;r:for(;;){for(var S;C!==a||o!==0&&C.nodeType!==3||(u=t+o),C!==c||i!==0&&C.nodeType!==3||(j=t+i),C.nodeType===3&&(t+=C.nodeValue.length),(S=C.firstChild)!==null;)E=C,C=S;for(;;){if(C===r)break r;if(E===a&&++f===o&&(u=t),E===c&&++v===i&&(j=t),(S=C.nextSibling)!==null)break;C=E,E=C.parentNode}C=S}a=u===-1||j===-1?null:{start:u,end:j}}else a=null}a=a||{start:0,end:0}}else a=null;for(Oi={focusedElem:r,selectionRange:a},Ra=!1,L=n;L!==null;)if(n=L,r=n.child,(n.subtreeFlags&1028)!==0&&r!==null)r.return=n,L=r;else for(;L!==null;){n=L;try{var b=n.alternate;if((n.flags&1024)!==0)switch(n.tag){case 0:case 11:case 15:break;case 1:if(b!==null){var T=b.memoizedProps,je=b.memoizedState,h=n.stateNode,m=h.getSnapshotBeforeUpdate(n.elementType===n.type?T:cr(n.type,T),je);h.__reactInternalSnapshotBeforeUpdate=m}break;case 3:var p=n.stateNode.containerInfo;p.nodeType===1?p.textContent="":p.nodeType===9&&p.documentElement&&p.removeChild(p.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(d(163))}}catch(A){de(n,n.return,A)}if(r=n.sibling,r!==null){r.return=n.return,L=r;break}L=n.return}return b=nt,nt=!1,b}function pa(r,n,a){var i=n.updateQueue;if(i=i!==null?i.lastEffect:null,i!==null){var o=i=i.next;do{if((o.tag&r)===r){var c=o.destroy;o.destroy=void 0,c!==void 0&&il(n,a,c)}o=o.next}while(o!==i)}}function hs(r,n){if(n=n.updateQueue,n=n!==null?n.lastEffect:null,n!==null){var a=n=n.next;do{if((a.tag&r)===r){var i=a.create;a.destroy=i()}a=a.next}while(a!==n)}}function ll(r){var n=r.ref;if(n!==null){var a=r.stateNode;switch(r.tag){case 5:r=a;break;default:r=a}typeof n=="function"?n(r):n.current=r}}function at(r){var n=r.alternate;n!==null&&(r.alternate=null,at(n)),r.child=null,r.deletions=null,r.sibling=null,r.tag===5&&(n=r.stateNode,n!==null&&(delete n[pr],delete n[ia],delete n[vi],delete n[Zd],delete n[Jd])),r.stateNode=null,r.return=null,r.dependencies=null,r.memoizedProps=null,r.memoizedState=null,r.pendingProps=null,r.stateNode=null,r.updateQueue=null}function st(r){return r.tag===5||r.tag===3||r.tag===4}function it(r){e:for(;;){for(;r.sibling===null;){if(r.return===null||st(r.return))return null;r=r.return}for(r.sibling.return=r.return,r=r.sibling;r.tag!==5&&r.tag!==6&&r.tag!==18;){if(r.flags&2||r.child===null||r.tag===4)continue e;r.child.return=r,r=r.child}if(!(r.flags&2))return r.stateNode}}function ol(r,n,a){var i=r.tag;if(i===5||i===6)r=r.stateNode,n?a.nodeType===8?a.parentNode.insertBefore(r,n):a.insertBefore(r,n):(a.nodeType===8?(n=a.parentNode,n.insertBefore(r,a)):(n=a,n.appendChild(r)),a=a._reactRootContainer,a!=null||n.onclick!==null||(n.onclick=Ha));else if(i!==4&&(r=r.child,r!==null))for(ol(r,n,a),r=r.sibling;r!==null;)ol(r,n,a),r=r.sibling}function cl(r,n,a){var i=r.tag;if(i===5||i===6)r=r.stateNode,n?a.insertBefore(r,n):a.appendChild(r);else if(i!==4&&(r=r.child,r!==null))for(cl(r,n,a),r=r.sibling;r!==null;)cl(r,n,a),r=r.sibling}var ge=null,tr=!1;function Gr(r,n,a){for(a=a.child;a!==null;)lt(r,n,a),a=a.sibling}function lt(r,n,a){if(hr&&typeof hr.onCommitFiberUnmount=="function")try{hr.onCommitFiberUnmount(ba,a)}catch{}switch(a.tag){case 5:be||yn(a,n);case 6:var i=ge,o=tr;ge=null,Gr(r,n,a),ge=i,tr=o,ge!==null&&(tr?(r=ge,a=a.stateNode,r.nodeType===8?r.parentNode.removeChild(a):r.removeChild(a)):ge.removeChild(a.stateNode));break;case 18:ge!==null&&(tr?(r=ge,a=a.stateNode,r.nodeType===8?gi(r.parentNode,a):r.nodeType===1&&gi(r,a),Xn(r)):gi(ge,a.stateNode));break;case 4:i=ge,o=tr,ge=a.stateNode.containerInfo,tr=!0,Gr(r,n,a),ge=i,tr=o;break;case 0:case 11:case 14:case 15:if(!be&&(i=a.updateQueue,i!==null&&(i=i.lastEffect,i!==null))){o=i=i.next;do{var c=o,t=c.destroy;c=c.tag,t!==void 0&&((c&2)!==0||(c&4)!==0)&&il(a,n,t),o=o.next}while(o!==i)}Gr(r,n,a);break;case 1:if(!be&&(yn(a,n),i=a.stateNode,typeof i.componentWillUnmount=="function"))try{i.props=a.memoizedProps,i.state=a.memoizedState,i.componentWillUnmount()}catch(u){de(a,n,u)}Gr(r,n,a);break;case 21:Gr(r,n,a);break;case 22:a.mode&1?(be=(i=be)||a.memoizedState!==null,Gr(r,n,a),be=i):Gr(r,n,a);break;default:Gr(r,n,a)}}function ot(r){var n=r.updateQueue;if(n!==null){r.updateQueue=null;var a=r.stateNode;a===null&&(a=r.stateNode=new hu),n.forEach(function(i){var o=Nu.bind(null,r,i);a.has(i)||(a.add(i),i.then(o,o))})}}function dr(r,n){var a=n.deletions;if(a!==null)for(var i=0;i<a.length;i++){var o=a[i];try{var c=r,t=n,u=t;e:for(;u!==null;){switch(u.tag){case 5:ge=u.stateNode,tr=!1;break e;case 3:ge=u.stateNode.containerInfo,tr=!0;break e;case 4:ge=u.stateNode.containerInfo,tr=!0;break e}u=u.return}if(ge===null)throw Error(d(160));lt(c,t,o),ge=null,tr=!1;var j=o.alternate;j!==null&&(j.return=null),o.return=null}catch(f){de(o,n,f)}}if(n.subtreeFlags&12854)for(n=n.child;n!==null;)ct(n,r),n=n.sibling}function ct(r,n){var a=r.alternate,i=r.flags;switch(r.tag){case 0:case 11:case 14:case 15:if(dr(n,r),Ir(r),i&4){try{pa(3,r,r.return),hs(3,r)}catch(T){de(r,r.return,T)}try{pa(5,r,r.return)}catch(T){de(r,r.return,T)}}break;case 1:dr(n,r),Ir(r),i&512&&a!==null&&yn(a,a.return);break;case 5:if(dr(n,r),Ir(r),i&512&&a!==null&&yn(a,a.return),r.flags&32){var o=r.stateNode;try{Bn(o,"")}catch(T){de(r,r.return,T)}}if(i&4&&(o=r.stateNode,o!=null)){var c=r.memoizedProps,t=a!==null?a.memoizedProps:c,u=r.type,j=r.updateQueue;if(r.updateQueue=null,j!==null)try{u==="input"&&c.type==="radio"&&c.name!=null&&Rl(o,c),Fs(u,t);var f=Fs(u,c);for(t=0;t<j.length;t+=2){var v=j[t],C=j[t+1];v==="style"?wl(o,C):v==="dangerouslySetInnerHTML"?ql(o,C):v==="children"?Bn(o,C):nr(o,v,C,f)}switch(u){case"input":Rs(o,c);break;case"textarea":Bl(o,c);break;case"select":var E=o._wrapperState.wasMultiple;o._wrapperState.wasMultiple=!!c.multiple;var S=c.value;S!=null?un(o,!!c.multiple,S,!1):E!==!!c.multiple&&(c.defaultValue!=null?un(o,!!c.multiple,c.defaultValue,!0):un(o,!!c.multiple,c.multiple?[]:"",!1))}o[ia]=c}catch(T){de(r,r.return,T)}}break;case 6:if(dr(n,r),Ir(r),i&4){if(r.stateNode===null)throw Error(d(162));o=r.stateNode,c=r.memoizedProps;try{o.nodeValue=c}catch(T){de(r,r.return,T)}}break;case 3:if(dr(n,r),Ir(r),i&4&&a!==null&&a.memoizedState.isDehydrated)try{Xn(n.containerInfo)}catch(T){de(r,r.return,T)}break;case 4:dr(n,r),Ir(r);break;case 13:dr(n,r),Ir(r),o=r.child,o.flags&8192&&(c=o.memoizedState!==null,o.stateNode.isHidden=c,!c||o.alternate!==null&&o.alternate.memoizedState!==null||(ul=ue())),i&4&&ot(r);break;case 22:if(v=a!==null&&a.memoizedState!==null,r.mode&1?(be=(f=be)||v,dr(n,r),be=f):dr(n,r),Ir(r),i&8192){if(f=r.memoizedState!==null,(r.stateNode.isHidden=f)&&!v&&(r.mode&1)!==0)for(L=r,v=r.child;v!==null;){for(C=L=v;L!==null;){switch(E=L,S=E.child,E.tag){case 0:case 11:case 14:case 15:pa(4,E,E.return);break;case 1:yn(E,E.return);var b=E.stateNode;if(typeof b.componentWillUnmount=="function"){i=E,a=E.return;try{n=i,b.props=n.memoizedProps,b.state=n.memoizedState,b.componentWillUnmount()}catch(T){de(i,a,T)}}break;case 5:yn(E,E.return);break;case 22:if(E.memoizedState!==null){ut(C);continue}}S!==null?(S.return=E,L=S):ut(C)}v=v.sibling}e:for(v=null,C=r;;){if(C.tag===5){if(v===null){v=C;try{o=C.stateNode,f?(c=o.style,typeof c.setProperty=="function"?c.setProperty("display","none","important"):c.display="none"):(u=C.stateNode,j=C.memoizedProps.style,t=j!=null&&j.hasOwnProperty("display")?j.display:null,u.style.display=kl("display",t))}catch(T){de(r,r.return,T)}}}else if(C.tag===6){if(v===null)try{C.stateNode.nodeValue=f?"":C.memoizedProps}catch(T){de(r,r.return,T)}}else if((C.tag!==22&&C.tag!==23||C.memoizedState===null||C===r)&&C.child!==null){C.child.return=C,C=C.child;continue}if(C===r)break e;for(;C.sibling===null;){if(C.return===null||C.return===r)break e;v===C&&(v=null),C=C.return}v===C&&(v=null),C.sibling.return=C.return,C=C.sibling}}break;case 19:dr(n,r),Ir(r),i&4&&ot(r);break;case 21:break;default:dr(n,r),Ir(r)}}function Ir(r){var n=r.flags;if(n&2){try{e:{for(var a=r.return;a!==null;){if(st(a)){var i=a;break e}a=a.return}throw Error(d(160))}switch(i.tag){case 5:var o=i.stateNode;i.flags&32&&(Bn(o,""),i.flags&=-33);var c=it(r);cl(r,c,o);break;case 3:case 4:var t=i.stateNode.containerInfo,u=it(r);ol(r,u,t);break;default:throw Error(d(161))}}catch(j){de(r,r.return,j)}r.flags&=-3}n&4096&&(r.flags&=-4097)}function fu(r,n,a){L=r,tt(r)}function tt(r,n,a){for(var i=(r.mode&1)!==0;L!==null;){var o=L,c=o.child;if(o.tag===22&&i){var t=o.memoizedState!==null||ms;if(!t){var u=o.alternate,j=u!==null&&u.memoizedState!==null||be;u=ms;var f=be;if(ms=t,(be=j)&&!f)for(L=o;L!==null;)t=L,j=t.child,t.tag===22&&t.memoizedState!==null?jt(o):j!==null?(j.return=t,L=j):jt(o);for(;c!==null;)L=c,tt(c),c=c.sibling;L=o,ms=u,be=f}dt(r)}else(o.subtreeFlags&8772)!==0&&c!==null?(c.return=o,L=c):dt(r)}}function dt(r){for(;L!==null;){var n=L;if((n.flags&8772)!==0){var a=n.alternate;try{if((n.flags&8772)!==0)switch(n.tag){case 0:case 11:case 15:be||hs(5,n);break;case 1:var i=n.stateNode;if(n.flags&4&&!be)if(a===null)i.componentDidMount();else{var o=n.elementType===n.type?a.memoizedProps:cr(n.type,a.memoizedProps);i.componentDidUpdate(o,a.memoizedState,i.__reactInternalSnapshotBeforeUpdate)}var c=n.updateQueue;c!==null&&oc(n,c,i);break;case 3:var t=n.updateQueue;if(t!==null){if(a=null,n.child!==null)switch(n.child.tag){case 5:a=n.child.stateNode;break;case 1:a=n.child.stateNode}oc(n,t,a)}break;case 5:var u=n.stateNode;if(a===null&&n.flags&4){a=u;var j=n.memoizedProps;switch(n.type){case"button":case"input":case"select":case"textarea":j.autoFocus&&a.focus();break;case"img":j.src&&(a.src=j.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(n.memoizedState===null){var f=n.alternate;if(f!==null){var v=f.memoizedState;if(v!==null){var C=v.dehydrated;C!==null&&Xn(C)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(d(163))}be||n.flags&512&&ll(n)}catch(E){de(n,n.return,E)}}if(n===r){L=null;break}if(a=n.sibling,a!==null){a.return=n.return,L=a;break}L=n.return}}function ut(r){for(;L!==null;){var n=L;if(n===r){L=null;break}var a=n.sibling;if(a!==null){a.return=n.return,L=a;break}L=n.return}}function jt(r){for(;L!==null;){var n=L;try{switch(n.tag){case 0:case 11:case 15:var a=n.return;try{hs(4,n)}catch(j){de(n,a,j)}break;case 1:var i=n.stateNode;if(typeof i.componentDidMount=="function"){var o=n.return;try{i.componentDidMount()}catch(j){de(n,o,j)}}var c=n.return;try{ll(n)}catch(j){de(n,c,j)}break;case 5:var t=n.return;try{ll(n)}catch(j){de(n,t,j)}}}catch(j){de(n,n.return,j)}if(n===r){L=null;break}var u=n.sibling;if(u!==null){u.return=n.return,L=u;break}L=n.return}}var Ou=Math.ceil,ps=Ae.ReactCurrentDispatcher,tl=Ae.ReactCurrentOwner,er=Ae.ReactCurrentBatchConfig,Y=0,Ie=null,xe=null,ve=0,He=0,Mn=Vr(0),he=0,fa=null,ln=0,fs=0,dl=0,Oa=null,Fe=null,ul=0,Rn=1/0,Tr=null,Os=!1,jl=null,Yr=null,Is=!1,_r=null,Es=0,Ia=0,xl=null,gs=-1,vs=0;function ye(){return(Y&6)!==0?ue():gs!==-1?gs:gs=ue()}function Hr(r){return(r.mode&1)===0?1:(Y&2)!==0&&ve!==0?ve&-ve:ru.transition!==null?(vs===0&&(vs=ao()),vs):(r=X,r!==0||(r=window.event,r=r===void 0?16:xo(r.type)),r)}function ur(r,n,a,i){if(50<Ia)throw Ia=0,xl=null,Error(d(185));Gn(r,a,i),((Y&2)===0||r!==Ie)&&(r===Ie&&((Y&2)===0&&(fs|=a),he===4&&Wr(r,ve)),qe(r,i),a===1&&Y===0&&(n.mode&1)===0&&(Rn=ue()+500,Qa&&qr()))}function qe(r,n){var a=r.callbackNode;rd(r,n);var i=Pa(r,r===Ie?ve:0);if(i===0)a!==null&&eo(a),r.callbackNode=null,r.callbackPriority=0;else if(n=i&-i,r.callbackPriority!==n){if(a!=null&&eo(a),n===1)r.tag===0?eu(mt.bind(null,r)):Zo(mt.bind(null,r)),Qd(function(){(Y&6)===0&&qr()}),a=null;else{switch(so(i)){case 1:a=Hs;break;case 4:a=ro;break;case 16:a=La;break;case 536870912:a=no;break;default:a=La}a=vt(a,xt.bind(null,r))}r.callbackPriority=n,r.callbackNode=a}}function xt(r,n){if(gs=-1,vs=0,(Y&6)!==0)throw Error(d(327));var a=r.callbackNode;if(Un()&&r.callbackNode!==a)return null;var i=Pa(r,r===Ie?ve:0);if(i===0)return null;if((i&30)!==0||(i&r.expiredLanes)!==0||n)n=Cs(r,i);else{n=i;var o=Y;Y|=2;var c=pt();(Ie!==r||ve!==n)&&(Tr=null,Rn=ue()+500,cn(r,n));do try{gu();break}catch(u){ht(r,u)}while(!0);Pi(),ps.current=c,Y=o,xe!==null?n=0:(Ie=null,ve=0,n=he)}if(n!==0){if(n===2&&(o=Ws(r),o!==0&&(i=o,n=ml(r,o))),n===1)throw a=fa,cn(r,0),Wr(r,i),qe(r,ue()),a;if(n===6)Wr(r,i);else{if(o=r.current.alternate,(i&30)===0&&!Iu(o)&&(n=Cs(r,i),n===2&&(c=Ws(r),c!==0&&(i=c,n=ml(r,c))),n===1))throw a=fa,cn(r,0),Wr(r,i),qe(r,ue()),a;switch(r.finishedWork=o,r.finishedLanes=i,n){case 0:case 1:throw Error(d(345));case 2:tn(r,Fe,Tr);break;case 3:if(Wr(r,i),(i&130023424)===i&&(n=ul+500-ue(),10<n)){if(Pa(r,0)!==0)break;if(o=r.suspendedLanes,(o&i)!==i){ye(),r.pingedLanes|=r.suspendedLanes&o;break}r.timeoutHandle=Ei(tn.bind(null,r,Fe,Tr),n);break}tn(r,Fe,Tr);break;case 4:if(Wr(r,i),(i&4194240)===i)break;for(n=r.eventTimes,o=-1;0<i;){var t=31-ir(i);c=1<<t,t=n[t],t>o&&(o=t),i&=~c}if(i=o,i=ue()-i,i=(120>i?120:480>i?480:1080>i?1080:1920>i?1920:3e3>i?3e3:4320>i?4320:1960*Ou(i/1960))-i,10<i){r.timeoutHandle=Ei(tn.bind(null,r,Fe,Tr),i);break}tn(r,Fe,Tr);break;case 5:tn(r,Fe,Tr);break;default:throw Error(d(329))}}}return qe(r,ue()),r.callbackNode===a?xt.bind(null,r):null}function ml(r,n){var a=Oa;return r.current.memoizedState.isDehydrated&&(cn(r,n).flags|=256),r=Cs(r,n),r!==2&&(n=Fe,Fe=a,n!==null&&hl(n)),r}function hl(r){Fe===null?Fe=r:Fe.push.apply(Fe,r)}function Iu(r){for(var n=r;;){if(n.flags&16384){var a=n.updateQueue;if(a!==null&&(a=a.stores,a!==null))for(var i=0;i<a.length;i++){var o=a[i],c=o.getSnapshot;o=o.value;try{if(!lr(c(),o))return!1}catch{return!1}}}if(a=n.child,n.subtreeFlags&16384&&a!==null)a.return=n,n=a;else{if(n===r)break;for(;n.sibling===null;){if(n.return===null||n.return===r)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}function Wr(r,n){for(n&=~dl,n&=~fs,r.suspendedLanes|=n,r.pingedLanes&=~n,r=r.expirationTimes;0<n;){var a=31-ir(n),i=1<<a;r[a]=-1,n&=~i}}function mt(r){if((Y&6)!==0)throw Error(d(327));Un();var n=Pa(r,0);if((n&1)===0)return qe(r,ue()),null;var a=Cs(r,n);if(r.tag!==0&&a===2){var i=Ws(r);i!==0&&(n=i,a=ml(r,i))}if(a===1)throw a=fa,cn(r,0),Wr(r,n),qe(r,ue()),a;if(a===6)throw Error(d(345));return r.finishedWork=r.current.alternate,r.finishedLanes=n,tn(r,Fe,Tr),qe(r,ue()),null}function pl(r,n){var a=Y;Y|=1;try{return r(n)}finally{Y=a,Y===0&&(Rn=ue()+500,Qa&&qr())}}function on(r){_r!==null&&_r.tag===0&&(Y&6)===0&&Un();var n=Y;Y|=1;var a=er.transition,i=X;try{if(er.transition=null,X=1,r)return r()}finally{X=i,er.transition=a,Y=n,(Y&6)===0&&qr()}}function fl(){He=Mn.current,ne(Mn)}function cn(r,n){r.finishedWork=null,r.finishedLanes=0;var a=r.timeoutHandle;if(a!==-1&&(r.timeoutHandle=-1,Kd(a)),xe!==null)for(a=xe.return;a!==null;){var i=a;switch(Si(i),i.tag){case 1:i=i.type.childContextTypes,i!=null&&Xa();break;case 3:Dn(),ne(ze),ne(Ne),ki();break;case 5:Fi(i);break;case 4:Dn();break;case 13:ne(oe);break;case 19:ne(oe);break;case 10:yi(i.type._context);break;case 22:case 23:fl()}a=a.return}if(Ie=r,xe=r=Xr(r.current,null),ve=He=n,he=0,fa=null,dl=fs=ln=0,Fe=Oa=null,nn!==null){for(n=0;n<nn.length;n++)if(a=nn[n],i=a.interleaved,i!==null){a.interleaved=null;var o=i.next,c=a.pending;if(c!==null){var t=c.next;c.next=o,i.next=t}a.pending=i}nn=null}return r}function ht(r,n){do{var a=xe;try{if(Pi(),os.current=us,cs){for(var i=ce.memoizedState;i!==null;){var o=i.queue;o!==null&&(o.pending=null),i=i.next}cs=!1}if(sn=0,Oe=me=ce=null,ua=!1,ja=0,tl.current=null,a===null||a.return===null){he=1,fa=n,xe=null;break}e:{var c=r,t=a.return,u=a,j=n;if(n=ve,u.flags|=32768,j!==null&&typeof j=="object"&&typeof j.then=="function"){var f=j,v=u,C=v.tag;if((v.mode&1)===0&&(C===0||C===11||C===15)){var E=v.alternate;E?(v.updateQueue=E.updateQueue,v.memoizedState=E.memoizedState,v.lanes=E.lanes):(v.updateQueue=null,v.memoizedState=null)}var S=qc(t);if(S!==null){S.flags&=-257,kc(S,t,u,c,n),S.mode&1&&Fc(c,f,n),n=S,j=f;var b=n.updateQueue;if(b===null){var T=new Set;T.add(j),n.updateQueue=T}else b.add(j);break e}else{if((n&1)===0){Fc(c,f,n),Ol();break e}j=Error(d(426))}}else if(ie&&u.mode&1){var je=qc(t);if(je!==null){(je.flags&65536)===0&&(je.flags|=256),kc(je,t,u,c,n),Ti(Pn(j,u));break e}}c=j=Pn(j,u),he!==4&&(he=2),Oa===null?Oa=[c]:Oa.push(c),c=t;do{switch(c.tag){case 3:c.flags|=65536,n&=-n,c.lanes|=n;var h=Bc(c,j,n);lc(c,h);break e;case 1:u=j;var m=c.type,p=c.stateNode;if((c.flags&128)===0&&(typeof m.getDerivedStateFromError=="function"||p!==null&&typeof p.componentDidCatch=="function"&&(Yr===null||!Yr.has(p)))){c.flags|=65536,n&=-n,c.lanes|=n;var A=Vc(c,u,n);lc(c,A);break e}}c=c.return}while(c!==null)}Ot(a)}catch(D){n=D,xe===a&&a!==null&&(xe=a=a.return);continue}break}while(!0)}function pt(){var r=ps.current;return ps.current=us,r===null?us:r}function Ol(){(he===0||he===3||he===2)&&(he=4),Ie===null||(ln&268435455)===0&&(fs&268435455)===0||Wr(Ie,ve)}function Cs(r,n){var a=Y;Y|=2;var i=pt();(Ie!==r||ve!==n)&&(Tr=null,cn(r,n));do try{Eu();break}catch(o){ht(r,o)}while(!0);if(Pi(),Y=a,ps.current=i,xe!==null)throw Error(d(261));return Ie=null,ve=0,he}function Eu(){for(;xe!==null;)ft(xe)}function gu(){for(;xe!==null&&!Ht();)ft(xe)}function ft(r){var n=gt(r.alternate,r,He);r.memoizedProps=r.pendingProps,n===null?Ot(r):xe=n,tl.current=null}function Ot(r){var n=r;do{var a=n.alternate;if(r=n.return,(n.flags&32768)===0){if(a=xu(a,n,He),a!==null){xe=a;return}}else{if(a=mu(a,n),a!==null){a.flags&=32767,xe=a;return}if(r!==null)r.flags|=32768,r.subtreeFlags=0,r.deletions=null;else{he=6,xe=null;return}}if(n=n.sibling,n!==null){xe=n;return}xe=n=r}while(n!==null);he===0&&(he=5)}function tn(r,n,a){var i=X,o=er.transition;try{er.transition=null,X=1,vu(r,n,a,i)}finally{er.transition=o,X=i}return null}function vu(r,n,a,i){do Un();while(_r!==null);if((Y&6)!==0)throw Error(d(327));a=r.finishedWork;var o=r.finishedLanes;if(a===null)return null;if(r.finishedWork=null,r.finishedLanes=0,a===r.current)throw Error(d(177));r.callbackNode=null,r.callbackPriority=0;var c=a.lanes|a.childLanes;if(nd(r,c),r===Ie&&(xe=Ie=null,ve=0),(a.subtreeFlags&2064)===0&&(a.flags&2064)===0||Is||(Is=!0,vt(La,function(){return Un(),null})),c=(a.flags&15990)!==0,(a.subtreeFlags&15990)!==0||c){c=er.transition,er.transition=null;var t=X;X=1;var u=Y;Y|=4,tl.current=null,pu(r,a),ct(a,r),wd(Oi),Ra=!!fi,Oi=fi=null,r.current=a,fu(a),Wt(),Y=u,X=t,er.transition=c}else r.current=a;if(Is&&(Is=!1,_r=r,Es=o),c=r.pendingLanes,c===0&&(Yr=null),Qt(a.stateNode),qe(r,ue()),n!==null)for(i=r.onRecoverableError,a=0;a<n.length;a++)o=n[a],i(o.value,{componentStack:o.stack,digest:o.digest});if(Os)throw Os=!1,r=jl,jl=null,r;return(Es&1)!==0&&r.tag!==0&&Un(),c=r.pendingLanes,(c&1)!==0?r===xl?Ia++:(Ia=0,xl=r):Ia=0,qr(),null}function Un(){if(_r!==null){var r=so(Es),n=er.transition,a=X;try{if(er.transition=null,X=16>r?16:r,_r===null)var i=!1;else{if(r=_r,_r=null,Es=0,(Y&6)!==0)throw Error(d(331));var o=Y;for(Y|=4,L=r.current;L!==null;){var c=L,t=c.child;if((L.flags&16)!==0){var u=c.deletions;if(u!==null){for(var j=0;j<u.length;j++){var f=u[j];for(L=f;L!==null;){var v=L;switch(v.tag){case 0:case 11:case 15:pa(8,v,c)}var C=v.child;if(C!==null)C.return=v,L=C;else for(;L!==null;){v=L;var E=v.sibling,S=v.return;if(at(v),v===f){L=null;break}if(E!==null){E.return=S,L=E;break}L=S}}}var b=c.alternate;if(b!==null){var T=b.child;if(T!==null){b.child=null;do{var je=T.sibling;T.sibling=null,T=je}while(T!==null)}}L=c}}if((c.subtreeFlags&2064)!==0&&t!==null)t.return=c,L=t;else e:for(;L!==null;){if(c=L,(c.flags&2048)!==0)switch(c.tag){case 0:case 11:case 15:pa(9,c,c.return)}var h=c.sibling;if(h!==null){h.return=c.return,L=h;break e}L=c.return}}var m=r.current;for(L=m;L!==null;){t=L;var p=t.child;if((t.subtreeFlags&2064)!==0&&p!==null)p.return=t,L=p;else e:for(t=m;L!==null;){if(u=L,(u.flags&2048)!==0)try{switch(u.tag){case 0:case 11:case 15:hs(9,u)}}catch(D){de(u,u.return,D)}if(u===t){L=null;break e}var A=u.sibling;if(A!==null){A.return=u.return,L=A;break e}L=u.return}}if(Y=o,qr(),hr&&typeof hr.onPostCommitFiberRoot=="function")try{hr.onPostCommitFiberRoot(ba,r)}catch{}i=!0}return i}finally{X=a,er.transition=n}}return!1}function It(r,n,a){n=Pn(a,n),n=Bc(r,n,1),r=wr(r,n,1),n=ye(),r!==null&&(Gn(r,1,n),qe(r,n))}function de(r,n,a){if(r.tag===3)It(r,r,a);else for(;n!==null;){if(n.tag===3){It(n,r,a);break}else if(n.tag===1){var i=n.stateNode;if(typeof n.type.getDerivedStateFromError=="function"||typeof i.componentDidCatch=="function"&&(Yr===null||!Yr.has(i))){r=Pn(a,r),r=Vc(n,r,1),n=wr(n,r,1),r=ye(),n!==null&&(Gn(n,1,r),qe(n,r));break}}n=n.return}}function Cu(r,n,a){var i=r.pingCache;i!==null&&i.delete(n),n=ye(),r.pingedLanes|=r.suspendedLanes&a,Ie===r&&(ve&a)===a&&(he===4||he===3&&(ve&130023424)===ve&&500>ue()-ul?cn(r,0):dl|=a),qe(r,n)}function Et(r,n){n===0&&((r.mode&1)===0?n=1:(n=Da,Da<<=1,(Da&130023424)===0&&(Da=4194304)));var a=ye();r=Sr(r,n),r!==null&&(Gn(r,n,a),qe(r,a))}function Au(r){var n=r.memoizedState,a=0;n!==null&&(a=n.retryLane),Et(r,a)}function Nu(r,n){var a=0;switch(r.tag){case 13:var i=r.stateNode,o=r.memoizedState;o!==null&&(a=o.retryLane);break;case 19:i=r.stateNode;break;default:throw Error(d(314))}i!==null&&i.delete(n),Et(r,a)}var gt;gt=function(r,n,a){if(r!==null)if(r.memoizedProps!==n.pendingProps||ze.current)Ve=!0;else{if((r.lanes&a)===0&&(n.flags&128)===0)return Ve=!1,ju(r,n,a);Ve=(r.flags&131072)!==0}else Ve=!1,ie&&(n.flags&1048576)!==0&&Jo(n,Za,n.index);switch(n.lanes=0,n.tag){case 2:var i=n.type;xs(r,n),r=n.pendingProps;var o=Cn(n,Ne.current);bn(n,a),o=Yi(null,n,i,r,o,a);var c=_i();return n.flags|=1,typeof o=="object"&&o!==null&&typeof o.render=="function"&&o.$$typeof===void 0?(n.tag=1,n.memoizedState=null,n.updateQueue=null,Be(i)?(c=!0,Ka(n)):c=!1,n.memoizedState=o.state!==null&&o.state!==void 0?o.state:null,Ui(n),o.updater=ss,n.stateNode=o,o._reactInternals=n,Bi(n,i,r,a),n=Ji(null,n,i,!0,c,a)):(n.tag=0,ie&&c&&Ni(n),Pe(null,n,o,a),n=n.child),n;case 16:i=n.elementType;e:{switch(xs(r,n),r=n.pendingProps,o=i._init,i=o(i._payload),n.type=i,o=n.tag=Lu(i),r=cr(i,r),o){case 0:n=Zi(null,n,i,r,a);break e;case 1:n=Wc(null,n,i,r,a);break e;case 11:n=wc(null,n,i,r,a);break e;case 14:n=Gc(null,n,i,cr(i.type,r),a);break e}throw Error(d(306,i,""))}return n;case 0:return i=n.type,o=n.pendingProps,o=n.elementType===i?o:cr(i,o),Zi(r,n,i,o,a);case 1:return i=n.type,o=n.pendingProps,o=n.elementType===i?o:cr(i,o),Wc(r,n,i,o,a);case 3:e:{if(Xc(n),r===null)throw Error(d(387));i=n.pendingProps,c=n.memoizedState,o=c.element,ic(r,n),as(n,i,null,a);var t=n.memoizedState;if(i=t.element,c.isDehydrated)if(c={element:i,isDehydrated:!1,cache:t.cache,pendingSuspenseBoundaries:t.pendingSuspenseBoundaries,transitions:t.transitions},n.updateQueue.baseState=c,n.memoizedState=c,n.flags&256){o=Pn(Error(d(423)),n),n=Kc(r,n,i,a,o);break e}else if(i!==o){o=Pn(Error(d(424)),n),n=Kc(r,n,i,a,o);break e}else for(_e=Br(n.stateNode.containerInfo.firstChild),Ye=n,ie=!0,or=null,a=mc(n,null,i,a),n.child=a;a;)a.flags=a.flags&-3|4096,a=a.sibling;else{if(Sn(),i===o){n=br(r,n,a);break e}Pe(r,n,i,a)}n=n.child}return n;case 5:return hc(n),r===null&&bi(n),i=n.type,o=n.pendingProps,c=r!==null?r.memoizedProps:null,t=o.children,Ii(i,o)?t=null:c!==null&&Ii(i,c)&&(n.flags|=32),Hc(r,n),Pe(r,n,t,a),n.child;case 6:return r===null&&bi(n),null;case 13:return Qc(r,n,a);case 4:return Vi(n,n.stateNode.containerInfo),i=n.pendingProps,r===null?n.child=Tn(n,null,i,a):Pe(r,n,i,a),n.child;case 11:return i=n.type,o=n.pendingProps,o=n.elementType===i?o:cr(i,o),wc(r,n,i,o,a);case 7:return Pe(r,n,n.pendingProps,a),n.child;case 8:return Pe(r,n,n.pendingProps.children,a),n.child;case 12:return Pe(r,n,n.pendingProps.children,a),n.child;case 10:e:{if(i=n.type._context,o=n.pendingProps,c=n.memoizedProps,t=o.value,J(es,i._currentValue),i._currentValue=t,c!==null)if(lr(c.value,t)){if(c.children===o.children&&!ze.current){n=br(r,n,a);break e}}else for(c=n.child,c!==null&&(c.return=n);c!==null;){var u=c.dependencies;if(u!==null){t=c.child;for(var j=u.firstContext;j!==null;){if(j.context===i){if(c.tag===1){j=Lr(-1,a&-a),j.tag=2;var f=c.updateQueue;if(f!==null){f=f.shared;var v=f.pending;v===null?j.next=j:(j.next=v.next,v.next=j),f.pending=j}}c.lanes|=a,j=c.alternate,j!==null&&(j.lanes|=a),Mi(c.return,a,n),u.lanes|=a;break}j=j.next}}else if(c.tag===10)t=c.type===n.type?null:c.child;else if(c.tag===18){if(t=c.return,t===null)throw Error(d(341));t.lanes|=a,u=t.alternate,u!==null&&(u.lanes|=a),Mi(t,a,n),t=c.sibling}else t=c.child;if(t!==null)t.return=c;else for(t=c;t!==null;){if(t===n){t=null;break}if(c=t.sibling,c!==null){c.return=t.return,t=c;break}t=t.return}c=t}Pe(r,n,o.children,a),n=n.child}return n;case 9:return o=n.type,i=n.pendingProps.children,bn(n,a),o=Ze(o),i=i(o),n.flags|=1,Pe(r,n,i,a),n.child;case 14:return i=n.type,o=cr(i,n.pendingProps),o=cr(i.type,o),Gc(r,n,i,o,a);case 15:return Yc(r,n,n.type,n.pendingProps,a);case 17:return i=n.type,o=n.pendingProps,o=n.elementType===i?o:cr(i,o),xs(r,n),n.tag=1,Be(i)?(r=!0,Ka(n)):r=!1,bn(n,a),dc(n,i,o),Bi(n,i,o,a),Ji(null,n,i,!0,r,a);case 19:return Zc(r,n,a);case 22:return _c(r,n,a)}throw Error(d(156,n.tag))};function vt(r,n){return Jl(r,n)}function Su(r,n,a,i){this.tag=r,this.key=a,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=i,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function rr(r,n,a,i){return new Su(r,n,a,i)}function Il(r){return r=r.prototype,!(!r||!r.isReactComponent)}function Lu(r){if(typeof r=="function")return Il(r)?1:0;if(r!=null){if(r=r.$$typeof,r===xr)return 11;if(r===mr)return 14}return 2}function Xr(r,n){var a=r.alternate;return a===null?(a=rr(r.tag,n,r.key,r.mode),a.elementType=r.elementType,a.type=r.type,a.stateNode=r.stateNode,a.alternate=r,r.alternate=a):(a.pendingProps=n,a.type=r.type,a.flags=0,a.subtreeFlags=0,a.deletions=null),a.flags=r.flags&14680064,a.childLanes=r.childLanes,a.lanes=r.lanes,a.child=r.child,a.memoizedProps=r.memoizedProps,a.memoizedState=r.memoizedState,a.updateQueue=r.updateQueue,n=r.dependencies,a.dependencies=n===null?null:{lanes:n.lanes,firstContext:n.firstContext},a.sibling=r.sibling,a.index=r.index,a.ref=r.ref,a}function As(r,n,a,i,o,c){var t=2;if(i=r,typeof r=="function")Il(r)&&(t=1);else if(typeof r=="string")t=5;else e:switch(r){case Me:return dn(a.children,o,c,n);case Ke:t=8,o|=8;break;case Dr:return r=rr(12,a,n,o|2),r.elementType=Dr,r.lanes=c,r;case we:return r=rr(13,a,n,o),r.elementType=we,r.lanes=c,r;case sr:return r=rr(19,a,n,o),r.elementType=sr,r.lanes=c,r;case te:return Ns(a,o,c,n);default:if(typeof r=="object"&&r!==null)switch(r.$$typeof){case gr:t=10;break e;case Qr:t=9;break e;case xr:t=11;break e;case mr:t=14;break e;case Re:t=16,i=null;break e}throw Error(d(130,r==null?r:typeof r,""))}return n=rr(t,a,n,o),n.elementType=r,n.type=i,n.lanes=c,n}function dn(r,n,a,i){return r=rr(7,r,i,n),r.lanes=a,r}function Ns(r,n,a,i){return r=rr(22,r,i,n),r.elementType=te,r.lanes=a,r.stateNode={isHidden:!1},r}function El(r,n,a){return r=rr(6,r,null,n),r.lanes=a,r}function gl(r,n,a){return n=rr(4,r.children!==null?r.children:[],r.key,n),n.lanes=a,n.stateNode={containerInfo:r.containerInfo,pendingChildren:null,implementation:r.implementation},n}function bu(r,n,a,i,o){this.tag=n,this.containerInfo=r,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Xs(0),this.expirationTimes=Xs(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Xs(0),this.identifierPrefix=i,this.onRecoverableError=o,this.mutableSourceEagerHydrationData=null}function vl(r,n,a,i,o,c,t,u,j){return r=new bu(r,n,a,u,j),n===1?(n=1,c===!0&&(n|=8)):n=0,c=rr(3,null,null,n),r.current=c,c.stateNode=r,c.memoizedState={element:i,isDehydrated:a,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ui(c),r}function Tu(r,n,a){var i=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:De,key:i==null?null:""+i,children:r,containerInfo:n,implementation:a}}function Ct(r){if(!r)return Fr;r=r._reactInternals;e:{if($r(r)!==r||r.tag!==1)throw Error(d(170));var n=r;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(Be(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(n!==null);throw Error(d(171))}if(r.tag===1){var a=r.type;if(Be(a))return Qo(r,a,n)}return n}function At(r,n,a,i,o,c,t,u,j){return r=vl(a,i,!0,r,o,c,t,u,j),r.context=Ct(null),a=r.current,i=ye(),o=Hr(a),c=Lr(i,o),c.callback=n??null,wr(a,c,o),r.current.lanes=o,Gn(r,o,i),qe(r,i),r}function Ss(r,n,a,i){var o=n.current,c=ye(),t=Hr(o);return a=Ct(a),n.context===null?n.context=a:n.pendingContext=a,n=Lr(c,t),n.payload={element:r},i=i===void 0?null:i,i!==null&&(n.callback=i),r=wr(o,n,t),r!==null&&(ur(r,o,t,c),ns(r,o,t)),t}function Ls(r){if(r=r.current,!r.child)return null;switch(r.child.tag){case 5:return r.child.stateNode;default:return r.child.stateNode}}function Nt(r,n){if(r=r.memoizedState,r!==null&&r.dehydrated!==null){var a=r.retryLane;r.retryLane=a!==0&&a<n?a:n}}function Cl(r,n){Nt(r,n),(r=r.alternate)&&Nt(r,n)}function Du(){return null}var St=typeof reportError=="function"?reportError:function(r){console.error(r)};function Al(r){this._internalRoot=r}bs.prototype.render=Al.prototype.render=function(r){var n=this._internalRoot;if(n===null)throw Error(d(409));Ss(r,n,null,null)},bs.prototype.unmount=Al.prototype.unmount=function(){var r=this._internalRoot;if(r!==null){this._internalRoot=null;var n=r.containerInfo;on(function(){Ss(null,r,null,null)}),n[vr]=null}};function bs(r){this._internalRoot=r}bs.prototype.unstable_scheduleHydration=function(r){if(r){var n=oo();r={blockedOn:null,target:r,priority:n};for(var a=0;a<Rr.length&&n!==0&&n<Rr[a].priority;a++);Rr.splice(a,0,r),a===0&&uo(r)}};function Nl(r){return!(!r||r.nodeType!==1&&r.nodeType!==9&&r.nodeType!==11)}function Ts(r){return!(!r||r.nodeType!==1&&r.nodeType!==9&&r.nodeType!==11&&(r.nodeType!==8||r.nodeValue!==" react-mount-point-unstable "))}function Lt(){}function Pu(r,n,a,i,o){if(o){if(typeof i=="function"){var c=i;i=function(){var f=Ls(t);c.call(f)}}var t=At(n,i,r,0,null,!1,!1,"",Lt);return r._reactRootContainer=t,r[vr]=t.current,aa(r.nodeType===8?r.parentNode:r),on(),t}for(;o=r.lastChild;)r.removeChild(o);if(typeof i=="function"){var u=i;i=function(){var f=Ls(j);u.call(f)}}var j=vl(r,0,!1,null,null,!1,!1,"",Lt);return r._reactRootContainer=j,r[vr]=j.current,aa(r.nodeType===8?r.parentNode:r),on(function(){Ss(n,j,a,i)}),j}function Ds(r,n,a,i,o){var c=a._reactRootContainer;if(c){var t=c;if(typeof o=="function"){var u=o;o=function(){var j=Ls(t);u.call(j)}}Ss(n,t,r,o)}else t=Pu(a,n,r,o,i);return Ls(t)}io=function(r){switch(r.tag){case 3:var n=r.stateNode;if(n.current.memoizedState.isDehydrated){var a=wn(n.pendingLanes);a!==0&&(Ks(n,a|1),qe(n,ue()),(Y&6)===0&&(Rn=ue()+500,qr()))}break;case 13:on(function(){var i=Sr(r,1);if(i!==null){var o=ye();ur(i,r,1,o)}}),Cl(r,1)}},Qs=function(r){if(r.tag===13){var n=Sr(r,134217728);if(n!==null){var a=ye();ur(n,r,134217728,a)}Cl(r,134217728)}},lo=function(r){if(r.tag===13){var n=Hr(r),a=Sr(r,n);if(a!==null){var i=ye();ur(a,r,n,i)}Cl(r,n)}},oo=function(){return X},co=function(r,n){var a=X;try{return X=r,n()}finally{X=a}},ws=function(r,n,a){switch(n){case"input":if(Rs(r,a),n=a.name,a.type==="radio"&&n!=null){for(a=r;a.parentNode;)a=a.parentNode;for(a=a.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<a.length;n++){var i=a[n];if(i!==r&&i.form===r.form){var o=Wa(i);if(!o)throw Error(d(90));yl(i),Rs(i,o)}}}break;case"textarea":Bl(r,a);break;case"select":n=a.value,n!=null&&un(r,!!a.multiple,n,!1)}},Hl=pl,Wl=on;var yu={usingClientEntryPoint:!1,Events:[la,gn,Wa,Yl,_l,pl]},Ea={findFiberByHostInstance:Zr,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},Mu={bundleType:Ea.bundleType,version:Ea.version,rendererPackageName:Ea.rendererPackageName,rendererConfig:Ea.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Ae.ReactCurrentDispatcher,findHostInstanceByFiber:function(r){return r=$l(r),r===null?null:r.stateNode},findFiberByHostInstance:Ea.findFiberByHostInstance||Du,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Ps=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Ps.isDisabled&&Ps.supportsFiber)try{ba=Ps.inject(Mu),hr=Ps}catch{}}return ke.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=yu,ke.createPortal=function(r,n){var a=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!Nl(n))throw Error(d(200));return Tu(r,n,null,a)},ke.createRoot=function(r,n){if(!Nl(r))throw Error(d(299));var a=!1,i="",o=St;return n!=null&&(n.unstable_strictMode===!0&&(a=!0),n.identifierPrefix!==void 0&&(i=n.identifierPrefix),n.onRecoverableError!==void 0&&(o=n.onRecoverableError)),n=vl(r,1,!1,null,null,a,!1,i,o),r[vr]=n.current,aa(r.nodeType===8?r.parentNode:r),new Al(n)},ke.findDOMNode=function(r){if(r==null)return null;if(r.nodeType===1)return r;var n=r._reactInternals;if(n===void 0)throw typeof r.render=="function"?Error(d(188)):(r=Object.keys(r).join(","),Error(d(268,r)));return r=$l(n),r=r===null?null:r.stateNode,r},ke.flushSync=function(r){return on(r)},ke.hydrate=function(r,n,a){if(!Ts(n))throw Error(d(200));return Ds(null,r,n,!0,a)},ke.hydrateRoot=function(r,n,a){if(!Nl(r))throw Error(d(405));var i=a!=null&&a.hydratedSources||null,o=!1,c="",t=St;if(a!=null&&(a.unstable_strictMode===!0&&(o=!0),a.identifierPrefix!==void 0&&(c=a.identifierPrefix),a.onRecoverableError!==void 0&&(t=a.onRecoverableError)),n=At(n,null,r,1,a??null,o,!1,c,t),r[vr]=n.current,aa(r),i)for(r=0;r<i.length;r++)a=i[r],o=a._getVersion,o=o(a._source),n.mutableSourceEagerHydrationData==null?n.mutableSourceEagerHydrationData=[a,o]:n.mutableSourceEagerHydrationData.push(a,o);return new bs(n)},ke.render=function(r,n,a){if(!Ts(n))throw Error(d(200));return Ds(null,r,n,!1,a)},ke.unmountComponentAtNode=function(r){if(!Ts(r))throw Error(d(40));return r._reactRootContainer?(on(function(){Ds(null,null,r,!1,function(){r._reactRootContainer=null,r[vr]=null})}),!0):!1},ke.unstable_batchedUpdates=pl,ke.unstable_renderSubtreeIntoContainer=function(r,n,a,i){if(!Ts(a))throw Error(d(200));if(r==null||r._reactInternals===void 0)throw Error(d(38));return Ds(r,n,a,!1,i)},ke.version="18.2.0-next-9e3b772b8-20220608",ke}var Ut;function Gu(){if(Ut)return bl.exports;Ut=1;function O(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(O)}catch(s){console.error(s)}}return O(),bl.exports=wu(),bl.exports}var zt;function Yu(){if(zt)return ys;zt=1;var O=Gu();return ys.createRoot=O.createRoot,ys.hydrateRoot=O.hydrateRoot,ys}var _u=Yu();const Hu=Bt(_u),Wu=()=>e.jsx("header",{children:e.jsx("h1",{children:"Curso sobre Cobol hecho con Chat GPT"})}),Xu=()=>e.jsxs(e.Fragment,{children:[e.jsxs("article",{id:"indice",children:[e.jsxs("section",{children:[e.jsx("a",{href:"#modulo-1",children:e.jsx("strong",{children:"Módulo 1:"})}),"Introducción al COBOL",e.jsxs("ul",{children:[e.jsx("li",{children:e.jsx("a",{href:"#1.1",children:"1.1 ¿Qué es COBOL?"})}),e.jsx("li",{children:e.jsx("a",{href:"#1.2",children:"1.2 Historia y evolución"})}),e.jsx("li",{children:e.jsx("a",{href:"#1.3",children:"1.3 Características principales"})}),e.jsx("li",{children:e.jsx("a",{href:"#1.4",children:"1.4 Usos actuales y futuro del COBOL"})})]})]}),e.jsxs("section",{children:[e.jsx("a",{href:"#modulo-2",children:e.jsx("strong",{children:"Módulo 2:"})}),"Estructura General de un Programa COBOL",e.jsxs("ul",{children:[e.jsx("li",{children:e.jsx("a",{href:"#2.1",children:"2.1 Formato de escritura"})}),e.jsx("li",{children:e.jsx("a",{href:"#2.2",children:"2.2 Convenciones de nomenclatura"})}),e.jsx("li",{children:e.jsx("a",{href:"#2.3",children:"2.3 Estructura jerárquica"})})]})]}),e.jsxs("section",{children:[e.jsx("a",{href:"#modulo-3",children:e.jsx("strong",{children:"Módulo 3:"})}),"DIVISIONES de un programa COBOL",e.jsxs("ul",{children:[e.jsx("li",{children:e.jsx("a",{href:"#3.1",children:" 3.1 IDENTIFICATION DIVISION"})}),e.jsx("li",{children:e.jsx("a",{href:"#3.2",children:" 3.2 ENVIRONMENT DIVISION"})}),e.jsx("li",{children:e.jsx("a",{href:"#3.3",children:" 3.3 DATA DIVISION"})}),e.jsx("li",{children:e.jsx("a",{href:"#3.4",children:" 3.4 PROCEDURE DIVISION"})})]})]}),e.jsxs("section",{children:[e.jsx("a",{href:"#modulo-4",children:e.jsx("strong",{children:"Módulo 4:"})}),"Tipos de Datos en COBOL",e.jsxs("ul",{children:[e.jsx("li",{children:e.jsx("a",{href:"#4.1",children:"4.1 Campos numéricos: PIC 9"})}),e.jsx("li",{children:e.jsx("a",{href:"#4.2",children:"4.2 Decimales: V"})}),e.jsx("li",{children:e.jsx("a",{href:"#4.3",children:"4.3 Uso de SIGNO: S9"})}),e.jsx("li",{children:e.jsx("a",{href:"#4.4",children:"4.4 Campos alfabéticos: PIC A"})}),e.jsx("li",{children:e.jsx("a",{href:"#4.5",children:"4.5 Campos alfanuméricos: PIC X"})}),e.jsx("li",{children:e.jsx("a",{href:"#4.6",children:"4.6 COMP, COMP-1, COMP-2, COMP-3"})})]})]}),e.jsxs("section",{children:[e.jsx("a",{href:"#modulo-5",children:e.jsx("strong",{children:"Módulo 5:"})}),"Tablas en COBOL",e.jsxs("ul",{children:[e.jsx("li",{children:e.jsx("a",{href:"#5.1",children:"5.1 Definición con OCCURS"})}),e.jsx("li",{children:e.jsx("a",{href:"#5.2",children:"5.2 Uso de DEPENDING ON"})}),e.jsx("li",{children:e.jsx("a",{href:"#5.3",children:"5.3 INDEXED BY y USAGE INDEX"})}),e.jsx("li",{children:e.jsx("a",{href:"#5.4",children:"5.4 Inicialización y recorrido"})}),e.jsx("li",{children:e.jsx("a",{href:"#5.5",children:"5.5 Búsqueda con SEARCH y SEARCH ALL"})})]})]}),e.jsxs("section",{children:[e.jsx("a",{href:"#modulo-6",children:e.jsx("strong",{children:"Módulo 6:"})}),"Subprogramas en COBOL",e.jsxs("ul",{children:[e.jsx("li",{children:e.jsx("a",{href:"#6.1",children:"6.1 ¿Qué es un subprograma?"})}),e.jsx("li",{children:e.jsx("a",{href:"#6.2",children:"6.2 CALL y USING"})}),e.jsx("li",{children:e.jsx("a",{href:"#6.3",children:"6.3 LINKAGE SECTION"})}),e.jsx("li",{children:e.jsx("a",{href:"#6.4",children:"6.4 ENTRY POINT"})}),e.jsx("li",{children:e.jsx("a",{href:"#6.5",children:"6.5 Diferencias entre subprogramas y subrutinas"})})]})]}),e.jsxs("section",{children:[e.jsx("a",{href:"#modulo-7",children:e.jsx("strong",{children:"Módulo 7:"})}),"Intrinsic Functions (Funciones Intrínsecas)",e.jsxs("ul",{children:[e.jsx("li",{children:e.jsx("a",{href:"#7.1",children:"7.1 ¿Qué son?"})}),e.jsx("li",{children:e.jsx("a",{href:"#7.2",children:"7.2 Funciones Matemáticas"})}),e.jsx("li",{children:e.jsx("a",{href:"#7.3",children:"7.3 Funciones de Caracteres"})}),e.jsx("li",{children:e.jsx("a",{href:"#7.4",children:"7.4 Funciones de Fecha y Hora"})}),e.jsx("li",{children:e.jsx("a",{href:"#7.5",children:"7.5 Funciones de Conversión"})}),e.jsx("li",{children:e.jsx("a",{href:"#7.6",children:"7.6 Cuadro resumen de funciones"})})]})]}),e.jsxs("section",{children:[e.jsx("a",{href:"#modulo-8",children:e.jsx("strong",{children:"Módulo 8:"})}),"Archivos en COBOL",e.jsxs("ul",{children:[e.jsx("li",{children:e.jsx("a",{href:"#8.1",children:"8.1 Tipos de organización de archivos"})}),e.jsx("li",{children:e.jsx("a",{href:"#8.2",children:"8.2 Tipos de acceso"})}),e.jsx("li",{children:e.jsx("a",{href:"#8.3",children:"8.3 QSAM, VSAM, ESDS, KSDS, RRDS"})}),e.jsx("li",{children:e.jsx("a",{href:"#8.4",children:"8.4 PDS (Partitioned Data Set)"})}),e.jsx("li",{children:e.jsx("a",{href:"#8.5",children:"8.5 Archivos PLANOS"})})]})]}),e.jsxs("section",{children:[e.jsx("a",{href:"#modulo-9",children:e.jsx("strong",{children:"Módulo 9:"})}),"Cláusulas y Opciones Avanzadas",e.jsxs("ul",{children:[e.jsx("li",{children:e.jsx("a",{href:"#9.1",children:"9.1 CORRESPONDING"})}),e.jsx("li",{children:e.jsx("a",{href:"#9.2",children:"9.2 ENTRY"})}),e.jsx("li",{children:e.jsx("a",{href:"#9.3",children:"9.3 ROUNDED"})}),e.jsx("li",{children:e.jsx("a",{href:"#9.4",children:"9.4 HIGH-VALUE / LOW-VALUE"})}),e.jsx("li",{children:e.jsx("a",{href:"#9.5",children:"9.5 SPACES / ZEROS / QUOTES"})})]})]}),e.jsxs("section",{children:[e.jsx("a",{href:"#modulo-10",children:e.jsx("strong",{children:"Módulo 10:"})}),"JCL y COBOL",e.jsxs("ul",{children:[e.jsx("li",{children:e.jsx("a",{href:"#10.1",children:"10.1 Uso de PARM y parámetros"})}),e.jsx("li",{children:e.jsx("a",{href:"#10.2",children:"10.2 Ejecución de programas desde JCL"})}),e.jsx("li",{children:e.jsx("a",{href:"#10.3",children:"10.3 Pasaje de parámetros"})}),e.jsx("li",{children:e.jsx("a",{href:"#10.4",children:"10.4 Asignación de archivos"})})]})]}),e.jsxs("section",{children:[e.jsx("a",{href:"#modulo-11",children:e.jsx("strong",{children:"Módulo 11:"})}),"Buenas Prácticas y Estilo de Programación",e.jsxs("ul",{children:[e.jsx("li",{children:e.jsx("a",{href:"11.1",children:"11.1 Comentarios"})}),e.jsx("li",{children:e.jsx("a",{href:"11.2",children:"11.2 Convenciones de nombres"})}),e.jsx("li",{children:e.jsx("a",{href:"11.3",children:"11.3 Indentación y visualización"})}),e.jsx("li",{children:e.jsx("a",{href:"11.4",children:"11.4 Uso de colores en IDEs COBOL"})})]})]})]}),e.jsx("hr",{})]}),y=({data:O,children:s})=>e.jsx("div",{className:"cuadro",style:O,children:s}),M=({children:O})=>e.jsx("span",{style:{color:"tomato"},children:O}),R=({children:O})=>e.jsx("span",{style:{color:"lightgrey"},children:O}),U=({children:O})=>e.jsx("span",{style:{color:"aqua"},children:O}),z=()=>e.jsx("span",{children:"  "}),Ku=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"1.1",children:[e.jsx("h3",{children:"Historia y Contexto de COBOL"}),e.jsxs("p",{children:['COBOL, que significa "Common Business-Oriented Language" ',"(","Lenguaje Común Orientado a Negocios",")",", es un lenguaje de programación de alto nivel diseñado específicamente para aplicaciones empresariales. Su historia y contexto son fundamentales para comprender su evolución y su importancia en el mundo de la programación. Aquí se describen los aspectos más relevantes:"]}),e.jsx("h4",{children:" Antecedentes y Necesidad de COBOL"}),e.jsx("p",{children:"En la década de 1950, la programación informática estaba en sus primeras etapas, y la falta de estándares y la variedad de lenguajes de programación dificultaban la interoperabilidad de aplicaciones empresariales. La necesidad de un lenguaje común que pudiera utilizarse en una variedad de computadoras y sistemas empresariales se hizo evidente."}),e.jsx("h4",{children:" Desarrollo Inicial"}),e.jsx("p",{children:"En 1959, un comité de expertos en programación, liderado por Grace Hopper, presentó la propuesta para desarrollar un nuevo lenguaje de programación orientado a negocios. Esto llevó al desarrollo de COBOL, que se basó en lenguajes como Fortran y Flow-Matic. El primer COBOL (COBOL-60) se publicó en 1960."}),e.jsx("h4",{children:" Características de COBOL"}),e.jsx("p",{children:"COBOL se diseñó para ser legible por humanos y para reflejar el lenguaje natural utilizado en la gestión empresarial. Esto hizo que el código fuera fácil de entender para los usuarios y analistas de negocios, no solo para los programadores. Además, COBOL incluyó características específicas para manipular datos numéricos y de caracteres, lo que lo convirtió en una elección natural para aplicaciones de contabilidad y procesamiento de datos."}),e.jsx("h4",{children:" Adopción Generalizada"}),e.jsx("p",{children:"COBOL se convirtió en uno de los lenguajes de programación más utilizados en la industria y fue ampliamente adoptado por organizaciones gubernamentales y empresariales. Su capacidad para manejar aplicaciones empresariales críticas contribuyó a su éxito."}),e.jsx("h4",{children:" Evolución de COBOL"}),e.jsx("p",{children:"COBOL ha evolucionado con el tiempo para adaptarse a las cambiantes demandas tecnológicas. Se han lanzado varias revisiones del estándar COBOL, que han introducido características más modernas, como la compatibilidad con Unicode, capacidades de interoperabilidad y soporte para aplicaciones web y servicios en la nube."}),e.jsx("h4",{children:" Continuidad en Sistemas Legados"}),e.jsx("p",{children:"A pesar de la aparición de lenguajes más nuevos, muchas organizaciones todavía dependen de aplicaciones empresariales críticas escritas en COBOL. La inversión en sistemas COBOL y la complejidad de migrar a nuevas tecnologías han llevado a la continuidad de su uso."}),e.jsx("h4",{children:" Escasez de Habilidades en COBOL"}),e.jsx("p",{children:"A medida que los programadores más jóvenes se enfocan en lenguajes más nuevos, ha habido una escasez de habilidades en COBOL. Esto ha creado oportunidades para aquellos que deseen aprender y trabajar en aplicaciones COBOL."}),e.jsx("h4",{children:" Conclusión"}),e.jsx("p",{children:"COBOL ha desempeñado un papel fundamental en la evolución de la programación y ha sido esencial para el procesamiento de datos empresariales durante décadas. Su historia y contexto reflejan la necesidad de un lenguaje común orientado a negocios y su capacidad para adaptarse a lo largo del tiempo. COBOL sigue siendo relevante en aplicaciones empresariales críticas y ofrece oportunidades para profesionales que deseen trabajar en este campo. Su legado y su continuo desarrollo lo convierten en un lenguaje de programación único en la industria."})]}),Qu=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"1.2",children:[e.jsx("h3",{children:"Características Principales de COBOL"}),e.jsx("p",{children:"COBOL es un lenguaje de programación orientado a negocios que se ha utilizado durante décadas en aplicaciones empresariales críticas. Sus características principales lo hacen especialmente adecuado para aplicaciones comerciales. Aquí se describen algunas de las características más destacadas de COBOL:"}),e.jsx("h4",{children:" 1. Legibilidad y Expresividad"}),e.jsx("p",{children:"COBOL se diseñó para ser legible por humanos y reflejar el lenguaje natural utilizado en la gestión empresarial. Esto hace que el código COBOL sea fácil de entender, incluso para personas que no son programadores. Las palabras clave y estructuras del lenguaje están diseñadas para representar conceptos empresariales de manera clara y comprensible."}),e.jsx("h4",{children:" 2. Estructuras de Datos Altamente Específicas"}),e.jsx("p",{children:"COBOL incluye estructuras de datos altamente específicas para trabajar con datos numéricos y de caracteres, lo que lo convierte en una elección natural para aplicaciones de contabilidad y procesamiento de datos. Puede manejar grandes volúmenes de información numérica y realizar cálculos financieros precisos."}),e.jsx("h4",{children:" 3. Independencia de Plataforma"}),e.jsx("p",{children:"COBOL se diseñó para ser independiente de la plataforma, lo que significa que un programa COBOL escrito en una computadora puede ejecutarse en otra siempre que se cumplan ciertos estándares. Esto lo hace adecuado para aplicaciones empresariales que pueden necesitar migrar a diferentes sistemas a lo largo del tiempo."}),e.jsx("h4",{children:" 4. Manejo de Datos de Archivo"}),e.jsx("p",{children:"COBOL es eficaz en el manejo de archivos, especialmente en aplicaciones que requieren acceso a archivos secuenciales, indexados o de acceso directo (como archivos VSAM). Ofrece comandos y estructuras específicas para trabajar con archivos y bases de datos."}),e.jsx("h4",{children:" 5. Extensibilidad y Evolución"}),e.jsx("p",{children:"A lo largo de los años, COBOL ha evolucionado para adaptarse a las cambiantes demandas tecnológicas. Se han introducido revisiones del estándar COBOL que han añadido características más modernas, como la compatibilidad con Unicode, la capacidad de interactuar con servicios web y la compatibilidad con interfaces de usuario basadas en web."}),e.jsx("h4",{children:" 6. Recursos de Soporte Continuo"}),e.jsx("p",{children:"A pesar de su antigüedad, COBOL sigue siendo compatible con una variedad de sistemas y plataformas. Además, existen recursos de soporte continuo, como comunidades de desarrolladores, foros y documentación, que ayudan a mantener viva la base de conocimientos en torno a COBOL."}),e.jsx("h4",{children:" 7. Amplia Adopción en Sectores Regulados"}),e.jsx("p",{children:"COBOL sigue siendo ampliamente utilizado en sectores altamente regulados, como la banca, la atención médica y el gobierno. Su capacidad para cumplir con las regulaciones y estándares específicos de la industria lo convierte en una elección sólida en estas áreas."}),e.jsx("h4",{children:" Conclusión"}),e.jsx("p",{children:"Las características principales de COBOL, que incluyen su legibilidad, estructuras de datos específicas, independencia de plataforma y capacidad para manejar datos de archivo, lo hacen especialmente adecuado para aplicaciones empresariales críticas. A pesar de su antigüedad, COBOL ha evolucionado para adaptarse a las demandas tecnológicas actuales y sigue siendo una herramienta valiosa en el mundo de la programación, particularmente en aplicaciones comerciales y en sectores altamente regulados. Su legibilidad y capacidad para reflejar el lenguaje empresarial lo hacen único en su enfoque."})]}),$u=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"1.3",children:[e.jsx("h3",{children:"Ventajas y Desventajas de COBOL"}),e.jsx("p",{children:"COBOL ha sido un lenguaje de programación crucial en aplicaciones empresariales durante décadas. Sin embargo, como cualquier lenguaje, tiene sus ventajas y desventajas. Aquí se describen algunas de las más destacadas:"}),e.jsx("strong",{children:" Ventajas de COBOL:"}),e.jsx("h4",{children:" 1. Legibilidad y Expresividad:"}),e.jsx("p",{children:"COBOL se diseñó para que el código sea legible por humanos. Sus palabras clave y estructuras están basadas en el lenguaje natural, lo que facilita la comprensión del código, incluso para aquellos que no son programadores."}),e.jsx("h4",{children:" 2. Estructuras de Datos Específicas:"}),e.jsx("p",{children:"COBOL incluye estructuras de datos altamente específicas para trabajar con datos numéricos y de caracteres, lo que lo hace ideal para aplicaciones financieras y de procesamiento de datos."}),e.jsx("h4",{children:" 3. Independencia de Plataforma:"}),e.jsx("p",{children:"Los programas COBOL son portables, lo que significa que un programa escrito en COBOL puede ejecutarse en diferentes sistemas siempre que se cumplan ciertos estándares. Esto facilita la migración a nuevas plataformas."}),e.jsx("h4",{children:" 4. Mantenimiento de Aplicaciones Legadas:"}),e.jsx("p",{children:"COBOL sigue siendo una opción sólida para el mantenimiento de aplicaciones legadas. Muchas organizaciones dependen de sistemas COBOL críticos para sus operaciones comerciales y necesitan programadores que puedan mantenerlos."}),e.jsx("h4",{children:" 5. Recursos de Soporte:"}),e.jsx("p",{children:"A pesar de su antigüedad, COBOL cuenta con una amplia base de conocimientos y recursos de soporte en línea, lo que facilita la resolución de problemas y la capacitación."}),e.jsx("h4",{children:" 6. Cumplimiento Normativo:"}),e.jsx("p",{children:"COBOL es ampliamente utilizado en sectores altamente regulados debido a su capacidad para cumplir con regulaciones específicas de la industria. Desventajas de COBOL:"}),e.jsx("strong",{children:"Desventajas de COBOL:"}),e.jsx("h4",{children:" 1. Escasez de Habilidades:"}),e.jsx("p",{children:"Uno de los desafíos más significativos en la actualidad es la escasez de habilidades en COBOL. La mayoría de los programadores más jóvenes no tienen experiencia en este lenguaje, lo que ha creado una brecha en la fuerza laboral."}),e.jsx("h4",{children:" 2. Falta de Modernidad:"}),e.jsx("p",{children:"COBOL ha evolucionado, pero todavía se considera un lenguaje de programación con características relativamente antiguas en comparación con lenguajes más modernos. Esto puede limitar su capacidad para abordar nuevas tecnologías y tendencias."}),e.jsx("h4",{children:" 3. Migración Compleja:"}),e.jsx("p",{children:"Migrar aplicaciones COBOL a nuevas tecnologías puede ser un proceso costoso y complejo debido a la complejidad de las aplicaciones empresariales existentes y la inversión en sistemas COBOL."}),e.jsx("h4",{children:" 4. No es Adecuado para Todos los Tipos de Aplicaciones:"}),e.jsx("p",{children:"Aunque COBOL es fuerte en aplicaciones empresariales, no es la mejor elección para aplicaciones altamente interactivas o orientadas a la web. Para esos casos, se suelen preferir lenguajes más modernos."}),e.jsx("h4",{children:" 5. Curva de Aprendizaje:"}),e.jsx("p",{children:"Aprender COBOL puede llevar tiempo y esfuerzo debido a sus estructuras específicas y su legibilidad. Esto puede ser un desafío para los nuevos programadores."}),e.jsx("h4",{children:" Conclusión"}),e.jsx("p",{children:"COBOL ha sido y sigue siendo un lenguaje de programación fundamental en aplicaciones empresariales. Sus ventajas incluyen legibilidad, estructuras de datos específicas, independencia de plataforma y recursos de soporte continuo. Sin embargo, enfrenta desafíos como la escasez de habilidades, la falta de modernidad y la complejidad de la migración. La elección de COBOL depende de las necesidades y contextos específicos de las aplicaciones, y su relevancia perdura en aplicaciones empresariales críticas y en sectores altamente regulados."})]}),Zu=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"1.4",children:[e.jsx("h3",{children:"Entorno de Desarrollo para COBOL"}),e.jsx("strong",{children:"Los programas se clasifican en:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"On-line: interactúan activamente con las personas."}),e.jsx("li",{children:"Batch: no interactúan con las personas, generalmente se ejecutan durante la noche. Posee capacidad de procesamiento por lotes."})]}),e.jsx("p",{children:"Un entorno de desarrollo eficaz es fundamental para programar en COBOL. Aquí se describen los componentes clave de un entorno de desarrollo para COBOL:"}),e.jsx("h4",{children:" 1. Editor de Texto o IDE (Entorno de Desarrollo Integrado)"}),e.jsx("p",{children:"Un editor de texto es esencial para escribir código COBOL. Puedes optar por un editor de texto simple, como Vim o Nano, o utilizar un IDE específico para COBOL, como Visual COBOL, OpenCobolIDE, o Micro Focus Visual COBOL. Los IDE ofrecen funciones avanzadas, como resaltado de sintaxis, depuración integrada y administración de proyectos."}),e.jsx("h4",{children:" 2. Compilador COBOL"}),e.jsx("p",{children:"Un compilador COBOL es necesario para traducir el código fuente COBOL en código objeto que puede ejecutarse en una computadora. Algunos compiladores COBOL populares son GNU COBOL (anteriormente OpenCOBOL), Micro Focus COBOL, y Fujitsu COBOL. Asegúrate de que tu compilador sea compatible con la plataforma en la que deseas ejecutar tu programa."}),e.jsx("h4",{children:" 3. Depurador"}),e.jsx("p",{children:"El depurador es una herramienta esencial para identificar y solucionar errores en tu código COBOL. La mayoría de los IDE para COBOL incluyen capacidades de depuración, lo que facilita el seguimiento de errores y la inspección del estado de las variables durante la ejecución del programa."}),e.jsx("h4",{children:" 4. Administrador de Proyectos"}),e.jsx("p",{children:"Un administrador de proyectos te ayuda a organizar y gestionar tus proyectos COBOL. Puedes utilizar una funcionalidad de gestión de proyectos dentro de tu IDE o una herramienta de administración de proyectos independiente, como Apache Ant o Apache Maven."}),e.jsx("h4",{children:" 5. Emulador o Plataforma de Ejecución"}),e.jsx("p",{children:"Para probar y ejecutar aplicaciones COBOL, es posible que necesites un emulador o una plataforma de ejecución que simule un entorno Mainframe. Hercules es un emulador popular para sistemas Mainframe. También puedes ejecutar aplicaciones COBOL en sistemas Mainframe reales si tienes acceso a uno."}),e.jsx("h4",{children:" 6. Bibliotecas y Recursos"}),e.jsx("p",{children:"Es útil tener acceso a bibliotecas y recursos de COBOL, que pueden incluir rutinas comunes, módulos reutilizables y documentación. Esto acelera el desarrollo y te ayuda a aprender de ejemplos y mejores prácticas."}),e.jsx("h4",{children:" 7. Control de Versiones"}),e.jsx("p",{children:"Utilizar un sistema de control de versiones, como Git, es fundamental para rastrear cambios en tu código, colaborar con otros desarrolladores y revertir a versiones anteriores si es necesario."}),e.jsx("h4",{children:" 8. Documentación y Recursos de Aprendizaje"}),e.jsx("p",{children:"Tener acceso a documentación y recursos de aprendizaje es esencial, especialmente si eres nuevo en COBOL. Puedes encontrar manuales, tutoriales y cursos en línea que te ayudarán a aprender y perfeccionar tus habilidades."}),e.jsx("h4",{children:" Conclusión"}),e.jsx("p",{children:"Un entorno de desarrollo efectivo para COBOL incluye un editor de texto o IDE, un compilador COBOL, un depurador, un administrador de proyectos y, en algunos casos, un emulador o plataforma de ejecución. Estas herramientas y recursos son esenciales para escribir, probar y depurar aplicaciones COBOL de manera efectiva. A medida que adquieras experiencia en COBOL, podrás personalizar tu entorno de desarrollo para satisfacer tus necesidades específicas y mejorar tu productividad."}),e.jsx("hr",{})]}),Ju=()=>e.jsxs("article",{id:"modulo-1",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:" Módulo 1: Introducción a COBOL."}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsx(Ku,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(Qu,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx($u,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(Zu,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z})]}),ej=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"2.1",children:[e.jsx("h3",{children:"2.1 Formato de Escritura"}),e.jsx("p",{children:"COBOL es un lenguaje altamente estructurado y legible, originalmente diseñado para ser auto-documentado. Por esta razón, el formato de escritura tradicional sigue ciertas reglas históricas, aunque los compiladores modernos permiten mayor flexibilidad."}),e.jsx("h4",{children:"Reglas Clásicas (Formato Fijo)"}),e.jsxs(O,{data:{gridTemplateColumns:"10rem 35rem"},children:[e.jsxs("div",{className:"col tCenter",children:[e.jsx("div",{children:"COLUMNAS"}),e.jsx("div",{children:"01 al 06"}),e.jsx("div",{children:"07"}),e.jsx("div",{children:"08 al 11"}),e.jsx("div",{children:"12 al 72"}),e.jsx("div",{children:"73 al 80"})]}),e.jsxs("div",{className:"col",children:[e.jsx("div",{children:"USO COBOL"}),e.jsx("div",{children:"Número de secuencia de área"}),e.jsx("div",{children:"Indicador de área"}),e.jsx("div",{children:"Área A (declaraciones de DIVISION, SECTION, PARAGRAPH)"}),e.jsx("div",{children:"Área B (instrucciones COBOL)"}),e.jsx("div",{children:"Reservadas para el sistema (no se utilizan en compiladores modernos)"})]})]},10),"* Indicador de área:",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("mark",{children:" * "}),": Comentario."]}),e.jsxs("li",{children:[e.jsx("mark",{children:" - "}),": Continuación de una línea anterior."]}),e.jsxs("li",{children:[e.jsx("mark",{children:" / "}),": Salto de página (para listados impresos)."]})]}),e.jsx("li",{children:"El indicador de área, si lleva un '*', indica que la línea es un comentario."}),e.jsx("li",{children:"En el Área A, se describen: Las DIVISION / SECTION / Nombres de párrafos / Nivel de indicador FS o SD / Nivel de número 01 o 77"}),e.jsx("li",{children:"En el Área B, describen: Entradas, sentencias, cláusulas y continuación de línea."}),e.jsx("br",{}),e.jsx("br",{}),"Formato Libre (con compiladores modernos) En versiones más actuales o entornos de desarrollo modernos, es posible utilizar formato libre, lo que elimina la necesidad estricta de columnas. Sin embargo, el orden jerárquico y la indentación clara siguen siendo recomendables para mantener la legibilidad. Recomendaciones de Escritura Usar indentación para reflejar la jerarquía del programa. Escribir palabras clave en mayúsculas. Utilizar comentarios descriptivos. Evitar nombres ambiguos para las variables. Mantener una estructura limpia y ordenada. Con estas prácticas, se garantiza que el código COBOL sea más comprensible para otros desarrolladores, especialmente en entornos corporativos donde el mantenimiento a largo plazo es fundamental."]}),rj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"2.2",children:[e.jsx("h3",{children:"2.2 Convenciones de Nomenclatura en COBOL"}),e.jsx("p",{children:"COBOL utiliza una serie de reglas y buenas prácticas para nombrar programas, variables, registros, archivos y otros elementos. Aunque algunas de estas convenciones son opcionales, seguirlas mejora la legibilidad, el mantenimiento y la estandarización del código, especialmente en entornos corporativos."}),e.jsx("h4",{children:"2.2.1 Reglas generales de nomenclatura"}),e.jsxs("ul",{children:[e.jsxs("li",{children:["Longitud máxima:",e.jsxs("ul",{children:[e.jsx("li",{children:"En versiones estándar de COBOL, los nombres pueden tener hasta 30 caracteres."}),e.jsx("li",{children:"Algunas implementaciones antiguas limitaban esto a 8 caracteres."})]})]}),e.jsxs("li",{children:["Caracteres permitidos:",e.jsxs("ul",{children:[e.jsx("li",{children:"Letras (A-Z), números (0-9) y el guion medio (-)."}),e.jsx("li",{children:"No se permiten espacios, signos de puntuación ni caracteres especiales."}),e.jsx("li",{children:"No se permite iniciar ni terminar con un guion."})]})]}),e.jsxs("li",{children:["Sensibilidad a mayúsculas y minúsculas:",e.jsx("ul",{children:e.jsx("li",{children:"COBOL no distingue entre mayúsculas y minúsculas. Sin embargo, es común escribir todo en mayúsculas por convención."})})]})]}),e.jsx("h4",{children:"2.2.2 Convenciones comunes por tipo de elemento"}),e.jsxs(O,{data:{gridTemplateColumns:"1fr 5fr 2fr"},children:[e.jsxs("div",{className:"col tCenter",children:[e.jsx("div",{children:"Elemento"}),e.jsx("div",{children:"Nombre del programa"}),e.jsx("div",{children:"Variables"}),e.jsx("div",{children:"Constantes"}),e.jsx("div",{children:"Registros"}),e.jsx("div",{children:"Campos de registro"}),e.jsx("div",{children:"Párrafos"}),e.jsx("div",{children:"Archivos"})]}),e.jsxs("div",{className:"col tCenter",children:[e.jsx("div",{children:"Convención común"}),e.jsx("div",{children:"En mayúsculas, con guiones si es compuesto	"}),e.jsx("div",{children:"Prefijo por tipo o propósito + nombre descriptivo	WS-TOTAL-SUELDO"}),e.jsx("div",{children:"Nombre en mayúsculas, con -CONST al final"}),e.jsx("div",{children:"Nombre compuesto por contexto + “REG”"}),e.jsx("div",{children:"Nombre compuesto y jerárquico	"}),e.jsx("div",{children:"En mayúsculas, con nombres verbales o funcionales	"}),e.jsx("div",{children:"Nombre descriptivo y en mayúsculas"})]}),e.jsxs("div",{className:"col tCenter",children:[e.jsx("div",{children:"Ejemplo"}),e.jsx("div",{children:e.jsx("mark",{children:"PROCESO-PAGO"})}),e.jsx("div",{children:e.jsx("mark",{children:"(WS = Working Storage)"})}),e.jsx("div",{children:e.jsx("mark",{children:"IVA-CONST"})}),e.jsx("div",{children:e.jsx("mark",{children:"CLIENTE-REG"})}),e.jsx("div",{children:e.jsx("mark",{children:"CLIENTE-NOMBRE, CLIENTE-DIRECCION"})}),e.jsx("div",{children:e.jsx("mark",{children:"CALCULAR-TOTAL, IMPRIMIR-RECIBO"})}),e.jsx("div",{children:e.jsx("mark",{children:"ARCHIVO-ENTRADA, ARCHIVO-SALIDA"})})]})]},35),e.jsx("br",{}),e.jsx("h4",{children:"2.2.3 Prefijos recomendados según sección"}),e.jsxs(O,{data:{gridTemplateColumns:"1fr 5fr 2fr"},children:[e.jsxs("div",{className:"col tCenter",children:[e.jsx("div",{children:"Prefijo"}),e.jsx("div",{children:e.jsx("mark",{children:"WS-	"})}),e.jsx("div",{children:e.jsx("mark",{children:"LS-	"})}),e.jsx("div",{children:e.jsx("mark",{children:"LK-	"})}),e.jsx("div",{children:e.jsx("mark",{children:"FD-	"})}),e.jsx("div",{children:e.jsx("mark",{children:"PARM-"})}),e.jsx("div",{children:e.jsx("mark",{children:"ERR-"})}),e.jsx("div",{children:e.jsx("mark",{children:"CTR-"})})]}),e.jsxs("div",{className:"col tCenter",children:[e.jsx("div",{children:"Significado"}),e.jsx("div",{children:"Working-Storage"}),e.jsx("div",{children:"Local-Storage"}),e.jsx("div",{children:"Linkage"}),e.jsx("div",{children:"File Description"}),e.jsx("div",{children:"Parámetro de entrada"}),e.jsx("div",{children:"Campo relacionado con errores"}),e.jsx("div",{children:"Contador"})]}),e.jsxs("div",{className:"col tCenter",children:[e.jsx("div",{children:"Sección recomendada"}),e.jsx("div",{children:"WORKING-STORAGE SECTION"}),e.jsx("div",{children:"LOCAL-STORAGE SECTION"}),e.jsx("div",{children:"LINKAGE SECTION"}),e.jsx("div",{children:"FILE SECTION"}),e.jsx("div",{children:"LINKAGE SECTION (JCL)"}),e.jsx("div",{children:"WORKING-STORAGE SECTION"}),e.jsx("div",{children:"Cualquier sección de datos"})]})]},1),e.jsx("br",{}),e.jsx("h4",{children:"2.2.4 Estilo de nombres"}),e.jsx("p",{children:"Aunque COBOL no impone un estilo, se recomienda:"}),e.jsxs("ul",{children:[e.jsxs("li",{children:["Separar palabras con guiones (-) para mejorar la lectura:  ",e.jsx("br",{}),e.jsx(l,{}),"✅ ",e.jsx("mark",{children:"TOTAL-PAGOS-CLIENTE"}),"  ",e.jsx("br",{}),e.jsx(l,{}),"❌ ",e.jsx("mark",{children:"TOTALPAGOSCLIENTE"}),"  ",e.jsx("br",{})]}),e.jsx("li",{children:"Usar nombres descriptivos y significativos en lugar de abreviaciones crípticas."}),e.jsxs("li",{children:["Evitar usar palabras reservadas como nombres de variables o párrafos (",e.jsx("mark",{children:"IF"}),", ",e.jsx("mark",{children:"MOVE"}),", ",e.jsx("mark",{children:"FILE"}),", etc.)."]})]}),e.jsx("br",{}),e.jsx("p",{children:"Seguir estas convenciones facilita:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"La comprensión por parte de otros programadores."}),e.jsx("li",{children:"El mantenimiento de programas antiguos."}),e.jsx("li",{children:"La uniformidad en grandes sistemas COBOL."})]})]}),nj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"2.3",children:[e.jsx("h3",{children:"2.3 Estructura Jerárquica en COBOL"}),e.jsx("p",{children:"El lenguaje COBOL está diseñado con una estructura jerárquica muy clara y organizada, lo cual facilita su comprensión y mantenimiento, especialmente en ambientes empresariales donde la claridad y la documentación son fundamentales. A continuación, se explica la jerarquía típica que se sigue en un programa COBOL, desde su nivel más general hasta las instrucciones individuales:"}),e.jsx("br",{}),e.jsx("h4",{children:"2.3.1 Nivel 1 - PROGRAMA"}),e.jsx("p",{children:"El programa COBOL comienza con la identificación del programa. Aquí se define el nombre del mismo y se establecen algunas características generales."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"IDENTIFICATION DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"PROGRAM-ID"}),". PROGRAMA-EJEMPLO. ",e.jsx("br",{})]}),e.jsx("br",{}),e.jsx("h4",{children:"2.3.2 Nivel 2 - DIVISIONS"}),e.jsx("p",{children:"El programa COBOL está organizado en cuatro divisiones principales. Cada DIVISION se declara explícitamente y suele ir en mayúsculas, iniciando en la columna 8."}),e.jsx("br",{}),e.jsx("p",{children:"Divisiones:"}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"IDENTIFICATION"}),": Describe el programa y su autoría"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"ENVIRONMENT"}),": Define el entorno del sistema y archivos"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"DATA"}),": Declara las estructuras de datos y archivos"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"PROCEDURE"}),": Contiene la lógica del programa (instrucciones)"]})]}),e.jsx("br",{}),e.jsx("h4",{children:"2.3.3 Nivel 3 SECTIONS"}),e.jsx("p",{children:"Dentro de algunas divisiones, existen secciones que agrupan componentes relacionados. No todas las divisiones las requieren, pero cuando están presentes, ayudan a mantener el orden."}),e.jsx("br",{}),e.jsx("p",{children:"Ejemplos de secciones comunes:"}),e.jsxs("div",{className:"twoColums",style:{gridTemplateColumns:"1fr 1fr"},children:[e.jsxs(O,{data:{gridTemplateColumns:"10rem 20rem"},children:[e.jsxs("div",{className:"col",children:[e.jsx("div",{children:"División"}),e.jsx("div",{children:"ENVIRONMENT"}),e.jsx("div",{children:"DATA"}),e.jsx("div",{children:"PROCEDURE"})]}),e.jsxs("div",{className:"col",children:[e.jsx("div",{children:"Sección"}),e.jsx("div",{children:"CONFIGURATION, INPUT-OUTPUT"}),e.jsx("div",{children:"FILE, WORKING-STORAGE, LINKAGE"}),e.jsx("div",{children:"(opcionalmente puede tener secciones)"})]})]},1),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{})]})]}),e.jsx("br",{}),e.jsx("h4",{children:"2.3.4 Nivel 4 - PARAGRAPHS (Párrafos)"}),e.jsx("p",{children:"Los párrafos son bloques de código o lógica con un nombre identificador único. Su uso es obligatorio en la PROCEDURE DIVISION y permiten dividir la lógica del programa en partes manejables. Cada párrafo contiene una o más sentencias (instrucciones), y se declara sin necesidad de una palabra reservada como PARAGRAPH."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),"INICIAR. ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Inicio del programa'"}),". ",e.jsx("br",{})]}),e.jsx("br",{}),e.jsx("h4",{children:"2.3.5 Nivel 5 - SENTENCES / INSTRUCTIONS (Sentencias e Instrucciones)"}),e.jsxs("p",{children:["Las sentencias (sentences) están compuestas por una o más instrucciones (statements) COBOL, terminadas con punto (.). Las instrucciones son las operaciones o comandos que realiza el programa:",e.jsx("mark",{children:"MOVE"}),", ",e.jsx("mark",{children:"DISPLAY"}),", ",e.jsx("mark",{children:"PERFORM"}),","," ",e.jsx("mark",{children:"IF"}),", ",e.jsx("mark",{children:"EVALUATE"}),", etc."]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"MOVE"})," 0 ",e.jsx(s,{children:"TO"})," CONTADOR. ",e.jsx("br",{}),e.jsx(s,{children:"PERFORM"})," LEER-DATOS. ",e.jsx("br",{})]}),e.jsx("br",{}),e.jsx("h4",{children:"2.3.6 Esquema visual de la jerarquía"}),e.jsxs("div",{className:"codigo",children:["PROGRAMA    ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"  ↳ DIVISION    ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"↳ SECTION    ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"↳  PARAGRAPH    ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"↳ SENTENCE    ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"↳ INSTRUCTION    ",e.jsx("br",{}),e.jsx("br",{})]})]}),aj=()=>e.jsxs("article",{id:"modulo-2",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:" Módulo 2: Estructura de un Programa en COBOL."}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsx(ej,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(rj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(nj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z})]}),sj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"Mod3_1",children:[e.jsx("h3",{children:"3.1 IDENTIFICATION DIVISION"}),e.jsx("p",{children:"Es la primera división en un programa COBOL y tiene un propósito específico: proporcionar información de identificación sobre el programa. Esta división contiene metadatos que describen el programa, como su nombre, autor, fecha de creación y otros detalles importantes. No tiene una funcionalidad operativa en el programa COBOL. Su propósito principal es proporcionar información para la documentación y el seguimiento del código. Estos detalles de identificación son útiles para los desarrolladores, mantenimiento, auditoría y otros involucrados en el ciclo de vida del software. Además de los elementos mencionados, la IDENTIFICATION DIVISION también puede incluir otros comentarios o información que el equipo de desarrollo considere relevante para documentar el programa. La práctica de mantener información de identificación clara y actualizada es una buena costumbre de programación, ya que facilita la comprensión y el mantenimiento del código a lo largo del tiempo."}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("mark",{children:"PROGRAM-ID"}),": Esta declaración especifica el nombre del programa COBOL. El nombre del programa es una etiqueta única que lo identifica. Este párrafo sirve para especificar el nombre del programa. Este nombre será utilizado por el compilador o durante la ejecución para indicar en qué programa ocurrió algún error. El nombre del programa debe ajustarse a las reglas de formación de un identificador COBOL. El resto de los párrafos son opcionales, pueden aparecer en cualquier orden, y su utilización queda perfectamente definida en el formato descrito. Si un comentario ocupa más de una línea, no está permitido utilizar el guión como carácter de continuación, sin embargo puede ser continuado en las líneas siguientes, comenzando en el margen B. ",e.jsx("u",{children:"uso obligatorio"}),"."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"AUTHOR"}),": Identifica al autor o programador responsable."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"INSTALLATION"}),": Nombre de la empresa o instalación donde se escribió o se usará el programa."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"DATE-WRITTEN"}),": Fecha de creación del programa."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"DATE-COMPILED"}),": Fecha de compilación del programa. En algunos entornos se completa automáticamente."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"SECURITY"}),': Indica aspectos relacionados con la seguridad, por ejemplo: "Confidencial", "Público", etc.']}),e.jsxs("li",{children:[e.jsx("mark",{children:"REMARKS"}),": Se pueden incluir comentarios adicionales sobre el propósito o uso del programa."]})]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"IDENTIFICATION DIVISION"}),".  ",e.jsx("br",{}),e.jsx(s,{children:"PROGRAM-ID"}),".    CALCULO-NOMINA.  ",e.jsx("br",{}),e.jsx(s,{children:"AUTHOR"}),".        JUAN PEREZ.  ",e.jsx("br",{}),e.jsx(s,{children:"INSTALLATION"}),".  EMPRESA ABC S.A.  ",e.jsx("br",{}),e.jsx(s,{children:"DATE-WRITTEN"}),".  2025-04-10.  ",e.jsx("br",{}),e.jsx(s,{children:"DATE-COMPILED"}),". 2025-04-11.  ",e.jsx("br",{}),e.jsx(s,{children:"SECURITY"}),".      USO INTERNO.  ",e.jsx("br",{}),e.jsx(s,{children:"REMARKS"}),".       Este programa calcula la nómina de empleados mensualmente.  ",e.jsx("br",{})]}),e.jsx("br",{}),e.jsxs("p",{children:["✅ ",e.jsx("u",{children:"Buenas prácticas"}),":"]}),e.jsxs("li",{children:["Usar nombres descriptivos para el ",e.jsx("mark",{children:"PROGRAM-ID"}),"."]}),e.jsx("li",{children:"Completar todos los campos, especialmente en entornos corporativos con muchos programas."}),e.jsxs("li",{children:["Escribir fechas en formato internacional ",e.jsx("mark",{children:"AAAA-MM-DD"})," si es posible, para evitar confusiones."]}),e.jsx("br",{}),e.jsxs("p",{children:["⚠️ ",e.jsx("u",{children:"Advertencias comunes"}),":"]}),e.jsxs("li",{children:["La palabra clave ",e.jsx("mark",{children:"PROGRAM-ID"}),". debe ir en mayúsculas, comenzando en la columna 8 (en muchos estándares)."]}),e.jsxs("li",{children:["Los puntos (",e.jsx("mark",{children:"."}),") son obligatorios al final de cada cláusula."]})]}),ij=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"3.2",children:[e.jsx("h3",{children:"3.2 ENVIRONMENT DIVISION"}),e.jsxs("p",{children:["La ENVIRONMENT DIVISION es la segunda división de un programa COBOL. Su objetivo principal es definir las características del entorno donde se ejecuta el programa. Esto incluye aspectos como el tipo de computadora, los archivos que se utilizarán, y configuraciones especiales del sistema. Es Una de las divisiones principales en un programa COBOL y se utiliza para declarar y definir los recursos y dispositivos de entrada/salida que el programa utilizará. Esta división es esencial para configurar la interacción del programa con el entorno, como archivos de datos, unidades de cinta, impresoras y otros dispositivos de E/S.",e.jsx("strong",{children:"Declaración de Recursos de E/S"}),"Dentro de la ENVIRONMENT DIVISION, se encuentra la sección INPUT-OUTPUT SECTION. En esta sección, se declaran los recursos de entrada/salida utilizados por el programa."]}),e.jsx("br",{})," ",e.jsx("p",{children:"Secciones que la componen:"}),e.jsx("li",{children:"CONFIGURATION SECTION: Describe las computadoras y configuraciones especiales del entorno."}),e.jsx("li",{children:"INPUT-OUTPUT SECTION: Define el manejo de archivos y dispositivos de entrada/salida."}),e.jsx("h4",{children:"CONFIGURATION SECTION"}),e.jsx("p",{children:"Esta sección es opcional. Su utilidad es documentar el programa COBOL, indicando el modelo de ordenador utilizado y asociar los nombres mnemónicos especificados por el programador a nombres utilizados por el compilador. Esta sección contiene la descripción del ambiente de ejecución del programa COBOL. Incluye información sobre configuraciones de hardware y software, como dispositivos de entrada/salida, archivos, terminales y otros recursos necesarios para la ejecución del programa."}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("mark",{children:"SOURCE-COMPUTER"}),": Define el tipo de computadora para la cual se está desarrollando el programa COBOL. Esto incluye información sobre la arquitectura del sistema, como el tipo de procesador y el sistema operativo. Puede especificar el nombre del fabricante de la computadora y el modelo exacto.Define el tipo de computadora para la cual se está desarrollando el programa COBOL. La opción"," ",e.jsx("u",{children:"WITH DEBUGGING MODE"})," permite introducir en el fichero fuente COBOL, código que nos servirá de ayuda para depurar el programa. Párrafo OBJECT Sirve para especificar el modelo de ordenador que va a ejecutar el programa."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"OBJECT-COMPUTER"}),": Describe la computadora en la que se ejecutará el programa después de ser compilado. Esto puede ser diferente del ambiente de desarrollo y es útil para asegurar la portabilidad del programa entre diferentes sistemas.e especifica el nombre del fabricante de la computadora y el modelo exacto."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"MEMORY-SIZE"})," Opcional. Especifica la cantidad de memoria: disponible en el sistema de destino."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"SPECIAL-NAMES"}),": Proporciona nombres especiales para los caracteres, números o símbolos que se utilizarán en el programa. También se utiliza para asignar nombres a los caracteres no imprimibles y a los símbolos especiales. Se definen configuraciones adicionales como:",e.jsxs("ul",{children:[e.jsxs("li",{children:[" ",e.jsx("mark",{children:"DECIMAL-POINT IS COMMA"}),": Esta línea indica que el carácter de coma (,) se utilizará como el punto decimal en lugar del punto (.). Esto es útil en entornos donde el estándar de notación decimal es diferente al estándar COBOL."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"SYMBOLIC CHARACTER ESPACIO IS 33"}),"ó"," ",e.jsx("mark",{children:"SYMBOLIC CHARACTER ESCAPE IS 27"}),': Aquí se define un nombre simbólico para un carácter ASCII específico. En este caso, se define el carácter con código ASCII 33 (que es el signo de exclamación !) y se le asigna el nombre simbólico "ESPACIO". Esto puede ser útil para mejorar la legibilidad y mantenibilidad del código, ya que permite usar nombres significativos en lugar de valores numéricos..']}),e.jsxs("li",{children:[" ",e.jsx("mark",{children:"SYMBOLIC CHARACTER MEDIO ARE 172"}),': Similar al ejemplo anterior, aquí se define otro nombre simbólico para un carácter ASCII específico. En este caso, se define el carácter con código ASCII 172 y se le asigna el nombre simbólico "MEDIO".']}),e.jsxs("li",{children:[e.jsx("mark",{children:"ALPHABET"})," Define el conjunto de caracteres: alfanuméricos que se utilizarán en el programa.Define el conjunto de caracteres numéricos que se utilizarán en el programa."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"NUMERIC"})," se utiliza para definir el conjunto de: caracteres numéricos que se utilizarán en el programa."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"CLASS"})," Define clases de caracteres para uso en el: programa.Las clases de caracteres definidas con este párrafo pueden luego ser utilizadas para simplificar la declaración de variables y manipulaciones de texto en el programa COBOL."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"CURRENCY SIGN"}),": Define el símbolo que será tratado como signo monetario."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"RESERVE NETWORK-PRINTER"}),": En sistemas mainframe, reserva dispositivos de impresión en red."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"CRT STATUS IS"}),": Para interfaces de pantalla (usado en COBOL con control de terminales)."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"XML-SCHEMA"}),": Define el esquema XML cuando se usa soporte XML en COBOL (más común en compiladores modernos)."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"ENVIRONMENT-NAME"}),": Define nombres simbólicos para variables de entorno del sistema operativo."]})]})]})]}),e.jsx("h4",{children:"INPUT-OUTPUT SECTION"}),e.jsx("p",{children:"Esta sección es opcional.Describe los archivos utilizados por el programa COBOL para entrada y salida. Incluye información sobre los archivos secuenciales, secuenciales indexados y archivos relativos, así como los dispositivos de entrada/salida y otros recursos relacionados con la entrada y salida de datos.Uso obligatorio si se utilizan archivos externos."}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("mark",{children:"FILE-CONTROL"}),": Proporciona información detallada sobre los archivos utilizados por el programa, como nombres de archivos, organización, tipo de acceso y otras características necesarias para el manejo de archivos.",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("mark",{children:"SELECT"}),": Especifica el nombre lógico del archivo y establece una conexión entre el nombre lógico y el nombre físico del archivo en el sistema.Este nombre se utilizará en el programa COBOL para referirse al archivo. Es importante tener en cuenta que este nombre no está relacionado directamente con el nombre físico del archivo en el sistema de archivos."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"ORGANIZATION"})," Indica la organización del archivo en: el sistema de archivos, como secuencial, secuencial indexado o relativo. Puede ser:",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("mark",{children:"SEQUENTIAL"}),": En un archivo secuencial, los registros se almacenan uno tras otro en el orden en que se escriben en el archivo. Los registros se leen y escriben secuencialmente, desde el principio hasta el final del archivo. No se pueden acceder directamente a registros específicos sin recorrer previamente todos los registros anteriores. Es adecuado para archivos que se leen o escriben en orden secuencial, como archivos de texto o archivos de registro de transacciones."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"RELATIVE"}),": En un archivo relativo, los registros se almacenan en ubicaciones relativas a un número base. Se puede acceder a registros específicos utilizando un número relativo, que indica la posición del registro en relación con el número base. Los registros no necesariamente se almacenan en orden secuencial en el archivo; pueden estar dispersos. Es útil cuando se necesitan accesos aleatorios a registros específicos en el archivo, pero no se requiere una clave de acceso primaria."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"INDEXED"}),": En un archivo indexado, los registros se: organizan en orden secuencial en el archivo principal, pero también hay un archivo de índice asociado que contiene claves de acceso primarias y punteros a los registros correspondientes en el archivo principal. Permite un acceso directo a registros específicos utilizando una clave de acceso primaria. Los registros no tienen que estar en orden secuencial en el archivo principal. Es adecuado cuando se necesitan accesos aleatorios eficientes a registros basados en claves de acceso primarias, como en bases de datos."]})]})]}),e.jsxs("li",{children:[e.jsx("mark",{children:"ACCESS MODE"}),":  Define el modo de acceso al archivo, en: COBOL se utiliza para especificar cómo se accederá al archivo durante la ejecución del programa",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("mark",{children:"SEQUENTIAL (Secuencial)"}),": En el modo de acceso secuencial, el programa accede al archivo leyendo o escribiendo registros en orden secuencial, uno después del otro, desde el principio hasta el final del archivo. Este modo de acceso es apropiado para archivos en los que se necesita un procesamiento secuencial de los datos, como archivos de texto o archivos de registro de transacciones."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"RANDOM (Aleatorio)"}),": En el modo de acceso aleatorio, el programa puede acceder a registros específicos utilizando un número de registro relativo o una clave de acceso primaria. Este modo de acceso permite saltar directamente a registros específicos en el archivo, sin tener que leer o escribir registros previos. Es útil cuando se necesita un acceso aleatorio eficiente a registros específicos en el archivo, como en aplicaciones de bases de datos."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"DYNAMIC (Dinámico)"}),": El modo de acceso dinámico es similar al modo aleatorio, pero el programa tiene la capacidad de agregar, modificar o eliminar registros en cualquier posición dentro del archivo. Permite un acceso aleatorio flexible y dinámico a los datos en el archivo, lo que lo hace adecuado para aplicaciones que requieren un procesamiento interactivo o transaccional."]})]})]}),e.jsxs("li",{children:[e.jsx("mark",{children:"FILE STATUS"}),":  Opcional. Define una variable que: almacena el código de estado de la operación de E/S en el archivo.El uso de FILE STATUS es útil para manejar errores de E/S de manera efectiva en un programa COBOL. Después de realizar una operación de lectura, escritura u otra operación de E/S en un archivo, se puede verificar el valor de la variable file-status-variable para determinar si la operación fue exitosa o si se produjo algún error. Si se detecta un error, el programa puede tomar medidas apropiadas, como informar al usuario o intentar recuperarse del error."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"PASSWORD"}),": Opcional. Proporciona una contraseña de: acceso al archivo protegido.Proporciona una capa adicional de seguridad para restringir el acceso a archivos sensibles o críticos. Antes de abrir o realizar operaciones en el archivo especificado, el sistema solicitará la contraseña al usuario. Si la contraseña proporcionada no coincide con la especificada en el programa COBOL, el acceso al archivo será denegado y el programa puede tomar medidas apropiadas, como mostrar un mensaje de error o terminar la ejecución. Es importante tener en cuenta que el uso de contraseñas en archivos en COBOL depende del sistema operativo y del entorno en el que se ejecute el programa COBOL. No todos los sistemas admiten el uso de contraseñas para archivos, y la implementación de la seguridad puede variar entre sistemas."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"RECORDING MODE"}),' Esta declaración se utiliza para: especificar el modo de grabación de un archivo, que puede ser "F" (Fixed) o "V" (Variable). El modo de grabación determina si los registros del archivo tienen una longitud fija o variable.',e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("mark",{children:"Fixed (F - Fijo)"}),": En el modo de grabación fijo, todos los registros tienen la misma longitud fija. Cada registro ocupará el mismo número de bytes en el archivo, independientemente de la cantidad de datos reales en el registro. Los campos no utilizados en un registro fijo generalmente se llenan con caracteres de relleno (padding) para alcanzar la longitud fija especificada. Este modo es útil cuando se trabaja con registros que tienen una estructura predefinida y uniforme."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"Variable (V - Variable)"}),": En el modo de grabación variable, los registros pueden tener longitudes variables. Cada registro puede ocupar una cantidad diferente de bytes en el archivo, dependiendo de la cantidad de datos reales en el registro. Cada registro generalmente incluye un campo de longitud que indica la longitud del registro. Este modo es útil cuando se trabaja con registros que tienen longitudes variables y se desea minimizar el desperdicio de espacio en el archivo."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"Undefined (U - Indefinido)"}),": En el modo de grabación indefinido, no se define ninguna estructura específica para los registros. Los registros pueden tener longitudes y estructuras variables, y pueden incluir cualquier tipo de datos. Este modo proporciona una flexibilidad máxima en la estructura de los registros, pero puede ser más complejo de manejar y procesar."]})]})]})]})]}),e.jsxs("li",{children:[e.jsx("mark",{children:"I-O-CONTROL"}),": Especifica las características de los dispositivos de entrada y salida. Se utiliza para proporcionar control adicional sobre la entrada y salida (E/S) de archivos en el programa",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("mark",{children:"RERUN"}),": Esta cláusula indica que se pueden volver a ejecutar registros previamente procesados de un archivo secuencial después de haberse llegado al final del archivo."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"MERGE"}),": Esta cláusula se utiliza para especificar que el archivo de salida será un archivo de combinación. Es decir, los registros de entrada se combinan o se fusionan en un solo archivo de salida."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"REVERSED"}),": Indica que la operación de lectura secuencial se realizará en orden inverso."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"MULTIPLE FILE THREADING"}),": Esta cláusula permite la activación de subprocesos múltiples para realizar E/S en archivos."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"BLOCK CONTAINS n RECORDS"}),": Se utiliza para especificar el tamaño del bloque de registros en E/S secuencial. El valor n representa la cantidad de registros que se leerán o escribirán en cada operación de E/S."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"CONCURRENT ACCESS"}),": Permite el acceso simultáneo a un archivo compartido por varios programas."]})]})]}),e.jsxs("li",{children:[e.jsx("mark",{children:"ASSIGN"}),": Especifica la ubicación física del archivo.se utiliza para asociar un archivo lógico definido en el programa con un archivo físico en el sistema de archivos. El uso de ASSIGN es fundamental para establecer la conexión entre el programa COBOL y los archivos que utiliza. Al especificar la asignación entre el archivo lógico y el archivo físico, el programa sabe a qué archivo debe acceder durante la ejecución para leer o escribir datos."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"RECORD FORMAT"}),": Especifica el formato de los registros del archivo. Se utiliza para especificar el formato de los registros en un archivo.",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("mark",{children:"FIXED (Fijo)"}),": En el formato de registro fijo, todos los registros tienen la misma longitud fija. Cada registro ocupa el mismo número de caracteres o bytes, independientemente de la cantidad de datos que contenga. Se utiliza cuando los registros tienen una longitud predefinida y uniforme."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"VARIABLE (Variable)"}),": En el formato de registro variable, los registros pueden tener longitudes variables. Cada registro puede tener una longitud diferente, dependiendo de la cantidad de datos que contenga. Es útil cuando los registros pueden tener longitudes variables y se desea minimizar el espacio desperdiciado en el archivo."]})]})]}),e.jsxs("li",{children:[e.jsx("mark",{children:"ALTERNATE RECORD KEY IS"}),":  se utiliza para especificar campos alternativos que sirven como claves de acceso en archivos indexados. En los archivos indexados, además de la clave de acceso principal definida mediante RECORD KEY IS, se pueden especificar una o más claves de acceso alternativas utilizando ALTERNATE RECORD KEY IS. Estas claves de acceso alternativas proporcionan métodos adicionales para acceder a los registros del archivo de manera eficiente, lo que puede ser útil en diversas situaciones de acceso a datos."]})]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"ENVIRONMENT DIVISION"}),".   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"CONFIGURATION SECTION"}),".   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"SOURCE-COMPUTER"}),". IBM-ZSERIES.   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"OBJECT-COMPUTER"}),". IBM-ZSERIES.   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"SPECIAL-NAMES"}),".   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DECIMAL-POINT IS COMMA"}),"   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"SYMBOLIC CHARACTERS"}),"   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"ESPACIO ",e.jsx(s,{children:"IS"})," 33   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"MEDIO ",e.jsx(s,{children:"IS"})," 172   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"CURRENCY SIGN IS"})," ",e.jsx(d,{children:"'$'"}),"   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"CLASS"})," DIGITO ",e.jsx(s,{children:"IS"}),"  ",e.jsx(d,{children:"'0'"})," THRU ",e.jsx(d,{children:"'9'"}),"   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"CONSOLE IS CRT"}),"   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"PRINTER IS LPT1"}),".   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"INPUT-OUTPUT SECTION"}),".   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"FILE-CONTROL"}),".   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"SELECT"})," ARCHIVO-ENTRADA ",e.jsx(s,{children:"ASSIGN TO"})," ",e.jsx(d,{children:"'ENTRADA.DAT'"}),"   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"ORGANIZATION IS SEQUENTIAL"}),"  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"ACCESS MODE IS SEQUENTIAL"}),"  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"FILE STATUS IS FS-ENTRADA"}),".  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"SELECT"})," ARCHIVO-SALIDA ",e.jsx(s,{children:"ASSIGN TO"})," ",e.jsx(d,{children:"'SALIDA.DAT'"}),"   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"ORGANIZATION IS SEQUENTIAL"}),"   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"ACCESS MODE IS SEQUENTIAL"}),"  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"FILE STATUS IS FS-SALIDA"}),".  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"I-O-CONTROL"}),".   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"APPLY WRITE-THRU ON"})," ARCHIVO-SALIDA.   ",e.jsx("br",{})]}),e.jsx("br",{}),e.jsxs("p",{children:["✅ ",e.jsx("u",{children:"Buenas prácticas"}),":"]}),e.jsx("li",{children:"Utilizar nombres claros para los archivos y variables de estado."}),e.jsx("li",{children:"Configurar correctamente DECIMAL-POINT IS COMMA si se trabaja en países con separador decimal europeo."}),e.jsx("li",{children:"Asegurarse de que los nombres de archivos coincidan con los especificados en JCL o sistema operativo."})]}),lj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"3.3",children:[e.jsx("h3",{children:"3.3 DATA DIVISION"}),e.jsx("p",{children:"La DATA DIVISION es una de las divisiones más importantes en COBOL. Aquí se declaran todas las variables, estructuras, archivos, constantes y áreas de comunicación que el programa utilizará durante su ejecución. Permite definir y estructurar la memoria de trabajo del programa: datos internos, externos, temporales y parámetros recibidos o retornados de subprogramas."}),e.jsx("h4",{children:"FILE SECTION: "})," Define la estructura de los archivos que se utilizarán en el programa.Se utiliza para definir las estructuras de los archivos que el programa utilizará durante su ejecución. Las áreas de datos en la FILE SECTION no están disponibles hasta que los archivos no son abiertos en PROCEDURE DIVISION. Esta SECTION solo COBOL BATCH.",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("mark",{children:"FD file-name:"})," Este es el nombre lógico del archivo y es el mismo que se utiliza en el párrafo SELECT de la sección FILE-CONTROL. Este párrafo FD indica que se está describiendo la estructura de un archivo en particular."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"LABEL RECORDS ARE:"})," Esta cláusula se utiliza para especificar si los registros del archivo contienen etiquetas. La opción STANDARD indica que los registros tienen etiquetas estándar, mientras que OMITTED indica que no hay etiquetas en los registros."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"RECORDING MODE IS:"})," Esta cláusula se utiliza para especificar el formato de los registros en el archivo, pudiendo ser F (fijo), V (variable) o U (indefinido)."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"RECORD CONTAINS:"})," Esta cláusula se utiliza para especificar el número de registros que contiene un bloque de registros. Esto es relevante para archivos secuenciales."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"BLOCK CONTAINS:"})," Esta cláusula se utiliza para especificar el número de bloques de registros en un bloque de bloques. Esto es relevante para archivos secuenciales."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"DATA RECORD IS:"})," Esta cláusula se utiliza para especificar el nombre del nivel de datos que representa un registro en el archivo."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"LINAGE IS:"})," Esta cláusula se utiliza para especificar el número de líneas entre los registros. Es útil para formatear la salida de impresión."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"OMITTED RECORDS ARE:"})," Esta cláusula se utiliza para especificar cómo se manejarán los registros omitidos durante la operación de entrada. La opción OMITTED indica que los registros omitidos no se devolverán como registros de datos."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"VALUE OF FILE-ID IS:"})," Esta cláusula se utiliza para asignar un valor literal al identificador del archivo."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"01 level-number:"})," Esto define el esquema de datos para un registro dentro del archivo. Los campos de datos individuales se definen dentro de este nivel usando cláusulas como PIC, USAGE, etc."]})]}),e.jsx("h4",{children:"WORKING-STORAGE SECTION: "})," Almacena las variables que se utilizan durante la ejecución del programa.Se utiliza para definir variables y áreas de trabajo que se utilizarán durante la ejecución del programa.se utiliza para declarar variables y áreas de trabajo que se necesitan durante la ejecución del programa. Estas variables pueden ser temporales, acumuladores, contadores, buffers de datos, etc. Las variables declaradas en esta sección no retienen su valor entre diferentes ejecuciones del programa; se inicializan cada vez que se ejecuta el programa.",e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),e.jsx(l,{}),"01 WS-COUNTER ",e.jsx(s,{children:"PIC"})," 9(3) ",e.jsx(s,{children:"VALUE ZEROES"}),". ",e.jsx("br",{}),e.jsx(l,{}),"01 WS-NAME ",e.jsx(s,{children:"PIC"})," X(20) ",e.jsx(s,{children:"VALUE"})," ",e.jsx(d,{children:"'John Doe'"}),". ",e.jsx("br",{})]}),e.jsx("h5",{children:"DATA ITEM:"})," Se describen los campos de un registro, las variables a ser usadas por el programa para la ejecución del mismo. Todos los DATA ITEMS deben finalizar con un punto. Y a su vez poseen distintos formatos. Dentro de cada nivel, puedes usar cláusulas como PIC, USAGE, VALUE, REDEFINES, etc., para definir las características de la variable o área de trabajo. Algunas de las cláusulas más comunes incluyen:",e.jsx("h5",{children:"Data Item - Formato 1:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Level-number_data-name-1"}),e.jsx("li",{children:"redefines-clause"}),e.jsx("li",{children:"blank-when-zero-clause"}),e.jsx("li",{children:"external-clause"}),e.jsx("li",{children:"FILLER"}),e.jsx("li",{children:"global-clause"}),e.jsx("li",{children:"justified-clause"}),e.jsx("li",{children:"occurs-clause"}),e.jsx("li",{children:"picture-clause"}),e.jsx("li",{children:"sign-clause"})]}),e.jsx("p",{children:"Las cláusulas se pueden escribir en cualquier orden con 2 excepciones"}),e.jsx("li",{children:"Si el data-name o FILLER es especificado este debe estar precedido por el level-number"}),e.jsx("li",{children:"Cuando la cláusula REDEFINES es especificada, debe estar precedida por data-name o FILLER"}),e.jsx("p",{children:"Los niveles en FORMATO 1 pueden ser 01 al 49 o 77 (ver ejemplos en Mainframe)"}),e.jsx("h5",{children:"Data Item - Identificadores:"}),"Los identificadores son nombres creados por el programador. Para formar un identificador hay que tener en cuenta las siguientes reglas:",e.jsx("li",{children:"Un identificador consta de un máximo de 30 caracteres. Estos caracteres pueden ser solamente letras, dígitos y el guión."}),e.jsx("li",{children:"No deben empezar ni terminar en un guión."}),e.jsx("li",{children:"Un identificador definido por el usuario no puede tener el mismo nombre que una palabra reservada."}),e.jsx("li",{children:"Un identificador debe contener obligatoriamente al menos una letra, excepto cuando se trate de un nombre de párrafo o de sección."}),e.jsx("li",{children:"Cualquier identificador utilizado en la PROCEDURE DIVISION debe estar previamente definido en la ENVIRONMENT DIVISION o en la DATA DIVISION."}),e.jsx("h4",{children:"LINKAGE SECTION: "})," Se utiliza para la comunicación entre programas COBOL y otros lenguajes de programación. También Para definir variables que son compartidas entre programas llamadores y programas subordinados cuando se realiza una llamada a un programa mediante un procedimiento (CALL).",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("mark",{children:"01 level-number:"})," Al igual que en la sección WORKING-STORAGE, defines entradas en la sección LINKAGE SECTION. Puedes utilizar cualquier nivel de número dentro de esta sección."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"DATA ITEM clause: "}),"Al igual que en la WORKING-STORAGE SECTION, dentro de cada nivel puedes usar cláusulas como PIC, USAGE, VALUE, REDEFINES, etc., para definir las características de la variable o área de enlace."]})]}),e.jsx("h4",{children:"LOCAL-STORAGE SECTION: "})," Almacena variables que solo son accesibles dentro de un párrafo o una sección.se utiliza para definir variables locales que son específicas de un programa o subrutina en particular y que no necesitan ser compartidas entre programas llamadores y programas subordinados. Estas variables son locales al programa o subrutina en el que se definen y no se conservan entre diferentes llamadas al programa.",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("mark",{children:"01 level-number: "}),"Al igual que en las secciones anteriores, defines entradas en la sección LOCAL-STORAGE SECTION. Puedes utilizar cualquier nivel de número dentro de esta sección."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"DATA ITEM clause:"})," Dentro de cada nivel, puedes usar cláusulas como PIC, USAGE, VALUE, REDEFINES, etc., para definir las características de la variable o área de almacenamiento local."]})]}),e.jsx("br",{}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DATA DIVISION"}),".   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"FILE SECTION"}),".   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"FD"})," ARCHIVO-ENTRADA   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"RECORDING MODE IS"})," F   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"BLOCK CONTAINS"})," 0 ",e.jsx(s,{children:"RECORDS"}),"   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"LABEL RECORDS ARE STANDARD"}),"   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DATA RECORD IS"})," REG-ENTRADA.   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"01 REG-ENTRADA.   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"05 CAMPO1   ",e.jsx(s,{children:"PIC"})," X(10).   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"05 CAMPO2   ",e.jsx(s,{children:"PIC"})," 9(5).   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"FD"})," ARCHIVO-SALIDA   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"RECORDING MODE IS"})," F   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"BLOCK CONTAINS"})," 0 ",e.jsx(s,{children:"RECORDS"}),"   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"LABEL RECORDS ARE STANDARD"}),"   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DATA RECORD IS"})," REG-SALIDA.   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"01 REG-SALIDA.   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"05 RESULTADO   ",e.jsx(s,{children:"PIC"})," X(20).   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),".   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"01 WS-FLAG         ",e.jsx(s,{children:"PIC"})," X     ",e.jsx(s,{children:"VALUE SPACE"}),".   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"01 WS-CONTADOR     ",e.jsx(s,{children:"PIC"})," 9(4)  ",e.jsx(s,{children:"VALUE ZERO"}),".   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"01 WS-NOMBRE       ",e.jsx(s,{children:"PIC"})," X(20) ",e.jsx(s,{children:"VALUE SPACES"}),".   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"01 WS-FECHA.   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"05 WS-ANIO     ",e.jsx(s,{children:"PIC"})," 9(4).   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"05 WS-MES      ",e.jsx(s,{children:"PIC"})," 99.   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"05 WS-DIA      ",e.jsx(s,{children:"PIC"})," 99.   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"01 WS-FILE-STATUS.   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"05 FS-ENTRADA  ",e.jsx(s,{children:"PIC"})," XX.   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"05 FS-SALIDA   ",e.jsx(s,{children:"PIC"})," XX.   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"LOCAL-STORAGE SECTION"}),".   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"01 LS-TEMP-CALCULO   ",e.jsx(s,{children:"PIC"})," 9(5) ",e.jsx(s,{children:"VALUE"})," 0.   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"LINKAGE SECTION"}),".   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"01 PARM-LIST.   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"05 PARM1-LENGTH ",e.jsx(s,{children:"PIC"})," 9(4) ",e.jsx(s,{children:"COMP"}),".   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"05 PARM1        ",e.jsx(s,{children:"PIC"})," X(10).   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"05 PARM2        ",e.jsx(s,{children:"PIC"})," X(10).   ",e.jsx("br",{})]}),e.jsx("br",{}),e.jsx("br",{}),e.jsx("h4",{children:"Uso de Variables"}),e.jsxs("p",{children:["En COBOL, la declaración de variables es una parte fundamental para definir la estructura de datos que se utilizará en un programa. Las variables en COBOL se utilizan para almacenar información, realizar cálculos y representar datos de entrada y salida. Por convención se antepone ",e.jsx("strong",{children:"wsv_"})," para las variables y",e.jsx("strong",{children:"wsc_"})," para las constantes Aquí se describen los aspectos clave de la declaración de variables en COBOL:"]}),e.jsx("h5",{children:"Nombres de Variables en COBOL"}),e.jsx("p",{children:"En COBOL, los nombres de variables deben seguir ciertas reglas y convenciones:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Los nombres son sensibles a mayúsculas y minúsculas."}),e.jsx("li",{children:"Los nombres pueden contener letras, números y guiones bajos (underscores)."}),e.jsx("li",{children:"Los nombres no pueden comenzar con un número."}),e.jsx("li",{children:"Los nombres pueden tener una longitud máxima, que varía según la implementación de COBOL, pero generalmente es de 30 a 31 caracteres."})]}),e.jsx("h4",{children:"Uso de PICTURE"}),e.jsx("p",{children:"La cláusula PICTURE indica las características generales de edición de un DATA-ITEM. PIC o PICTURE son equivalentes. El máximo STRING de caracteres es de 30. Los paréntesis en un STRING de caracteres indican repetición. La cláusula PICTURE se utiliza para especificar la forma y el contenido de una variable en COBOL. Define el formato de datos que se almacenará en la variable y cómo se presentará. La cláusula PICTURE es especificada para todos los DATA-ITEM elementales. No es especificada para DATA-ITEM grupales, en un INDEX-DATA (USAGE INDEX ) o USAGE IS POINTER o en una cláusula RENAMES."}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 FechaNacimiento ",e.jsx(s,{children:"PIC"})," 9(8). ",e.jsx("br",{}),"01 NumeroSeguridadSocial ",e.jsx(s,{children:"PIC"})," X(11). ",e.jsx("br",{}),"01 PrecioProducto ",e.jsx(s,{children:"PIC"})," 9(5)V9(2)."]}),e.jsx("p",{children:"En estos ejemplos, hemos utilizado PICTURE para definir el formato de variables que almacenan fechas, números de seguridad social y precios de productos."})]}),e.jsx("h5",{children:"Variables Simples:"}),e.jsx("p",{children:"Son elementos básicos de almacenamiento que contienen un solo valor. Se declaran en la sección DATA DIVISION del programa y se utilizan para almacenar información como números, caracteres o fechas. "}),e.jsx("h5",{children:"Variables Compuestas:"}),'Son estructuras de datos que pueden contener múltiples elementos individuales llamados "campos" o "subvariables". Estas estructuras permiten agrupar información relacionada en una única entidad. Hay varias formas de declarar variables compuestas en COBOL, y algunas de las más comunes son los registros y las tablas.',e.jsx("h4",{children:"Niveles de Jerarquía en COBOL"}),e.jsx("p",{children:"En COBOL, las variables se organizan jerárquicamente mediante niveles numéricos. Cada nivel tiene un propósito específico en la estructura de datos del programa. El uso adecuado de los niveles de jerarquía es esencial para organizar y describir la relación entre las variables en un programa COBOL."}),e.jsx("h5",{children:"Level Numbers"}),e.jsx("li",{children:"Los niveles 01 y 77 deben comenzar en margen A y debe estar seguidos por un blanco y los mismos están asociados a un data-name o FILLER."}),e.jsx("li",{children:"Los niveles 02 al 49 deben comenzar en margen A o B, y deben estar seguidos por un blanco y los mismos están asociados a un data-name o FILLER."}),e.jsx("li",{children:"Lo niveles 66 o 88, pueden empezar en margen A o B deben estar seguidos por un blanco y junto con el nivel 77 son llamados niveles especiales."}),e.jsx("li",{children:"LEVEL 66, contiene una cláusula RENAMES. Reagrupa ítems previamente definidos."}),e.jsx("li",{children:"No puede ser RENAME de otro nivel 66, 01, 77 o 88."}),e.jsx("li",{children:"LEVEL 77, no puede ser subdivido y el data-name debe ser único como variable, dado que no puede ser calificado."}),e.jsx("li",{children:"LEVEL 88, establece un condition-name asociado a una cláusula VALUE."}),e.jsxs("div",{className:"codigo",children:["77 CONTADOR ",e.jsx(s,{children:"PIC"})," 9(06) ",e.jsx(s,{children:"COMP VALUE ZEROS"}),".  ",e.jsx("br",{}),"01 REG-EMPLEADO.  ",e.jsx("br",{}),e.jsx(l,{}),"05 TIPO-EMPLEADO ",e.jsx(s,{children:"PIC"})," X.  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"88 EXPERTO ",e.jsx(s,{children:"VALUE"})," 'E'.  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"88 NO-EXPERTO ",e.jsx(s,{children:"VALUE"})," 'N'.  ",e.jsx("br",{}),e.jsx(l,{}),"05 DIRECCION.  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"10 CALLE ",e.jsx(s,{children:"PIC"})," X(15).  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"10 NUMERO ",e.jsx(s,{children:"PIC"})," X(05).  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"10 CIUDAD ",e.jsx(s,{children:"PIC"})," X(15).  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"10 PROVINCIA ",e.jsx(s,{children:"PIC"})," XX.  ",e.jsx("br",{}),"66 CIUDAD-PROVINCIA ",e.jsx(s,{children:"RENAMES"})," CIUDAD ",e.jsx(s,{children:"THRU"})," PROVINCIA.  ",e.jsx("br",{})]}),e.jsx("h5",{children:"Level Indicators"}),e.jsx("li",{children:"Cuando un dato no puede subdividirse en más de un dato se llama ítem elemental. En caso contrario es un ítem grupal."}),e.jsx("li",{children:"Los niveles 01 al 49 pueden ser de un ítem elemental o grupal. Y los niveles de ítem deben estar en orden creciente pero no consecutivo."}),e.jsx("li",{children:"Los niveles 66, 77 y 88 son para ítem elementales."}),e.jsx("h5",{children:"Data Name: "}),e.jsx("li",{children:"Identifican un dato a ser descripto."}),e.jsx("li",{children:"Si el DATA-NAME identifica un DATA-ITEM a ser usados en un programa. Entonces el DATA-NAME debe ser la primera palabra seguida del LEVEL-NUMBER"}),e.jsx("li",{children:"Un DATA-NAME no puede ser usado como nombre de párrafo o nombre de sección en la PROCEDURE DIVISION"}),e.jsx("li",{children:"Con calificación un DATA-NAME puede ser no único."}),e.jsxs("div",{className:"codigo",children:["01 REG-EMPLEADO.  ",e.jsx("br",{}),e.jsx(l,{}),"02 COD-EMPLEADO ",e.jsx(s,{children:"PIC"})," 9(05).  ",e.jsx("br",{}),e.jsx(l,{}),"02 NOMBRE-EMPLEADO ",e.jsx(s,{children:"PIC"})," X(40).  ",e.jsx("br",{}),e.jsx(I,{children:".........................."}),"  ",e.jsx("br",{}),"01 PROYECTO.  ",e.jsx("br",{}),e.jsx(l,{}),"02 COD-PROYECTO ",e.jsx(s,{children:"PIC"})," 9(03).  ",e.jsx("br",{}),e.jsx(l,{}),"02 NOMBRE-PROYECTO ",e.jsx(s,{children:"PIC"})," X(25).  ",e.jsx("br",{}),e.jsx(l,{}),"02 CODEMPLEADO ",e.jsx(s,{children:"PIC"})," 9(05).  ",e.jsx("br",{}),e.jsx(I,{children:".........................."}),"  ",e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),".  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," COD-EMPLEADO ",e.jsx(s,{children:"IN"})," PROYECTO ",e.jsx(s,{children:"TO"})," ",e.jsx(I,{children:"(IN o OF son equivalentes )"}),"  ",e.jsx("br",{}),e.jsx(I,{children:".........................."}),"  ",e.jsx("br",{})]}),e.jsx("h4",{children:"Nivel 01 (Nivel Principal)"}),e.jsxs("ul",{children:[e.jsx("li",{children:"El nivel 01 se utiliza para definir las variables principales o registros."}),e.jsx("li",{children:"Las variables declaradas a nivel 01 son las más grandes y representan estructuras de datos completas."}),e.jsx("li",{children:"Pueden contener variables de nivel inferior y otras estructuras de datos."}),e.jsx("li",{children:"Se utilizan para organizar y describir datos a un alto nivel de abstracción."})]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 Cliente. ",e.jsx("br",{}),e.jsx(l,{}),"02 Nombre ",e.jsx(s,{children:"PIC"})," X(30). ",e.jsx("br",{}),e.jsx(l,{}),"02 Edad ",e.jsx(s,{children:"PIC"})," 99. ",e.jsx("br",{}),e.jsx(l,{}),"02 Direccion. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"03 Calle ",e.jsx(s,{children:"PIC"})," X(50). ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"03 Ciudad ",e.jsx(s,{children:"PIC"})," X(20)."]}),e.jsx("p",{children:"En este ejemplo, Cliente es una variable a nivel 01 que contiene datos de un cliente, como nombre, edad y dirección. A su vez, Direccion es una estructura de datos dentro de Cliente."})]}),e.jsx("h4",{children:"Nivel 02, 03, 04, etc. (Niveles Inferiores)"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Los niveles 02, 03, 04, etc., se utilizan para definir variables secundarias dentro de una estructura."}),e.jsx("li",{children:"Estas variables se utilizan para representar campos individuales o subestructuras dentro de la variable de nivel superior."}),e.jsx("li",{children:"Los niveles más bajos indican una relación de anidamiento dentro de la estructura de datos."})]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 Empleado. ",e.jsx("br",{}),e.jsx(l,{}),"02 Nombre ",e.jsx(s,{children:"PIC"})," X(30). ",e.jsx("br",{}),e.jsx(l,{}),"02 Edad ",e.jsx(s,{children:"PIC"})," 99. ",e.jsx("br",{}),e.jsx(l,{}),"02 Departamento. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"03 NombreDepto ",e.jsx(s,{children:"PIC"})," X(20). ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"03 UbicacionDepto ",e.jsx(s,{children:"PIC"})," X(30). ",e.jsx("br",{}),e.jsx(l,{}),"02 Salario ",e.jsx(s,{children:"PIC"})," 9(7)V99."]}),e.jsx("p",{children:"En este ejemplo, las variables Nombre, Edad, Departamento, y Salario son de nivel 02 dentro de la variable Empleado. A su vez, NombreDepto y UbicacionDepto son de nivel 03 dentro de Departamento."})]}),e.jsx("h4",{children:"Uso del 77"}),e.jsx("p",{children:"cuando se utiliza el nivel de número 77, se está definiendo una variable de nivel elemental. Esta variable no se subdivide en ninguna otra parte de la estructura de datos y no forma parte de ningún registro. Es una variable independiente y no tiene componentes adicionales."}),e.jsxs("div",{className:"codigo",children:["77 VARIABLE-EJEMPLO ",e.jsx(s,{children:"PIC"})," X(10)."]}),e.jsx("h4",{children:"Uso del 88"}),e.jsx("p",{children:"El nivel 88 en COBOL se utiliza para definir condiciones simbólicas o alias para valores específicos de una variable. Proporciona una forma legible y fácil de entender para verificar si una variable tiene un valor particular. Se puede utilizar en conjunción con variables alfanuméricas y numéricas."}),e.jsx("p",{children:"Supongamos que tenemos una variable ESTADO-CIVIL que puede tomar valores como 'S' para soltero, 'C' para casado, 'D' para divorciado y 'V' para viudo. Podemos definir condiciones simbólicas utilizando el nivel 88 para estos valores específicos de la siguiente manera:"}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 ESTADO-CIVIL ",e.jsx(s,{children:"PIC"})," X. ",e.jsx("br",{}),e.jsx(l,{}),"88 SOLTERO VALUE ",e.jsx(d,{children:"'S'"}),". ",e.jsx("br",{}),e.jsx(l,{}),"88 CASADO VALUE ",e.jsx(d,{children:"'C'"}),". ",e.jsx("br",{}),e.jsx(l,{}),"88 DIVORCIADO VALUE ",e.jsx(d,{children:"'D'"}),". ",e.jsx("br",{}),e.jsx(l,{}),"88 VIUDO VALUE ",e.jsx(d,{children:"'V'"}),". ",e.jsx("br",{})]}),e.jsx("p",{children:"Ahora, podemos utilizar estas condiciones simbólicas para verificar el estado civil de una persona de una manera más legible en nuestro programa. Por ejemplo:"})]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"IF"})," SOLTERO ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'La persona está soltera.'"})," ",e.jsx("br",{}),e.jsx(s,{children:"ELSE IF"})," CASADO ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'La persona está casada.'"})," ",e.jsx("br",{}),e.jsx(s,{children:"ELSE IF"})," DIVORCIADO ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'La persona está divorciada.'"})," ",e.jsx("br",{}),e.jsx(s,{children:"ELSE IF"})," VIUDO ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'La persona está viuda.'"})," ",e.jsx("br",{}),e.jsx(s,{children:"END-IF"}),". ",e.jsx("br",{})]}),e.jsx("p",{children:"Aquí, SOLTERO, CASADO, DIVORCIADO y VIUDO actúan como condiciones simbólicas que se evalúan como verdaderas si la variable ESTADO-CIVIL tiene los valores correspondientes. Esto hace que el código sea más legible y fácil de entender en comparación con el uso directo de valores de variables en las condiciones."})]}),e.jsx("h5",{children:"Caso particular"}),e.jsx("p",{children:"Un campo declarado con nivel 77 no puede tener subniveles estructurales como lo haría un campo de nivel 01 (es decir, no puede tener por debajo 02, 03, etc.). PERO... las condiciones de nivel 88 no son realmente subcampos en cuanto a estructura de datos. Las condiciones de nivel 88 no crean campos nuevos ni subniveles, sino que son etiquetas simbólicas asociadas al contenido de un campo ya definido. Por eso, sí se pueden usar condiciones 88 asociadas a un campo 77"}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["77  MI-CAMPO. ",e.jsx("br",{}),e.jsx(l,{}),"  02  SUBCAMPO."]}),e.jsx("div",{children:"❌ Esto es inválido"}),e.jsxs("div",{className:"codigo",children:["77  WS-STATUS-SUC           ",e.jsx(s,{children:"PIC"})," X. ",e.jsx("br",{}),e.jsx(l,{}),"  88  WS-FIN-SUC          ",e.jsx(s,{children:"VALUE"})," 'Y'. ",e.jsx("br",{}),e.jsx(l,{}),"  88  WS-NO-FIN-SUC       ",e.jsx(s,{children:"VALUE"})," 'N'."]}),e.jsx("div",{children:"✅ Esto es perfectamente válido"})]}),e.jsx("h5",{children:"SET TO TRUE"}),e.jsx("p",{children:"El valor asociado con la condition-name es localizado en una variable condicional de acuerdo a las reglas de la cláusula VALUE."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"Red"})," condition-name ",e.jsx(s,{children:"TO TRUE"})," ",e.jsx("br",{}),"01 SKILL-PERS ",e.jsx(s,{children:"PIC"})," X. ",e.jsx("br",{}),e.jsx(l,{}),"88 ESPECIALISTA ",e.jsx(s,{children:"VALUE"})," 'E'. ",e.jsx("br",{}),e.jsx(l,{}),"88 NO-ESPECIALISTA ",e.jsx(s,{children:"VALUE"})," 'N'. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(I,{children:"............."})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"Red"})," ESPECIALISTA ",e.jsx(s,{children:"TO TRUE"}),". ",e.jsx("br",{}),e.jsx(I,{children:"IDEM MOVE 'E' TO SKILL-PERS"})]}),e.jsx("h4",{children:"Uso de Niveles de Jerarquía"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Los niveles de jerarquía ayudan a organizar y describir la relación entre las variables y campos de datos en un programa COBOL."}),e.jsx("li",{children:"Se utilizan para representar estructuras de datos complejas y anidadas, lo que facilita la manipulación de información detallada en aplicaciones empresariales."}),e.jsx("li",{children:"Los niveles más bajos se utilizan para definir campos individuales o subestructuras, mientras que los niveles superiores representan estructuras de datos más amplias."})]}),e.jsx("h4",{children:"Uso de VALUE"}),e.jsx("li",{children:"La cláusula VALUE especifica el contenido inicial del DATA-ITEM, puede ser un literal entre comillas, o un valor."}),e.jsx("li",{children:"La cláusula VALUE no es válida en LINKAGE SECTION."}),e.jsx("li",{children:"La cláusula VALUE tiene diferentes formatos."}),e.jsx("br",{}),e.jsx("p",{children:"FORMATO 1:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Literal VALUE 'xxxxx'"}),e.jsx("li",{children:"Valor VALUE ZEROS o VALUE 1 (cualquier valor numérico dependiendo del PICTURE )"})]}),e.jsx("br",{}),e.jsx("p",{children:"FORMATO 2:"}),e.jsx("ul",{children:e.jsx("li",{children:"88 condition-name VALUE literal-1 THRU literal-2"})}),e.jsx("br",{}),e.jsx("p",{children:"FORMATO 3:"}),e.jsx("ul",{children:e.jsx("li",{children:"VALUE IS NULL / NULLS"})}),"ejemplo:",e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01. …………… ",e.jsx("br",{}),e.jsx(l,{}),"02 NIVEL-SKILL ",e.jsx(s,{children:"PIC"})," 99. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"88 TRAINEE ",e.jsx(s,{children:"VALUE"})," 1 ",e.jsx(s,{children:"THRU"})," 3. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"88 JUNIOR ",e.jsx(s,{children:"VALUE"})," 4 ",e.jsx(s,{children:"THRU"})," 7. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"88 SEMI-SENIOR ",e.jsx(s,{children:"VALUE"})," 8 ",e.jsx(s,{children:"THRU"})," 11. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"88 SENIOR ",e.jsx(s,{children:"VALUE"})," 12 ",e.jsx(s,{children:"THRU"})," 15. ",e.jsx("br",{}),e.jsx(l,{}),"02 COSTO. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"03 PESOS ",e.jsx(s,{children:"PIC"})," 9(05). ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"03 FILLER ",e.jsx(s,{children:"PIC"})," X ",e.jsx(s,{children:"VALUE"})," '*'. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"03 CENTAVOS ",e.jsx(s,{children:"PIC"})," 99. ",e.jsx("br",{}),e.jsx(l,{}),"02 FC-CODE-GOOD ",e.jsx(s,{children:"PIC"})," S9(08) ",e.jsx(s,{children:"BINARY VALUE"})," ","LOW-VALUES. ",e.jsx("br",{}),e.jsx(l,{}),"02 PRECIO ",e.jsx(s,{children:"PIC"})," 999V99 ",e.jsx(s,{children:"VALUE"})," 123,45. ",e.jsx("br",{}),e.jsx(l,{}),"02 LINEA ",e.jsx(s,{children:"PIC"})," X(132)",e.jsx(s,{children:"VALUE SPACES "})," . ",e.jsx("br",{}),e.jsx(l,{}),"02 SUBRAYADO ",e.jsx(s,{children:"PIC"})," X(132) ",e.jsx(s,{children:"VALUE ALL"})," ",e.jsx(d,{children:"'_'"}),". ",e.jsx("br",{}),e.jsx(l,{}),"77 AEROPUERTO ",e.jsx(s,{children:"PIC"})," X(10) ",e.jsx(s,{children:"VALUE"})," ",e.jsx(d,{children:"'AEROPARQUE'"}),". ",e.jsx("br",{})]}),e.jsx("h4",{children:"Niveles de Jerarquía"}),e.jsx("p",{children:"En COBOL, las variables se organizan mediante niveles de jerarquía. El nivel 01 se utiliza para las variables principales, y los niveles 02, 03, etc., se utilizan para las variables secundarias dentro de una estructura. Esta jerarquía ayuda a organizar y describir las relaciones entre las variables."}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 Cliente. ",e.jsx("br",{}),e.jsx(l,{}),"02 NumeroCliente ",e.jsx(s,{children:"PIC"})," 9(5). ",e.jsx("br",{}),e.jsx(l,{}),"02 NombreCliente ",e.jsx(s,{children:"PIC"})," X(30). ",e.jsx("br",{}),"01 Cuenta. ",e.jsx("br",{}),e.jsx(l,{}),"02 SaldoCuenta ",e.jsx(s,{children:"PIC"})," S9(7)V99."]}),e.jsx("p",{children:"En este ejemplo, hemos definido dos variables principales, Cliente y Cuenta, cada una con subvariables dentro de ellas."})]}),e.jsx("h5",{children:"Constantes Figurativas"}),e.jsx("p",{children:"Son constantes predefinidas de COBOL que pueden usarse en cualquier parte de la WORKING STORAGE SECTION o de la PROCEDURE DIVISION para darle valor a un campo. Son palabras reservadas que tienen un valor constante."}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"SPACE o SPACES"}),": Se refiere al carácter espacio en blanco. Asigna espacios a un campo no numérico. Puede ser utilizado para inicializar variables alfanuméricas con espacios en blanco. Por ejemplo, MOVE SPACES TO NOMBRE asigna espacios en blanco a la variable NOMBRE."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"ZERO, ZEROS o ZEROES"}),": Se refieren al número cero. Pueden ser utilizados para inicializar variables numéricas con ceros. Por ejemplo, MOVE ZEROS TO NUMERO asigna ceros a la variable NUMERO."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"QUOTE o QUOTES"}),": Se refiere al carácter de comillas simples ('), también conocido como apóstrofe. Se utiliza para delimitar literales alfanuméricos en COBOL. Por ejemplo, MOVE 'TEXTO' TO NOMBRE asigna el literal 'TEXTO' a la variable NOMBRE."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"HIGH-VALUE o HIGH-VALUES"}),": se refiere al valor más alto posible en el conjunto de caracteres utilizado por el sistema. En EBCDIC, es el carácter hexadecimal X'FF', y en ASCII, es el carácter hexadecimal X'7F'. Puede ser utilizado para inicializar variables alfanuméricas con el valor más alto posible. Por ejemplo, MOVE HIGH-VALUES TO CADENA asigna el valor más alto posible a la variable CADENA."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"LOW-VALUE o LOW-VALUES"}),": Se refiere al valor más bajo posible en el conjunto de caracteres utilizado por el sistema. En EBCDIC, es el carácter hexadecimal X'00', y en ASCII, es el carácter hexadecimal X'00'. Puede ser utilizado para inicializar variables alfanuméricas con el valor más bajo posible. Por ejemplo, MOVE LOW-VALUES TO CADENA asigna el valor más bajo posible a la variable CADENA."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"ALL"}),' "literal": Representa una repetición del literal especificado. Se usa para llenar un campo con un valor repetido.']}),e.jsxs("li",{children:[e.jsx("strong",{children:"SYMBOLIC CHARACTERS"}),": Definidos en la cláusula SPECIAL-NAMES, permiten asignar nombres a caracteres especiales."]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"SPECIAL-NAMES"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"SYMBOLIC CHARACTERS EURO IS X"}),e.jsx(d,{children:"'20AC'"}),"."]})]}),e.jsx("br",{}),e.jsx("p",{children:"Ejemplo de uso de constantes figurativas en COBOL:"}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 NOMBRE ",e.jsx(s,{children:"PIC"})," X(20). ",e.jsx("br",{}),"01 MONTO ",e.jsx(s,{children:"PIC"})," 9(5)V99. ",e.jsx("br",{}),"01 DELIMITADOR ",e.jsx(s,{children:"PIC"})," X. ",e.jsx("br",{}),"01 FIN-REGISTRO ",e.jsx(s,{children:"PIC"})," X(1). ",e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"BEGIN"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE SPACES TO"})," NOMBRE. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE ZEROS TO"})," MONTO. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE QUOTE TO"})," DELIMITADOR. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE HIGH-VALUES TO"})," FIN-REGISTRO. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:'"Nombre: "'})," NOMBRE. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:'"Monto: "'})," MONTO. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:'"Delimitador: "'})," DELIMITADOR. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:'"Fin Registro: "'})," FIN-REGISTRO. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"STOP RUN"}),"."]}),e.jsx("h4",{children:"Uso de CONSTANT"}),e.jsx("p",{children:"(COBOL 2002). Es una palabra reservada que se utiliza para definir constantes, es decir, valores que no cambian durante la ejecución del programa y que se utilizan para representar valores fijos y predefinidos. Las constantes proporcionan una forma de asignar un nombre significativo a un valor específico, lo que hace que el código sea más legible y mantenible."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 PI ",e.jsx(s,{children:"CONSTANT"})," 3.14159. ",e.jsx("br",{})]}),e.jsx("p",{children:"Las constantes se definen una sola vez y su valor no cambia durante la ejecución del programa. Una vez que se define una constante, se puede utilizar en cualquier lugar del programa donde se necesite su valor. Las constantes pueden ser de cualquier tipo de datos admitido en COBOL, incluyendo numéricos, alfanuméricos, alfanuméricos de tamaño variable, etc. Mejoran la legibilidad del código al proporcionar nombres descriptivos para valores fijos y predefinidos. Facilitan el mantenimiento del código al permitir cambios en los valores simplemente modificando la definición de la constante en lugar de buscar y cambiar cada instancia del valor en el código."}),e.jsx("br",{}),e.jsx("br",{}),e.jsx("h4",{children:"Uso de FILLER"}),e.jsx("p",{children:"Es una palabra reservada del COBOL, usada para describir campos que no son referenciados en PROCEDURE DIVISION. Si el DATANAME o FILLER como cláusula es omitida siguiendo a un LEVEL NUMBER, entonces el DATA ITEM va a ser tratado como un FILLER. En un MOVE CORRESPONDING, ADD CORRESPONDING, SUBSTRACT CORRESPONDING el FILLER es ignorado. También en el INITIALIZE el FILLER también es ignorado. Se usa para definir espacios en un registro que no necesitan un nombre específico ni serán referenciados en el programa. Se emplea principalmente para reservar espacio en la memoria o para estructurar mejor los datos en archivos o bases de datos."}),e.jsxs("ul",{children:[e.jsx("li",{children:"Relleno: Se usa para completar espacios en blanco entre campos de datos, asegurando que los campos subsiguientes se alineen correctamente. Esto es crucial en COBOL, donde el diseño de los registros es fijo y la posición de los datos es importante."}),e.jsx("li",{children:"Espacios reservados: FILLER permite reservar espacio para datos que podrían ser necesarios en el futuro, o para campos que son utilizados por otros programas o sistemas."}),e.jsx("li",{children:"Alineación: Ayuda a alinear los campos de datos en posiciones específicas dentro de un registro, lo cual es esencial para el procesamiento de datos en archivos de formato fijo."})]}),e.jsxs("div",{className:"twoColums",style:{gridTemplateColumns:"1fr 1fr"},children:[e.jsxs("div",{children:[e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 REGISTRO. ",e.jsx("br",{}),e.jsx(l,{})," 05 NOMBRE ",e.jsx(s,{children:"PIC"})," X(10). ",e.jsx("br",{}),e.jsx(l,{})," 05 ",e.jsx(s,{children:"FILLER PIC"})," X(5) ",e.jsx(s,{children:"VALUE"})," ",e.jsxs(d,{children:['"',e.jsx(l,{}),e.jsx(l,{}),' "']}),". (Espacios en blanco) ",e.jsx("br",{}),e.jsx(l,{})," 05 APELLIDO ",e.jsx(s,{children:"PIC"})," X(15)."]}),e.jsx("p",{children:"En estos ejemplos, hemos utilizado PICTURE para definir el formato de variables que almacenan fechas, números de seguridad social y precios de productos."})]}),e.jsxs("div",{className:"codigo",children:["01 REG-EMPLEADO. ",e.jsx("br",{}),e.jsx(l,{}),"02 COD-EMPLEADO ",e.jsx(s,{children:"PIC"})," 9(05). ",e.jsx("br",{}),e.jsx(l,{}),"02 NOMBRE-EMPLEADO ",e.jsx(s,{children:"PIC"})," X(40). ",e.jsx("br",{}),e.jsx(l,{}),"02 ",e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"PIC"})," XX. ",e.jsx("br",{}),e.jsx(l,{}),"02 DIRECC-EMPLEADO ",e.jsx(s,{children:"PIC"})," X(35). ",e.jsx("br",{}),e.jsx(l,{}),"02 FILLER ",e.jsx(s,{children:"PIC"})," X(18). ",e.jsx("br",{})]})]}),e.jsx("h5",{children:"SCREEN SECTION (opcional)"}),e.jsx("p",{children:"Se usa en entornos donde COBOL maneja interfaces de usuario (pantalla), por ejemplo en aplicaciones en terminal. Permite definir la presentación de datos al usuario."}),e.jsx("br",{}),e.jsxs("p",{children:["✅ ",e.jsx("u",{children:"Buenas prácticas"}),":"]}),e.jsx("li",{children:"Usar nombres descriptivos en todas las variables."}),e.jsx("li",{children:"Evitar declarar variables innecesarias en WORKING-STORAGE si sólo se usan de manera temporal (preferir LOCAL-STORAGE)."}),e.jsx("li",{children:"Dividir la declaración de datos en estructuras claras usando niveles (01, 05, 10…)."}),e.jsx("h4",{children:"Uso de REDEFINES"}),e.jsxs("p",{children:["La cláusula ",e.jsx("mark",{children:"REDEFINES"})," permite reutilizar el mismo espacio de memoria para representar los mismos datos de diferentes maneras. Es útil cuando se necesita interpretar un área de datos con distintos formatos según ciertas condiciones."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"REDEFINES"})," no puede ser usado junto a ",e.jsx("mark",{children:"OCCURS"}),"."]}),e.jsx("li",{children:"Solo una de las estructuras redefinidas debe ser utilizada a la vez para evitar inconsistencias."}),e.jsx("li",{children:"Muy útil para conversiones de datos, compatibilidad entre formatos antiguos y nuevos, o entrada/salida con distintos tipos de registros."}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 AREA-DATOS.  ",e.jsx("br",{}),e.jsx(l,{})," 05 FECHA-ALF   ",e.jsx(s,{children:"PIC"})," X(8).  ",e.jsx("br",{}),e.jsx(l,{})," 05 FECHA-NUM   ",e.jsx(s,{children:"REDEFINES"})," FECHA-ALF.  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"    10 ANIO     ",e.jsx(s,{children:"PIC"})," 9(4).  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"    10 MES      ",e.jsx(s,{children:"PIC"})," 9(2).  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),"    10 DIA      ",e.jsx(s,{children:"PIC"})," 9(2).  ",e.jsx("br",{})]}),e.jsxs("div",{children:[e.jsx("p",{children:"En este ejemplo:"}),e.jsx("li",{children:"FECHA-ALF y FECHA-NUM ocupan el mismo espacio de memoria."}),e.jsx("li",{children:'Se puede usar FECHA-ALF para trabajar con la fecha como una cadena ("20250419"), o usar FECHA-NUM para tratarla como campos separados de año, mes y día.'})]})]})]}),oj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"3.4",children:[e.jsx("h3",{children:"3.4 PROCEDURE DIVISION"}),e.jsx("p",{children:"Es donde se escriben las instrucciones lógicas y el flujo de control del programa. Aquí se implementan las operaciones que manipulan los datos definidos en la DATA DIVISION. Es el núcleo funcional del programa COBOL. Aquí se define qué hace el programa, paso por paso, utilizando sentencias estructuradas y llamadas a procedimientos o subprogramas."}),e.jsx("p",{children:"En esta división, se escribe el código principal del programa. Contiene las instrucciones que se ejecutarán para realizar la lógica de negocio. Es una de las divisiones principales en un programa COBOL y desempeña un papel central en la ejecución del programa. En esta división, se escribe el código que define la lógica y la funcionalidad del programa. Es el corazón de un programa COBOL, donde se define y se implementa la lógica de negocio. La capacidad de tomar decisiones, realizar cálculos y gestionar datos es fundamental en esta división. A través de un código claro y bien estructurado en la PROCEDURE DIVISION, se logra la funcionalidad deseada de la aplicación COBOL, lo que es especialmente importante en el contexto de las aplicaciones empresariales."}),e.jsx("p",{children:"La PROCEDURE DIVISION es donde se define la lógica de negocio del programa COBOL. Aquí se escriben las instrucciones y las operaciones que realizan cálculos, procesamiento de datos, toma de decisiones y otras operaciones necesarias para cumplir con los requisitos de la aplicación. Las sentencias COBOL en esta división controlan el flujo del programa y determinan cómo se procesan los datos."}),e.jsx("br",{}),e.jsx("h5",{children:"Declaración de parámetros (opcional)"}),e.jsx("p",{children:"Si el programa es un subprograma, puede recibir parámetros mediante la cláusula USING:"}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PROCEDURE DIVISION USING"})," DATOS-CLIENTE."]}),e.jsx("br",{}),e.jsx("h4",{children:"Párrafos"}),e.jsx("p",{children:"Los párrafos son bloques de instrucciones que se ejecutan en conjunto. Se identifican con un nombre seguido de un punto (.)."}),e.jsxs("div",{className:"codigo",children:["INICIO. ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"PERFORM"})," VALIDAR-DATOS. ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"PERFORM"})," PROCESAR. ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"GOBACK"}),". ",e.jsx("br",{})]}),e.jsx("br",{}),e.jsx("h5",{children:"Sentencias o instrucciones"}),e.jsx("p",{children:"Dentro de los párrafos se colocan las instrucciones COBOL como:"}),e.jsx("mark",{children:"MOVE"}),", ",e.jsx("mark",{children:"ADD"}),", ",e.jsx("mark",{children:"SUBTRACT"}),","," ",e.jsx("mark",{children:"COMPUTE"}),", ",e.jsx("mark",{children:"IF"}),", ",e.jsx("mark",{children:"PERFORM"}),","," ",e.jsx("mark",{children:"EVALUATE"}),", ",e.jsx("mark",{children:"CALL"}),", ",e.jsx("mark",{children:"OPEN"}),","," ",e.jsx("mark",{children:"READ"}),", ",e.jsx("mark",{children:"WRITE"}),", ",e.jsx("mark",{children:"CLOSE"}),", etc.",e.jsx("br",{}),e.jsx("br",{}),e.jsx("h5",{children:"INITIALIZE"}),"Inicializa, con valores predeterminados, a campos deﬁnidos, equiparándose a uno o varios MOVE.",e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"INITIALIZE"})," identiﬁcador-1 ",e.jsx(s,{children:"REPLACING ALPHABETIC"})," ",e.jsx("br",{}),e.jsx(s,{children:"DATA BY"})," identiﬁcador-2 ",e.jsx(s,{children:"ALPHANUMERIC"})," literal-1"," ",e.jsx(s,{children:"NUMERIC"})," ",e.jsx("br",{}),"01 WS-EMPLEADO. ",e.jsx("br",{}),e.jsx(l,{}),"02 WS-CODIGO ",e.jsx(s,{children:"PIC"})," 9(5). ",e.jsx("br",{}),e.jsx(l,{}),"02 WS-NOMBRE ",e.jsx(s,{children:"PIC"})," X(40). ",e.jsx("br",{}),e.jsx(l,{}),"02 WS-DPTO ",e.jsx(s,{children:"PIC"})," 9(3). ",e.jsx("br",{}),e.jsx(l,{}),"02 WS-TELEFONO ",e.jsx(s,{children:"PIC"})," 9(5). ",e.jsx("br",{}),e.jsx(l,{}),"02 WS-PROYECTO ",e.jsx(s,{children:"PIC"})," XX. ",e.jsx("br",{}),e.jsx(I,{children:"............. "}),e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"INITIALIZE"})," WS-EMPLEADO ",e.jsx("br",{})]}),e.jsx("div",{children:e.jsxs("p",{children:["Mueve ceros a WS-CODIGO/ WS-DPTO/ WS-TELEFONO y blancos a WS-NOMBRE/WS-PROYECTO. ",e.jsx("br",{}),"INITIALIZE WS-EMPLEADO REPLACING ALPHANUMERIC DATA BY '*'. Se mueve '*' a datos alfanuméricos"]})})]}),e.jsx("h4",{children:"Uso de MOVE"}),e.jsx("p",{children:"Descripción: Copia el contenido de una variable o un valor literal a otra variable. No se puede realizar MOVE sobre POINTER-DATA o INDEX-DATA."}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"MOVE"})," 'JUAN'",e.jsx(s,{children:" TO "}),"NOMBRE-CLIENTE. ",e.jsx("br",{}),e.jsx(s,{children:"MOVE"})," 35",e.jsx(s,{children:" TO "}),"EDAD. ",e.jsx("br",{})]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"MOVE"})," fuente ",e.jsx(s,{children:"TO"})," destino-1 destino-2 destino-3."]})]}),e.jsx("br",{}),"Ejemplos con MOVE:",e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 GRUPO-ITEM. ",e.jsx("br",{}),e.jsx(l,{}),"02 ITEM1 ",e.jsx(s,{children:"PIC"})," ",e.jsx("span",{style:{color:"yellow"},children:"X"}),"."," ",e.jsx("br",{}),e.jsx(l,{}),"02 ITEM2 ",e.jsx(s,{children:"PIC"})," ",e.jsx("span",{style:{color:"lightblue"},children:"XX"}),"."," ",e.jsx("br",{}),e.jsx(l,{}),"02 ITEM3 ",e.jsx(s,{children:"PIC"})," ",e.jsx("span",{style:{color:"pink"},children:"X(3)"}),"."," ",e.jsx("br",{}),e.jsx(l,{}),"02 ITEM4 ",e.jsx(s,{children:"PIC"})," ",e.jsx("span",{style:{color:"aqua"},children:"X(4)"}),"."," ",e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE SPACES TO"})," GRUPO-ITEM. ",e.jsx(l,{}),e.jsx("span",{style:{color:"yellow"},children:"b"}),e.jsx("span",{style:{color:"lightblue"},children:"bb"}),e.jsx("span",{style:{color:"pink"},children:"bbb"}),e.jsx("span",{style:{color:"aqua"},children:"bbbb"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," 'XY' ",e.jsx(s,{children:"TO"})," ITEM1 ITEM3 ",e.jsx(l,{}),e.jsx("span",{style:{color:"yellow"},children:"x"}),e.jsx("span",{style:{color:"lightblue"},children:"bb"}),e.jsx("span",{style:{color:"pink"},children:"XYb"}),e.jsx("span",{style:{color:"aqua"},children:"bbbb"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE ALL"})," '*'' ",e.jsx(s,{children:"TO"})," ITEM4 ",e.jsx(l,{}),e.jsx("span",{style:{color:"yellow"},children:"x"}),e.jsx("span",{style:{color:"lightblue"},children:"bb"}),e.jsx("span",{style:{color:"pink"},children:"XYb"}),e.jsx("span",{style:{color:"aqua"},children:"****"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE ALL"})," 'AB' ",e.jsx(s,{children:"TO"})," ITEM3 ",e.jsx(l,{}),e.jsx("span",{style:{color:"yellow"},children:"x"}),e.jsx("span",{style:{color:"lightblue"},children:"bb"}),e.jsx("span",{style:{color:"pink"},children:"ABA"}),e.jsx("span",{style:{color:"aqua"},children:"****"})," ",e.jsx("br",{})]}),e.jsx("br",{}),e.jsx("h4",{children:"Cláusula CORRESPONDING (CORR)"}),e.jsx("p",{children:"La cláusula CORRESPONDING (también abreviada como CORR) permite realizar operaciones entre estructuras de datos grupo a grupo, copiando o sumando automáticamente solo los campos que tienen el mismo nombre dentro de ambos grupos. Solo afecta los campos con el mismo nombre exacto. Los campos deben estar dentro de estructuras de grupo. Ignora campos que no tengan una coincidencia exacta por nombre."}),e.jsx("p",{children:"Usá CORRESPONDING cuando quieras simplificar código con estructuras similares. Evitá su uso si los nombres de campo no están estandarizados o si necesitás control total sobre los campos a mover/sumar."}),e.jsx("p",{children:"Instrucciones que la usan: "}),e.jsxs("ul",{children:[e.jsx("li",{children:"MOVE CORRESPONDING"}),e.jsx("li",{children:"ADD CORRESPONDING"}),e.jsx("li",{children:"SUBTRACT CORRESPONDING"})]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 CLIENTE-ENTRADA. ",e.jsx("br",{}),e.jsx(l,{}),"05 NOMBRE ",e.jsx(s,{children:"PIC"})," X(20). ",e.jsx("br",{}),e.jsx(l,{}),"05 EDAD ",e.jsx(s,{children:"PIC"})," 99. ",e.jsx("br",{}),e.jsx(l,{}),"05 TELEFONO ",e.jsx(s,{children:"PIC"})," X(10). ",e.jsx("br",{}),e.jsx("br",{}),"01 CLIENTE-SALIDA. ",e.jsx("br",{}),e.jsx(l,{}),"05 NOMBRE ",e.jsx(s,{children:"PIC"})," X(20). ",e.jsx("br",{}),e.jsx(l,{}),"05 EDAD ",e.jsx(s,{children:"PIC"})," 99. ",e.jsx("br",{}),e.jsx(l,{}),"05 TELEFONO ",e.jsx(s,{children:"PIC"})," X(10). ",e.jsx("br",{}),e.jsx(l,{}),"05 DIRECCION ",e.jsx(s,{children:"PIC"})," X(50). ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE CORRESPONDING"})," CLIENTE-ENTRADA ",e.jsx(s,{children:"TO"})," ","CLIENTE-SALIDA. ",e.jsx("br",{})]}),e.jsx("div",{children:e.jsx("p",{children:"En este caso, se copian automáticamente los valores de NOMBRE, EDAD y TELEFONO. El campo DIRECCION permanece sin cambios."})})]}),"MOVE CORRESPONDING:",e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["MOVE CORRESPONDING ",e.jsx("br",{}),"01 ESTRUC-1. ",e.jsx("br",{}),e.jsx(l,{}),"02 CAMPO-A ",e.jsx(s,{children:"PIC"})," 9(9) ",e.jsx(s,{children:"VALUE"})," 123456789. ",e.jsx("br",{}),e.jsx(l,{}),"02 CAMPO-B ",e.jsx(s,{children:"PIC"})," X(5) ",e.jsx(s,{children:"VALUE"})," ",e.jsx(d,{children:"'abcdf'"}),"."," ",e.jsx("br",{}),e.jsx(l,{}),"02 CAMPO-C ",e.jsx(s,{children:"PIC"})," 9(4)V99 ",e.jsx(s,{children:"VALUE"})," 1234.56. ",e.jsx("br",{}),e.jsx(l,{}),"02 CAMPO-D ",e.jsx(s,{children:"PIC"})," 9(4)V99 ",e.jsx(s,{children:"VALUE"})," 123456789. ",e.jsx("br",{}),e.jsx(l,{}),"02 FILLER ",e.jsx(s,{children:"PIC"})," X(20). ",e.jsx("br",{}),"01 ESTRUC-2. ",e.jsx("br",{}),e.jsx(l,{}),"02 CAMPO-C ",e.jsx(s,{children:"PIC"})," Z(4).99. ",e.jsx("br",{}),e.jsx(l,{}),"02 FILLER ",e.jsx(s,{children:"PIC"})," XXX. ",e.jsx("br",{}),e.jsx(l,{}),"02 CAMPO-B ",e.jsx(s,{children:"PIC"})," X(5). ",e.jsx("br",{}),e.jsx(l,{}),"02 FILLER ",e.jsx(s,{children:"PIC"})," XXX. ",e.jsx("br",{}),e.jsx(l,{}),"02 CAMPO-A ",e.jsx(s,{children:"PIC"})," Z(9). ",e.jsx("br",{}),e.jsx(l,{}),"02 FILLER ",e.jsx(s,{children:"PIC"})," XXX. ",e.jsx("br",{}),e.jsx(I,{children:"....................... "})," ",e.jsx("br",{}),e.jsx(s,{children:"MOVE CORRESPONDING"})," ESTRUC-1 ",e.jsx(s,{children:"TO"})," ESTRUC-2. ",e.jsx("br",{})]}),e.jsx("div",{children:e.jsx("p",{children:"La sentencia mueve 3 campos pero da un WARNING en la compilación."})})]}),e.jsx("p",{children:"MOVE NUMÉRICOS EDICIÓN"}),e.jsx("p",{children:"No está permitido realizar cálculos matemáticos con numéricos de edición."}),e.jsxs("div",{className:"codigo",children:["01 SUELDO ",e.jsx(s,{children:"PIC"})," 9999,99. ",e.jsx("br",{}),"77 SUELDO-EDIT ",e.jsx(s,{children:"PIC"})," 9999V99 ",e.jsx(s,{children:"COMP-3"}),". ",e.jsx("br",{}),"77 TOTAL-EDIT ",e.jsx(s,{children:"PIC"})," ZZ.ZZ9,99. ",e.jsx("br",{}),e.jsx(I,{children:"................... "}),e.jsx("br",{}),e.jsx(s,{children:"MOVE"})," 1234.56",e.jsx(s,{children:" TO "}),"SUELDO-EDIT. ",e.jsx("br",{}),e.jsx(s,{children:"MOVE"})," 9876.54",e.jsx(s,{children:" TO "}),"SUELDO. ",e.jsx("br",{}),e.jsx(s,{children:"DISPLAY"})," SUELDO-EDIT. ",e.jsx("br",{}),e.jsx(s,{children:"MOVE"})," SUELDO",e.jsx(s,{children:" TO "}),"SUELDO-EDIT. ",e.jsx("br",{}),e.jsx(s,{children:"DISPLAY"})," SUELDO-EDIT. ",e.jsx("br",{}),e.jsx(s,{children:"MOVE"})," SUELDO",e.jsx(s,{children:" TO "}),"TOTAL-EDIT. ",e.jsx("br",{}),e.jsx(s,{children:"DISPLAY"})," TOTAL-EDIT. ",e.jsx("br",{}),e.jsx(I,{children:".............. SALIDA .............. "}),e.jsx("br",{}),"123456 ",e.jsx("br",{}),"9876,54 ",e.jsx("br",{}),"9.876,54 ",e.jsx("br",{})]}),e.jsx("h4",{children:"Uso de DISPLAY"}),e.jsx("p",{children:"Es una instrucción utilizada para mostrar información en la salida del programa. Es una de las formas más comunes de generar resultados visibles para el usuario o para propósitos de depuración. La instrucción DISPLAY envía información a la pantalla del usuario o al dispositivo de salida designado. Es una herramienta útil para la interacción con el usuario o para proporcionar información sobre el estado del programa durante la ejecución. Aunque DISPLAY es útil para propósitos de depuración, debes tener en cuenta que mostrar demasiada información durante la ejecución del programa puede afectar el rendimiento. Es importante utilizar DISPLAY de manera moderada y estratégica para minimizar el impacto en el rendimiento del programa. Esta sentencia transﬁere el contenido de cada DATA-ITEM a una salida SYSOUT / CEEMSG"}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DISPLAY"})," 'INGRESE SU NOMBRE:'. ",e.jsx("br",{}),e.jsx(s,{children:"DISPLAY"})," NOMBRE-CLIENTE. ",e.jsx("br",{})]}),e.jsx("br",{}),e.jsx("h5",{children:"WITH NO ADVANCING"}),e.jsxs("p",{children:["Evita el salto de línea luego del mensaje (similar a print() en Python sin \\n). ",e.jsx("br",{}),"El cursor queda en la misma línea para que el usuario escriba a continuación del mensaje. La cláusula WITH NOT ADVANCING es útil cuando se desea escribir múltiples registros consecutivos en la misma línea en un archivo de salida, como en informes de líneas detalladas o formatos de registro específicos. Al utilizar WITH NOT ADVANCING, se pueden agrupar registros relacionados en una sola línea para mejorar la legibilidad y la presentación de la información en el archivo de salida."]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Ingrese su nombre: '"})," ",e.jsx(s,{children:"WITH NO ADVANCING"}),". ",e.jsx("br",{}),e.jsx(s,{children:"ACCEPT"})," NOMBRE-USUARIO."]}),e.jsx("br",{}),e.jsx("h5",{children:"UPON"}),e.jsx("p",{children:"Destino Opcional. Especifica el destino, como CONSOLE, PRINTER, SYSPUNCH."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DISPLAY"})," 'Registro enviado.' ",e.jsx(s,{children:"UPON CONSOLE"}),"."]}),e.jsx("br",{}),e.jsx("h4",{children:"Uso de ACCEPT"}),e.jsx("p",{children:"Descripción: Permite ingresar datos desde el teclado (modo interactivo) o desde el sistema (por ejemplo, la fecha u hora del sistema). Permite el ingreso de datos desde SYSIN, el dato deberá estar deﬁnido en WORKING-STORAGE. Permite obtener fecha y hora del sistema operativo. Es una instrucción utilizada para leer datos desde la entrada estándar (generalmente el teclado) y almacenarlos en una variable. Esta instrucción permite la interacción del usuario con el programa, ya que le permite proporcionar datos durante la ejecución del programa. Es importante validar los datos introducidos por el usuario para asegurarse de que sean correctos antes de utilizarlos en el programa. Se pueden utilizar condiciones y estructuras de control para manejar diferentes situaciones de entrada de datos por parte del usuario."}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 NOMBRE-USUARIO ",e.jsx(s,{children:"PIC"})," X(20). ",e.jsx("br",{}),e.jsx(s,{children:"ACCEPT"})," NOMBRE-USUARIO."]}),e.jsx("p",{children:"Entrada del usuario. El programa esperará que el usuario escriba un nombre, y lo almacenará en NOMBRE-USUARIO."})]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 FECHA-HOY ",e.jsx(s,{children:"PIC"})," 9(8). ",e.jsx(I,{children:" AAAAMMDD"})," ",e.jsx("br",{}),e.jsx(s,{children:"ACCEPT"})," FECHA-HOY ",e.jsx(s,{children:"FROM DATE"}),"."]}),e.jsxs("p",{children:["Fecha del sistema. El campo FECHA-HOY recibe la fecha actual, por ejemplo: ",e.jsx("mark",{children:"20250410"}),"."]})]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 HORA-ACTUAL ",e.jsx(s,{children:"PIC"})," 9(6). ",e.jsx(I,{children:" HHMMSS"})," ",e.jsx("br",{}),e.jsx(s,{children:"ACCEPT"})," HORA-ACTUAL ",e.jsx(s,{children:"FROM TIME"}),"."]}),e.jsxs("p",{children:["Hora actual. Se guarda la hora actual del sistema, como"," ",e.jsx("mark",{children:"154233"}),"."]})]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 DIA-ACTUAL ",e.jsx(s,{children:"PIC"})," 9(5). ",e.jsx("br",{}),e.jsx(s,{children:"ACCEPT"})," DIA-ACTUAL ",e.jsx(s,{children:"FROM DAY"}),"."]}),e.jsx("p",{children:"Día del sistema. Se almacena la fecha en formato juliano (AAMMDD)."})]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 DIA-SEMANA ",e.jsx(s,{children:"PIC"})," 9. ",e.jsx("br",{}),e.jsx(s,{children:"ACCEPT"})," DIA-SEMANA ",e.jsx(s,{children:"FROM DAY-OF-WEEK"}),"."]}),e.jsx("p",{children:"Día de la semana. Guarda un número del 1 al 7, donde 1 = Lunes, 7 = Domingo."})]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:'"Por favor, introduzca su nombre: "'}),"."," ",e.jsx("br",{}),e.jsx(s,{children:"ACCEPT"})," nombre-alumno. ",e.jsx("br",{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:'"¡Hola, "'})," nombre-alumno"," ",e.jsx(d,{children:'"!"'})," ",e.jsx("br",{})]}),e.jsxs("div",{className:"codigo",children:["77 FECHA-EJECUCION ",e.jsx(s,{children:"PIC"})," X(10). ",e.jsx("br",{}),e.jsx(I,{children:"........"})," ",e.jsx("br",{}),"//SYSIN DD * ",e.jsx("br",{}),"19/10/2019 ",e.jsx("br",{}),e.jsx(I,{children:"........"})," ",e.jsx("br",{}),e.jsx(s,{children:"ACCEPT"})," FECHA-EJECUCION ",e.jsx(s,{children:"FROM"})," SYSIN. ",e.jsx("br",{}),e.jsx(s,{children:"DISPLAY"})," FECHA-EJECUCION. ",e.jsx("br",{}),e.jsx(I,{children:"........"})," SALIDA ",e.jsx("br",{}),"19/10/2019 ",e.jsx("br",{})]})]}),e.jsxs("p",{children:["⚠️ ",e.jsx("u",{children:"Consideraciones importantes"}),":"]}),e.jsxs("li",{children:["Cuando se usa sin ",e.jsx("mark",{children:"FROM"}),", el origen es el teclado."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"ACCEPT"})," es una sentencia de bajo nivel de validación. No permite formatos complejos ni comprobación de tipos (esa lógica debe codificarse aparte)."]}),e.jsx("li",{children:"Las entradas siempre se capturan como texto (alfanuméricos). Si se quieren valores numéricos, hay que definir el campo como numérico y asegurarse de que la entrada sea válida."}),e.jsx("br",{}),e.jsx("h4",{children:"Uso de PERFORM"}),e.jsxs("p",{children:["La sentencia ",e.jsx("mark",{children:"PERFORM"})," es utilizada para transferir explícitamente el control a uno o más procedimientos y devolver el control implícitamente, cuando la ejecución del procedimiento especiﬁcado, ﬁnalice. La sentencia PERFORM se puede utilizar para controlar la ejecución de una o más sentencias, las cuales están dentro del ámbito de la sentencia ",e.jsx("mark",{children:"PERFORM"}),". Se utiliza para repetir un bloque de código mientras se cumple una condición. Se utiliza para ejecutar uno o más párrafos o secciones dentro del programa, o bien para repetir bloques de código según una condición. Es una de las instrucciones más importantes para controlar el flujo del programa y evitar la duplicación de código. ",e.jsx("br",{}),e.jsx("mark",{children:"END-PERFORM"}),". Cuando se emplea este formato, la sentencia PERFORM ejecuta el número de veces especiﬁcado por entero o por nombre de datos, el conjunto de sentencias que hay entre ",e.jsx("mark",{children:"PERFORM"})," y"," ",e.jsx("mark",{children:"END-PERFORM"}),". Un punto, como ﬁnal de alguna de las sentencias de esta estructura, daría lugar a un error, ya que se entendería como ﬁnal de la sentencia PERFORM."]}),e.jsx("h5",{children:"ANIDAMIENTO DE SENTENCIAS PERFORM."}),e.jsx("p",{children:"Dentro del ámbito de una sentencia PERFORM, puede especiﬁcarse otra sentencia PERFORM, aunque hay que tener presentes las siguientes reglas:"}),e.jsxs("ol",{children:[e.jsx("li",{children:"El procedimiento PERFORM ejecutado desde el ámbito de otro PERFORM debe ser totalmente exterior o totalmente interior a este."}),e.jsx("li",{children:"Los ámbitos de dos PERFORM se pueden solapar cuando las sentencias de llamada para su ejecución están fuera de estos ámbitos."}),e.jsx("li",{children:"Las sentencias PERFORM pueden ser anidadas libremente."}),e.jsx("li",{children:"Un procedimiento PERFORM puede llamarse a sí mismo, esto es, la recursividad está permitida."})]}),e.jsx("h5",{children:"Simple (nombre de párrafo):"}),e.jsx("p",{children:"Llama y ejecuta un párrafo una vez."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PERFORM"})," CALCULAR-SUELDO."]}),e.jsx("br",{}),e.jsx("h5",{children:"Con intervalo (range)"}),e.jsx("p",{children:"Ejecuta una serie de párrafos de forma secuencial, desde uno inicial hasta uno final."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PERFORM"})," INICIAR ",e.jsx(s,{children:"THRU"})," FINALIZAR."]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PERFORM"})," INICIAR ",e.jsx(s,{children:"THROUGH"})," FINALIZAR."]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PERFORM"})," procedimiento-1 [THRU procedimiento-2]"," "]}),e.jsx("p",{children:"Si no se especiﬁca la sentencia THRU, la sentencia PERFORM ejecuta una vez, el conjunto de sentencias que forman el procedimiento-1. Si la opción THRU se especiﬁca, entonces se ejecutan, una vez todos los procedimientos existentes en el programa entre procedimiento-1 y procedimiento-2, ambos inclusive."})]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PERFORM"})," procedimiento-1 [THRU procedimiento-2]"," ",e.jsx(s,{children:"UNTIL"})," ....."," "]}),e.jsx("p",{children:"Si no se especiﬁca la opción THRU, la sentencia PERFORM ejecuta el número de veces especiﬁcado por entero o por un nombre de datos, el conjunto de sentencias que forman procedimiento-1. Si la opción THRU se especiﬁca, entonces se ejecutan el número de veces especiﬁcado, todos los procedimientos existentes en el programa entre procedimiento-1 y procedimiento-2, ambos inclusive."})]}),e.jsxs("li",{children:[e.jsx("mark",{children:"THRU"})," solo admite dos ",e.jsx("mark",{children:"PERFORM"}),"."]}),e.jsx("p",{children:"⚠️ Importante: Todos los párrafos entre INICIAR y FINALIZAR (inclusive) se ejecutarán en orden."}),e.jsx("br",{}),e.jsx("h5",{children:"Con condición (ciclo UNTIL)"}),e.jsx("p",{children:"Repite un bloque de instrucciones o un párrafo hasta que se cumpla una condición."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PERFORM"})," LEER-REGISTRO ",e.jsx(s,{children:"UNTIL"})," FIN-DE-ARCHIVO ="," ",e.jsx(d,{children:"'S'"}),"."]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 Contador ",e.jsx(s,{children:"PIC"})," 9 ",e.jsx(s,{children:"VALUE"})," 1. ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(s,{children:"PERFORM UNTIL "})," Contador ",">"," 5 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Iteración '"})," Contador ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"ADD"})," 1 ",e.jsx(s,{children:"TO"})," Contador ",e.jsx("br",{}),"END-PERFORM."]}),e.jsx("p",{children:"En este ejemplo, se muestra un mensaje en cada iteración hasta que el contador sea mayor que 5."})]}),e.jsx("br",{}),e.jsx("h5",{children:"Con número fijo de repeticiones (TIMES)"}),e.jsx("p",{children:"Ejecuta un bloque o párrafo una cantidad específica de veces."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PERFORM"})," IMPRIMIR-FACTURA 5 ",e.jsx(s,{children:"TIMES"}),"."]}),e.jsx("h5",{children:"Bloque dentro de otro párrafo (N-LINE):"}),e.jsxs("p",{children:["Este tipo de PERFORM se realiza sin invocar ningún párrafo, se realiza todo dentro de la sentencia ",e.jsx("mark",{children:"PERFORM"})," hasta el"," ",e.jsx("mark",{children:"END-PERFORM"}),". Permite escribir directamente el bloque de instrucciones dentro del ",e.jsx("mark",{children:"PERFORM"}),", sin necesidad de crear un párrafo externo."]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"DISPLAY"})," 'Inicio del programa'. ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"PERFORM"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{})," ",e.jsx(s,{children:"DISPLAY"})," 'Este es un PERFORM in-line'. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{})," ",e.jsx(s,{children:"ADD"})," 1 ",e.jsx(s,{children:"TO"})," CONTADOR ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"END-PERFORM"}),". ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"DISPLAY"}),' "Fin del programa". ',e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"STOP RUN"}),". ",e.jsx("br",{})]}),e.jsx("h5",{children:"VARYING (bucle con contador)"}),e.jsx("p",{children:"Permite repetir un bloque de instrucciones o párrafo, modificando el valor de una variable (contador), hasta cumplir una condición. Es muy útil para recorrer tablas o realizar bucles controlados."}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PERFORM"})," MOSTRAR-DATO ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"VARYING"})," INDICE ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"FROM"})," 1 ",e.jsx(s,{children:"BY"})," 1 ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"UNTIL"})," INDICE ",">"," 10. ",e.jsx("br",{})]}),e.jsx("div",{children:"Este ejemplo ejecuta el párrafo MOSTRAR-DATO 10 veces, incrementando el valor de INDICE desde 1 hasta 10."})]}),e.jsxs("div",{className:"codigo",children:[e.jsx(I,{children:"PERFORM VARYING con código in-line"})," ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"PERFORM VARYING"})," I ",e.jsx(s,{children:"FROM"})," 1 ",e.jsx(s,{children:"BY"})," 1"," ",e.jsx(s,{children:"UNTIL"})," I ",">"," 5 ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'NÚMERO: '"})," I ",e.jsx("br",{}),e.jsx(s,{children:"END-PERFORM"}),". ",e.jsx("br",{})]}),e.jsxs("p",{children:[e.jsx("u",{children:"Notas importantes"}),":"]}),e.jsxs("li",{children:["Se puede anidar ",e.jsx("mark",{children:"PERFORM VARYING"})," para recorrer matrices (ejemplo: ",e.jsx("mark",{children:"I"})," y ",e.jsx("mark",{children:"J"}),")."]}),e.jsxs("li",{children:["También permite controlar más de una variable con ",e.jsx("mark",{children:"AFTER"}),"."]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:[e.jsx(I,{children:"Ejemplo con dos contadores:"})," ",e.jsx("br",{}),e.jsx(s,{children:"PERFORM VARYING"})," I ",e.jsx(s,{children:"FROM"})," 1 ",e.jsx(s,{children:"BY"})," 1"," ",e.jsx(s,{children:"UNTIL"})," I ",">"," 3 ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"AFTER"})," J ",e.jsx(s,{children:"FROM"})," 1 ",e.jsx(s,{children:"BY"})," 1"," ",e.jsx(s,{children:"UNTIL"})," J ",">"," 2 ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'I='"})," I ",e.jsx(d,{children:"' J='"})," J"," ",e.jsx("br",{}),e.jsx(s,{children:"END-PERFORM"}),". ",e.jsx("br",{})]}),e.jsx("div",{children:e.jsxs("p",{children:["Esto ejecuta el cuerpo 6 veces: combina cada valor de ",e.jsx("mark",{children:"I"})," ","(1, 2, 3) con ",e.jsx("mark",{children:"J"})," (1, 2)."]})})]}),e.jsx("br",{}),e.jsxs("h5",{children:["VARYING ... AFTER ... (Con opción de ",e.jsx("mark",{children:"WITH TEST BEFORE"})," o"," ",e.jsx("mark",{children:"WITH TEST AFTER"}),")"]}),e.jsx("p",{children:"Esta forma de PERFORM permite ejecutar un bloque de código o un párrafo de forma iterativa, variando múltiples variables de control y controlando cuándo se evalúa la condición."}),e.jsx("p",{children:"Explicación de los elementos:"}),e.jsxs("li",{children:[e.jsx("mark",{children:"VARYING"}),": define la primera variable que va a cambiar en cada iteración."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"AFTER"}),": define una o más variables adicionales que también cambiarán, pero después de cada iteración completa."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"FROM"}),": valor inicial del índice."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"BY"}),": valor por el cual se incrementa (o decrementa)."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"WITH TEST BEFORE"}),": evalúa la condición antes de ejecutar el párrafo."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"WITH TEST AFTER"}),": ejecuta primero el párrafo, luego evalúa la condici"]}),e.jsx("br",{}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:[e.jsxs(I,{children:["Ejemplo con WITH TEST BEFORE ",e.jsx("br",{})," (múltiples contadores):"]})," ",e.jsx("br",{}),e.jsx(s,{children:"PERFORM"})," PROCESAR-DATO ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"VARYING"})," I ",e.jsx(s,{children:"FROM"})," 1 ",e.jsx(s,{children:"BY"})," 1 ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"AFTER"})," J ",e.jsx(s,{children:"FROM"})," 10 ",e.jsx(s,{children:"BY"})," -1 ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"UNTIL"})," I ",">"," 5 ",e.jsx(s,{children:"OR"})," J ","<"," 1 ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"WITH TEST BEFORE"}),". ",e.jsx("br",{})]}),e.jsxs("div",{children:[e.jsx("p",{children:"📌 Interpretación:"}),e.jsxs("li",{children:["Empieza con ",e.jsx("mark",{children:"I = 1"})," y ",e.jsx("mark",{children:"J = 10"}),"."]}),e.jsxs("li",{children:["Se ejecuta ",e.jsx("mark",{children:"PROCESAR-DATO"})," si ",e.jsxs("mark",{children:["I ","<="," 5"]})," y"," ",e.jsxs("mark",{children:["J ",">="," 1"]}),"."]}),e.jsxs("li",{children:["En cada ciclo: ",e.jsx("mark",{children:"I"})," se incrementa en 1, ",e.jsx("mark",{children:"J"})," se reduce en 1."]})]})]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:[e.jsx(I,{children:"Ejemplo con WITH TEST AFTER:"})," ",e.jsx("br",{}),e.jsx(s,{children:"PERFORM"})," MOSTRAR ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"VARYING"})," K ",e.jsx(s,{children:"FROM"})," 1 ",e.jsx(s,{children:"BY"})," 1 ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"UNTIL"})," K ",">"," 3 ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"WITH TEST AFTER"}),". ",e.jsx("br",{})]}),e.jsxs("div",{children:[e.jsx("p",{children:"📌 Interpretación:"}),e.jsxs("li",{children:["Siempre ejecuta ",e.jsx("mark",{children:"MOSTRAR"})," al menos una vez."]}),e.jsxs("li",{children:["Luego evalúa si ",e.jsxs("mark",{children:["K ",">"," 3"]}),"."]})]})]}),e.jsxs("p",{children:[e.jsx("u",{children:"Cuándo usar TEST BEFORE o AFTER"}),":"]}),e.jsxs("li",{children:[e.jsx("mark",{children:"WITH TEST BEFORE"})," Querés que se evalúe la condición antes de la primera ejecución."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"WITH TEST AFTER"})," Necesitás que el bloque se ejecute al menos una vez."]}),e.jsx("br",{}),e.jsxs("p",{children:["🧠 ",e.jsx("u",{children:"Nota importante"}),":"]}),e.jsxs("li",{children:["Podés usar ",e.jsx("mark",{children:"AFTER"})," para múltiples variables, anidadas como si fueran bucles anidados."]}),e.jsxs("li",{children:["Si omitís",e.jsx("mark",{children:" WITH TEST BEFORE/AFTER"}),", el valor por defecto es"," ",e.jsx("mark",{children:"WITH TEST BEFORE"}),"."]}),e.jsx("br",{}),e.jsx("br",{}),e.jsx("br",{}),e.jsx("h5",{children:"Sentencia EXIT."}),e.jsxs("p",{children:["Esta sentencia se utiliza como complemento de la sentencia PERFORM, para proporcionar un punto ﬁnal para uno o más procedimientos, a ﬁn de permitir la salida desde cualquier punto. La sentencia ",e.jsx("mark",{children:"EXIT"})," ","forma por sí sola un párrafo identiﬁcado por un nombre."]}),e.jsx("br",{}),e.jsx("br",{}),e.jsx("br",{}),e.jsxs("p",{children:["✅",e.jsxs("u",{children:["Buenas prácticas con ",e.jsx("mark",{children:"PERFORM"})]}),":"]}),e.jsx("li",{children:"Nombrar claramente los párrafos llamados para facilitar la lectura."}),e.jsxs("li",{children:["Evitar rangos amplios con ",e.jsx("mark",{children:"THRU"})," que puedan ejecutar párrafos innecesarios."]}),e.jsxs("li",{children:["Usar ",e.jsx("mark",{children:"PERFORM ... UNTIL"})," con condiciones claramente definidas."]}),e.jsxs("li",{children:["Usar ",e.jsx("mark",{children:"PERFORM in-line"})," para tareas pequeñas que no se reutilizan."]}),e.jsx("br",{}),e.jsxs("p",{children:["🧠 ",e.jsx("u",{children:"Nota técnica"}),":"]}),e.jsxs("li",{children:[e.jsx("mark",{children:"PERFORM"})," no transfiere el control permanentemente, como lo hace ",e.jsx("mark",{children:"GO TO"}),". Cuando el párrafo o sección termina, el control vuelve a la instrucción siguiente al ",e.jsx("mark",{children:"PERFORM"}),"."]}),e.jsxs("li",{children:["El uso de ",e.jsx("mark",{children:"PERFORM"})," favorece la modularización y el mantenimiento del código COBOL."]})," ",e.jsx("br",{}),e.jsx("h4",{children:"IF-ELSE"}),e.jsx("p",{children:"La sentencia IF en COBOL se utiliza para tomar decisiones basadas en condiciones. Puede ir acompañada de ELSE para manejar situaciones alternativas. El ámbito de la sentencia IF ﬁnaliza de cualquiera de las formas siguientes:"}),e.jsx("li",{children:"Por un punto."}),e.jsx("li",{children:"Por la cláusula END-IF."}),e.jsxs("p",{children:["Cuando la acción-1 o la acción-2 están formadas por varias sentencias, solamente la última ﬁnaliza con un punto, ya que este indica el ﬁnal de una sentencia IF. Si se especiﬁca la frase END-IF no se puede utilizar la frase NEXT SENTENCE. ",e.jsx("br",{}),"También, hay que tener presente que el operador NOT puede preceder a una condición simple o una condición combinada."]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"IF"})," SaldoCuenta ","<"," 0 ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Cuenta en números rojos'"})," ",e.jsx("br",{}),e.jsx(s,{children:"ELSE"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Cuenta en buen estado'"})," ",e.jsx("br",{}),e.jsx(s,{children:"END-IF"}),"."]}),e.jsx("p",{children:"En este ejemplo, se muestra un mensaje en función del saldo de la cuenta."})]}),e.jsx("h5",{children:"Condiciones combinadas."}),e.jsxs("p",{children:["Una condición combinada está formada por un conjunto de condiciones simples unidas por los operadores OR y AND. ",e.jsx("br",{}),"También, hay que tener presente que el operador NOT puede preceder a una condición simple o a una condición combinada."]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"IF"})," A = ( 1 ",e.jsx(s,{children:"OR"})," 5 ",e.jsx(s,{children:"OR"})," 7) ",e.jsx(s,{children:"AND"})," B = 4"]}),e.jsx("h5",{children:"ANIDAMIENTO DE SENTENCIAS IF."}),e.jsx("p",{children:"La estructura presentada a continuación, aparece con bastante frecuencia y es por lo que la damos un tratamiento por separado. Esta estructura es consecuencia del anidamiento de sentencias IF. Las sentencias IF...THEN pueden estar anidadas. Esto quiere decir que como acción-1 o acción-2, de acuerdo con el formato, puede escribirse otra sentencia IF."}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"IF"})," Edad ","<"," 18 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Menor de edad'"})," ",e.jsx("br",{}),e.jsx(s,{children:"ELSE"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"IF"})," Edad ","<"," 65 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Adulto'"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"ELSE"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Persona mayor'"})," ",e.jsx("br",{}),e.jsx(l,{}),"END-IF. ",e.jsx("br",{}),"END-IF."]}),e.jsx("p",{children:"En este ejemplo, se anidan sentencias IF-ELSE para determinar la categoría de edad."})]}),"Ejemplos:",e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"IF"})," condición-1 ",e.jsx(s,{children:"THEN"})," sentencia-1 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(I,{children:"NEXT SENTENCE"})," ",e.jsx("br",{}),e.jsx(s,{children:"ELSE"})," sentencia-2 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(I,{children:"NEXT SENTENCE"})," ",e.jsx("br",{}),e.jsx(s,{children:"END-IF"}),". ",e.jsx("br",{}),e.jsx(I,{children:"..................."})," ",e.jsx("br",{}),e.jsx(s,{children:"IF "}),"DATO-1 ",e.jsx(s,{children:"IS NOT NUMERIC THEN"})," ...... ",e.jsx("br",{}),e.jsx(s,{children:"END-IF"}),". ",e.jsx("br",{}),e.jsx(I,{children:"..................."})," ",e.jsx("br",{}),e.jsx(s,{children:"IF"})," NUMERO-CLIENTE ",e.jsx(s,{children:"IS LESS THAN"})," ","PREV-NUMERO-CLIENTE ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," 'CLIENTE FUERA DE SECUENCIA' ",e.jsx(s,{children:"TO"})," ","MESSAGE-TEXTO ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," WRITE-MESSAGE ",e.jsx("br",{}),e.jsx(s,{children:"END-IF"}),". ",e.jsx("br",{})]}),e.jsxs("div",{className:"codigo",children:["01 DEDIC-EMPLEADO ",e.jsx(s,{children:"PIC"})," X. ",e.jsx("br",{}),e.jsx(l,{}),"88 PARTTIME ",e.jsx(s,{children:"VALUE"})," 'P'. ",e.jsx("br",{}),e.jsx(l,{}),"88 FULL-TIME ",e.jsx(s,{children:"VALUE"})," 'F'. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"IF"})," PARTTIME ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," CALCULO-SALARIO-PARTTIME. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"IF"})," DEDIC-EMPLEADO = 'F' ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," CALCULO-SALARIO. ",e.jsx("br",{})]})]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:[e.jsx(I,{children:"Estructura IF. CON OPERADORES LÓGICOS ******************** "})," ",e.jsx("br",{}),e.jsx(s,{children:"IF"})," FECHA-AA = 2020 ",e.jsx(s,{children:"AND"})," FECHA-MM = 02"," ",e.jsx(s,{children:"AND"})," FECHA-DD = 29 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," CALCULO-CIERRE-BISIESTO ",e.jsx("br",{}),e.jsx(s,{children:"ELSE"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," CALCULO-CIERRE-NORMAL ",e.jsx("br",{}),e.jsx(s,{children:"END-IF"}),". ",e.jsx("br",{}),e.jsx(s,{children:"IF"})," PARM-MM = 01 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"OR"})," PARM-MM = 03 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"OR"})," PARM-MM = 05 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"OR"})," PARM-MM = 07 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"OR"})," PARM-MM = 08 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"OR"})," PARM-MM = 10 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"OR"})," PARM-MM = 12 AND PARM-DD = 31 ",e.jsx("br",{}),e.jsx(s,{children:"PERFORM"})," CALCULO-FIN-MES ",e.jsx("br",{}),e.jsx(s,{children:"ELSE"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," ANALISIS-MES. ",e.jsx("br",{})]}),e.jsxs("div",{className:"codigo",children:[e.jsx(I,{children:"Estructura IF. ANIDADOS......"})," ",e.jsx("br",{}),e.jsx(I,{children:"EVITAR SU USO................"})," ",e.jsx("br",{}),e.jsx(s,{children:"IF"})," ESTADO-EMPLEADO = 'EXEMPL' ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," CALCULO-SALARIO-EXEMPL ",e.jsx("br",{}),e.jsx(s,{children:"ELSE"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"IF"})," ESTADO-EMPLEADO = 'DPEMPL' ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," CALCULO-SALARIO DPEMPL ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"ELSE"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," CALCULO-SALARIO-COMUN ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"END-IF"})," ",e.jsx("br",{}),e.jsx(s,{children:"END-IF"}),". ",e.jsx("br",{})]})]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"MOVE"})," 'abcdefgh' ",e.jsx(s,{children:"TO"})," DISPLAY-AREA. ",e.jsx("br",{}),e.jsx(s,{children:"IF"})," DISPLAY-AREA ",e.jsx(s,{children:"IS"})," ALPHABETIC-UPPER ",e.jsx("br",{}),e.jsx(s,{children:"THEN MOVE"})," 'MAYUSCULA' ",e.jsx(s,{children:"TO"})," MESSAGE-TEXT ",e.jsx("br",{}),e.jsx(s,{children:"ELSE"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"IF"})," DISPLAY-AREA ",e.jsx(s,{children:"IS"})," ALPHABETIC-LOWER ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"THEN MOVE"})," 'MINUSCULA' ",e.jsx(s,{children:"TO"})," MESSAGE-TEXT ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"END-IF"})," ",e.jsx("br",{}),e.jsx(s,{children:"END-IF"}),". ",e.jsx("br",{})]}),e.jsx("br",{}),e.jsx("h4",{children:"EVALUATE"}),e.jsxs("p",{children:["Se usa en reemplazo del IF condicional para una programación estructurada. Se recomienda el uso del EVALUATE en vez del IF. ",e.jsx("br",{}),"La sentencia EVALUATE en COBOL se utiliza para realizar múltiples comparaciones en paralelo y tomar decisiones basadas en los resultados de esas comparaciones."]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"EVALUATE"})," OpcionMenu ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN"})," ",e.jsx(d,{children:"'1'"})," ",e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Seleccionó la opción 1'"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN"})," ",e.jsx(d,{children:"'2'"})," ",e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Seleccionó la opción 2'"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN"})," ",e.jsx(d,{children:"'3'"})," ",e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Seleccionó la opción 3'"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN OTHER DISPLAY"})," ",e.jsx(d,{children:"'Opción no válida'"})," ",e.jsx("br",{}),e.jsx(s,{children:"END-EVALUATE"}),"."]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"EVALUATE"})," TRANS-ID ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN"})," 'A001' ",e.jsx(s,{children:"PERFORM"})," ALTA",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN"})," 'D001' ",e.jsx(s,{children:"PERFORM"})," BAJA ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN"})," 'U001' ",e.jsx(s,{children:"PERFORM"})," MODIFICA",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN"})," 'C001' ",e.jsx(s,{children:"PERFORM"})," CONSULTA ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN"})," OTHER ",e.jsx(s,{children:"PERFORM"})," TRANS-ID-INVALIDA",e.jsx("br",{}),e.jsx(s,{children:"END-EVALUATE"}),". ",e.jsx("br",{})]})]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"EVALUATE TRUE"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN"})," HORARIO ",e.jsx(s,{children:"IS LESS THAN"})," 8",e.jsx(l,{}),e.jsx(s,{children:"COMPUTE"})," HORARIO = HORARIO * 0.65 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," MENSA1 ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN"})," HORARIO ",e.jsx(s,{children:"IS GREATER THAN"})," 8 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"COMPUTE"})," HORARIO = HORARIO * 1.25 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," MENSA2 ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN OTHER "}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," MENSA3 ",e.jsx("br",{}),e.jsx(s,{children:"END-EVALUATE"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"EVALUATE"})," A ",e.jsx(s,{children:"IS LESS THAN"})," B ",e.jsx(s,{children:"AND"})," C"," ",e.jsx(s,{children:"IS GREATER THAN"})," D ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN TRUE "})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," SEDIO ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN FALSE "})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," NO-SEDIO ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN OTHER "}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM "})," ERROR ",e.jsx("br",{}),e.jsx(s,{children:"END-EVALUATE"}),". ",e.jsx("br",{})]}),e.jsx("p",{children:"En este ejemplo, se evalúa la opción de menú y se muestra un mensaje en función de la opción seleccionada."}),e.jsx("h4",{children:"EVALUATE TRUE"}),e.jsx("p",{children:"La sentencia EVALUATE se puede utilizar con la opción TRUE para repetir un bloque de código en función de múltiples condiciones."}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 Opcion ",e.jsx(s,{children:"PIC"})," 9 ",e.jsx(s,{children:"VALUE"})," 1. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"EVALUATE TRUE"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN"})," Opcion = 1 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Seleccionó la opción 1'"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN"})," Opcion = 2 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Seleccionó la opción 2'"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN OTHER "})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Opción no válida'"})," ",e.jsx("br",{}),e.jsx(s,{children:"END-EVALUATE"}),"."]}),e.jsx("p",{children:"En este ejemplo, se ejecuta el bloque de código basado en la opción seleccionada."})]}),e.jsx("h4",{children:"GO TO"}),e.jsx("p",{children:"La sentencia GO TO se utiliza para redirigir la ejecución a una etiqueta específica en el código. Aunque su uso no se recomienda en programas modernos, todavía se encuentra en aplicaciones COBOL legadas."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"IF"})," Error ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"GO TO"})," ManejarError ",e.jsx("br",{}),e.jsx(s,{children:"END-IF"}),"."]}),e.jsx("p",{children:"En este ejemplo, si se encuentra un error, el programa salta a la etiqueta ManejarError."}),e.jsx("h5",{children:"Terminación de un Programa"}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("mark",{children:"EXIT PROGRAM"}),": Especifica el fin de una rutina y retorna el control al programa llamador."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"STOP RUN"}),": Al fin de ejecución retorna el control al sistema operativo."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"GOBACK"}),": Cumple las dos funciones la de EXIT PROGRAM, si es una rutina y la STOP RUN si es un programa MAIN. EL GOBACK es el recomendado."]})]}),e.jsx("h5",{children:"Terminación de Sentencias"}),e.jsxs(O,{data:{gridTemplateColumns:"1fr 1fr 1fr"},children:[e.jsx("div",{className:"col",children:e.jsxs("ul",{children:[e.jsx("li",{children:e.jsx("strong",{children:"END-SEARCH"})}),e.jsx("li",{children:e.jsx("strong",{children:"END-PERFORM"})}),e.jsx("li",{children:e.jsx("strong",{children:"END-READ"})}),e.jsx("li",{children:e.jsx("strong",{children:"END-IF"})})]})}),e.jsx("div",{className:"col",children:e.jsxs("ul",{children:[e.jsx("li",{children:"END-ADD"}),e.jsx("li",{children:"END-INVOKE"}),e.jsx("li",{children:"END-CALL"}),e.jsx("li",{children:"END-MULTIPLY"}),e.jsx("li",{children:"END-START"}),e.jsx("li",{children:"END-COMPUTE"}),e.jsx("li",{children:"END-STRING"})]})}),e.jsx("div",{className:"col",children:e.jsxs("ul",{children:[e.jsx("li",{children:"END-DELETE"}),e.jsx("li",{children:"END-SUBSTRING"}),e.jsx("li",{children:"END-DIVIDE"}),e.jsx("li",{children:"END-RETURN"}),e.jsx("li",{children:"END-UNSTRING"}),e.jsx("li",{children:"END-EVALUATE"}),e.jsx("li",{children:"END-REWRITE"}),e.jsx("li",{children:"END-WRITE"})]})})]},1)]}),cj=()=>e.jsxs("article",{id:"modulo-3",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:" Módulo 3: Variables y Tipos de Datos en COBOL "}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsx(sj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(ij,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(lj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(oj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z})]}),tj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"4.1",children:[e.jsx("h3",{children:"4.1 Campos numéricos: PIC 9"}),e.jsxs("p",{children:["En COBOL, se utilizan varios tipos de datos numéricos para representar valores numéricos, ya sean enteros o decimales. Estos tipos de datos numéricos son fundamentales para realizar cálculos matemáticos y manipular datos financieros en aplicaciones empresariales."," "]}),e.jsx("h4",{children:"INTEGER (PIC 9):"}),e.jsxs("p",{children:["El tipo de dato INTEGER se utiliza para representar números enteros en COBOL. Estos números no tienen parte decimal y pueden ser positivos o negativos. La declaración de una variable INTEGER se realiza con la cláusula PIC seguida de una especificación de tamaño, que indica la cantidad de dígitos que puede contener la variable. Se pueden hacer operaciones. Máximo desde 18 posiciones hasta 32 bytes (según cada instalación). La Inclusión de signo operacional (",e.jsx("strong",{children:"S"}),") indica que el número es con signo (Signed Number). Esto significa que la variable puede representar tanto valores positivos como negativos."]}),e.jsxs("ul",{children:[e.jsxs("li",{children:['Si no se usa "',e.jsx("strong",{children:"S"}),'", el número es siempre positivo (00000 a 99999)']}),e.jsxs("li",{children:['Si se usa "',e.jsx("strong",{children:"S"}),'", el número puede ser positivo o negativo (-99999 a 99999).']})]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 EdadCliente ",e.jsx(s,{children:"PIC"})," 99. ",e.jsx("br",{}),"01 CantidadProductos ",e.jsx(s,{children:"PIC"})," S9(5)."]}),e.jsxs("p",{children:["En el primer ejemplo, EdadCliente puede contener números enteros positivos de hasta dos dígitos. ",e.jsx("br",{}),"En el segundo ejemplo, CantidadProductos puede contener números enteros positivos o negativos de hasta cinco dígitos."]})]}),e.jsx("h3",{children:"4.5 Decimales: V"}),e.jsx("p",{children:"En COBOL, la letra V dentro de una cláusula PIC indica la posición del punto decimal implícito. Esto significa que el punto no se almacena en la memoria, pero COBOL lo interpreta en esa posición al realizar operaciones y conversiones."}),"Nota importante: La V es sólo una marca lógica, no ocupa espacio de almacenamiento.",e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PIC"})," 9(4)V99"]}),e.jsx("p",{children:"Este formato define un número de 6 dígitos, de los cuales:"}),e.jsx("li",{children:"4 están antes del punto decimal (parte entera),"}),e.jsx("li",{children:"2 están después del punto decimal (parte decimal)."}),"📌 No hay un punto real almacenado. COBOL lo interpreta como si existiera entre el cuarto y el quinto dígito.",e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 PRECIO ",e.jsx(s,{children:"PIC"})," 9(4)V99 ",e.jsx(s,{children:"VALUE"})," 123456."]}),e.jsx("div",{children:"COBOL interpreta este valor como: 1234.56 El punto no se almacena ni se muestra automáticamente."})]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 PrecioProducto ",e.jsx(s,{children:"PIC"})," S9(5)V99. ",e.jsx("br",{}),"01 SaldoCuentaBancaria ",e.jsx(s,{children:"PIC"})," 9(7)V999."]}),e.jsxs("p",{children:["En el primer ejemplo, PrecioProducto puede contener un valor decimal con una parte entera de hasta cinco dígitos y dos dígitos decimales. En el segundo ejemplo, SaldoCuentaBancaria puede contener un valor decimal con una parte entera de hasta siete dígitos y tres dígitos decimales.",e.jsx("strong",{children:'La " V " indica la parte decimal. El signo " S " indica que la variable puede contener valores negativos.'})]})]}),e.jsx("h3",{children:"Campo numérico con signo (S)"}),e.jsx("p",{children:"En COBOL, el prefijo S en una cláusula PIC (Picture) indica que el campo numérico puede contener signo, es decir, puede representar tanto valores positivos como negativos."}),e.jsxs("li",{children:[e.jsx("mark",{children:"S"}),": indica que el número puede tener signo."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"9(n)"}),": representa un número con ",e.jsx("mark",{children:"n"})," dígitos decimales enteros."]}),e.jsxs("p",{children:["El signo no ocupa un carácter adicional visible en la representación, sino que se guarda internamente, dependiendo del uso especificado (por ejemplo, ",e.jsx("mark",{children:"DISPLAY"}),", ",e.jsx("mark",{children:"COMP"}),", ",e.jsx("mark",{children:"COMP-3"}),", etc.)."]}),e.jsxs("div",{className:"twoColums",children:[e.jsx("div",{className:"codigo",children:"PIC 9(4)V99"}),e.jsx("div",{children:"Esto representa un número con 4 dígitos enteros y 2 decimales. Ejemplo: 123456 se interpreta como 1234.56."})]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 PRECIO ",e.jsx(s,{children:"PIC"})," 9(3)V99."," ",e.jsx(I,{children:"Representa valores hasta 999.99"})," ",e.jsx("br",{}),"01 IMPORTE ",e.jsx(s,{children:"PIC"})," S9(5)V999."," ",e.jsx(I,{children:"Hasta 99999.999 con signo"})]}),e.jsxs("div",{className:"dodigo",children:["El ",e.jsx("mark",{children:"V"})," puede ser interpretado como una coma si se define en"," ",e.jsx("mark",{children:"SPECIAL-NAMES"}),":",e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"SPECIAL-NAMES"}),". ",e.jsx("br",{}),e.jsx(s,{children:"DECIMAL-POINT IS COMMA"}),". ",e.jsx("br",{})]})]})]}),e.jsx("h5",{children:"Ejemplo 1: Número entero con signo"}),e.jsxs("div",{className:"codigo",children:["01 SALDO ",e.jsx(s,{children:"PIC"})," S9(5) ",e.jsx(s,{children:"VALUE"})," -12345."]}),e.jsxs("li",{children:["Puede contener valores entre ",e.jsx("strong",{children:"-99999"})," y"," ",e.jsx("strong",{children:"+99999"}),"."]}),e.jsxs("li",{children:["El signo se almacena de forma interna, pero en algunos sistemas o usos puede visualizarse como un carácter especial (por ejemplo,"," ",e.jsx("mark",{children:"{"})," o ",e.jsx("mark",{children:"}"})," al final del número)."]}),e.jsx("h5",{children:"Ejemplo 2: Número con decimales y signo"}),e.jsxs("div",{className:"codigo",children:["01 PRECIO ",e.jsx(s,{children:"PIC"})," S9(4)V99 ",e.jsx(s,{children:"VALUE"})," -1234.56."]}),e.jsx("li",{children:"Representa un número con 4 enteros y 2 decimales, con posibilidad de signo."}),e.jsxs("li",{children:["El carácter ",e.jsx("mark",{children:"V"})," es un punto decimal implícito, no se almacena físicamente."]}),e.jsxs("li",{children:["Si se omite la ",e.jsx("mark",{children:"S"}),", se asume que el número no tendrá signo (siendo positivo)."]}),e.jsxs("li",{children:["El uso de ",e.jsx("mark",{children:"S9"})," es común cuando se trabaja con cálculos matemáticos, valores contables o campos que deben diferenciar entre créditos y débitos."]}),e.jsxs("li",{children:["Para mostrar adecuadamente el signo en pantalla, es común combinar el"," ",e.jsx("mark",{children:"S9"})," con variables de edición (ver tema sobre variables de edición más adelante)."]}),e.jsx("h4",{children:"SIGN"}),e.jsx("p",{children:"Esta cláusula especifica la posición y el modo de representación del signo operacional de un campo numérico en cuya especificación de formato se ha especificado 'S'. Permite especificar dónde se debe colocar el signo (+ o -) en un campo numérico con signo."}),e.jsxs("ul",{children:[e.jsx("li",{children:"Si la cláusula SEPARATE no se especifica, el signo del número es incorporado en el dígito de la derecha (TRAILING) o en el dígito de la izquierda (LEADING). En este caso el carácter S de la PICTURE no se tiene en cuenta para determinar el tamaño del campo."}),e.jsx("li",{children:"Si la cláusula SEPARATE se especifica, entonces el signo es almacenado como un carácter separado adicional a los dígitos. En este caso el carácter 'S' se tiene en cuenta para determinar el tamaño del campo."}),e.jsx("li",{children:"Si la cláusula SIGN no se especifica, generalmente la posición por defecto es a la izquierda"})]}),e.jsxs("div",{className:"codigo",children:["05 SALDO     ",e.jsx(s,{children:"PIC"})," S9(5) ",e.jsx(s,{children:"SIGN IS LEADING"}),".  ",e.jsx(l,{}),e.jsx(I,{children:"-1234"})," ",e.jsx("br",{}),"05 MONTO     ",e.jsx(s,{children:"PIC"})," S9(4) ",e.jsx(s,{children:"SIGN IS TRAILING"}),". ",e.jsx(l,{}),e.jsx(I,{children:"5678-"})]}),e.jsx("h4",{children:"Uso de USAGE (cláusulas de almacenamiento )"}),e.jsx("p",{children:"En COBOL, se pueden utilizar cláusulas USAGE para especificar cómo se almacenan los valores numéricos en la memoria. Las cláusulas USAGE son opcionales y se utilizan para optimizar el uso de memoria. Algunas cláusulas USAGE comunes son:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"USAGE IS DISPLAY (predeterminado): Se utiliza para variables alfanuméricas. Los datos se almacenan como caracteres ASCII y se pueden mostrar en informes o pantallas."}),e.jsx("li",{children:"USAGE IS BINARY: Se utiliza para variables numéricas enteras. Los datos se almacenan en formato binario y se pueden utilizar para cálculos aritméticos."}),e.jsx("li",{children:"USAGE IS COMP: Similar a USAGE IS BINARY, pero se utiliza para números enteros. Los datos se almacenan de manera más eficiente en formato binario."}),e.jsx("li",{children:"USAGE IS COMP-3 o USAGE IS PACKED-DECIMAL: Se utiliza para variables numéricas decimales empaquetadas. Los datos se almacenan en formato comprimido, ahorrando espacio de almacenamiento. Otros tipos menos comunes incluyen USAGE IS POINTER, USAGE IS INDEX, etc."})]}),e.jsxs("div",{className:"codigo",children:["01 NUMERO-DIAS ",e.jsx(s,{children:"USAGE IS BINARY"}),". ",e.jsx("br",{}),"01 SALDO-CUENTA ",e.jsx(s,{children:"USAGE IS COMP"}),". ",e.jsx("br",{}),"01 NUMERO-CLIENTE ",e.jsx(s,{children:"USAGE IS DISPLAY"}),". ",e.jsx("br",{}),"01 MONTO-PAGAR ",e.jsx(s,{children:"USAGE IS COMP-3"}),". ",e.jsx("br",{})]}),e.jsx("p",{children:"La elección del tipo correcto de USAGE puede tener un impacto en el rendimiento y el uso de memoria de un programa COBOL. Es importante seleccionar el tipo adecuado de USAGE según el tipo de datos que se está manejando y los requisitos de rendimiento del programa."}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 TotalVentas ",e.jsx(s,{children:"PIC"})," 9(9) ",e.jsx(s,{children:"USAGE IS"})," ","COMPUTATIONAL-3."]}),e.jsx("p",{children:"En este ejemplo, TotalVentas se almacena de manera eficiente para cálculos utilizando la cláusula COMPUTATIONAL-3."})]}),e.jsxs("div",{className:"codigo",children:["01 TOTAL-VENTAS ",e.jsx(s,{children:"PIC"})," 9(6)V99 ",e.jsx(s,{children:"USAGE DISPLAY"}),". ",e.jsx("br",{}),"01 TOTAL-FACTURAS ",e.jsx(s,{children:"PIC"})," S9(6)V99 ",e.jsx(s,{children:"USAGE COMP-3"}),"."," ",e.jsx("br",{})]}),e.jsx("h5",{children:"Numérico empaquetado (PIC S9(n) COMP-3):"}),e.jsx("p",{children:"Se utiliza para almacenar números de manera comprimida para ahorrar espacio de almacenamiento. Es especialmente útil para grandes volúmenes de datos numéricos."}),e.jsx("h5",{children:"BINARY o COMPUTATIONAL o COMPUTATIONAL-4"}),e.jsx("li",{children:"El dato es almacenado en formato binario ( media palabra, palabra, etc)."}),e.jsx("li",{children:"Cuando tiene signo ( positivo o negativo ), se representa en dos medias palabras complementarias."}),e.jsx("li",{children:"Del ejemplo de +1234 / -1234 será 00 00 y 04 D2"}),e.jsx("li",{children:"Una media palabra ( 2 BYTES ) es usada para 4 dígitos. Una palabra ( 4 BYTES ) es usada para 5 a 9 dígitos."}),e.jsx("li",{children:"Una doble palabra ( 8 BYTES ) es usada para 10 a 18 dígitos."}),e.jsx("h5",{children:"COMPUTATIONAL-3"}),e.jsx("li",{children:"El dato es almacenado en un packed-decimal o sea dos dígitos por byte."}),e.jsx("h5",{children:"Estructura"}),e.jsxs(O,{data:{gridTemplateColumns:"1fr 1fr 1fr"},children:[e.jsxs("div",{className:"col tCenter",children:[e.jsx("div",{children:"PICTURE"}),e.jsx("div",{children:"9999"}),e.jsx("div",{children:"S9999"}),e.jsx("div",{children:"S9999"}),e.jsx("div",{children:"9999BINARY"}),e.jsx("div",{children:"999999BINARY"}),e.jsx("div",{children:"S9999BINARY"}),e.jsx("div",{children:"S999999BINARY"}),e.jsx("div",{children:"9999COMP-3"}),e.jsx("div",{children:"S9999COMP-3"}),e.jsx("div",{children:"S9999COMP-3"})]}),e.jsxs("div",{className:"col tCenter",children:[e.jsx("div",{children:"VALOR"}),e.jsx("div",{children:"+1234 / -1234"}),e.jsx("div",{children:"+1234"}),e.jsx("div",{children:"-1234"}),e.jsx("div",{children:"+1234 / -1234"}),e.jsx("div",{children:"+1234 / -1234"}),e.jsx("div",{children:"+1234 / -1234"}),e.jsx("div",{children:"+1234 / -1234"}),e.jsx("div",{children:"+1234 / -1234"}),e.jsx("div",{children:"+1234"}),e.jsx("div",{children:"-1234"})]}),e.jsxs("div",{className:"col tCenter",children:[e.jsx("div",{children:"REPRESENTACIÓN INTERNA"}),e.jsx("div",{children:"F1F2F3F4"}),e.jsx("div",{children:"F1F2F3C4"}),e.jsx("div",{children:"F1F2F3D4"}),e.jsx("div",{children:"04 D2"}),e.jsx("div",{children:"00 00 04 D2"}),e.jsx("div",{children:"FB 2E"}),e.jsx("div",{children:"FFFFFB2E"}),e.jsx("div",{children:"01 23 4F"}),e.jsx("div",{children:"01 23 4C"}),e.jsx("div",{children:"01 23 4D"})]})]},51),e.jsx("br",{}),e.jsx("h3",{children:"4.2 Campos alfabéticos: PIC A"}),e.jsx("p",{children:"En COBOL, la cláusula PIC A (Picture A) define un campo alfabético, es decir, un campo que sólo puede contener letras (de la A a la Z, mayúsculas y minúsculas dependiendo del sistema, aunque tradicionalmente se usaban solo mayúsculas en mainframes). 📌 No se permiten dígitos numéricos ni caracteres especiales."}),e.jsxs("div",{className:"twoColums",children:[e.jsx("div",{className:"codigo",children:"01 CAMPO-ALFA PIC A(10)."}),e.jsx("div",{children:"Esto define un campo de 10 posiciones que puede contener solo letras."})]}),e.jsx("p",{children:e.jsx("u",{children:"Características del tipo A"})}),e.jsxs("li",{children:[e.jsx("strong",{children:"Tipo de dato"}),": Alfabético"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Rango de valores"}),": Letras (A-Z, a-z en sistemas compatibles con ASCII/EBCDIC)"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Longitud máxima"}),": Depende del sistema, usualmente hasta 255 caracteres"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Inclusión de espacios"}),": Se permiten espacios, pero no caracteres numéricos"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Incompatibilidad"}),": No se pueden almacenar directamente números o símbolos"]}),e.jsx("br",{}),e.jsxs("p",{children:["En la práctica moderna, ",e.jsx("mark",{children:"PIC X"})," (alfanumérico) es mucho más utilizado, ya que permite letras, números y símbolos. Sin embargo,"," ",e.jsx("mark",{children:"PIC A"})," puede ser útil para validaciones estrictas o estructuras que deben contener exclusivamente texto alfabético (por ejemplo, ciertas iniciales, códigos de letras, etc.)."]}),"4.3 Campos alfanuméricos: PIC X ¿Qué es PIC X? La cláusula PIC X (Picture X) define un campo alfanumérico, es decir, un campo que puede contener letras, números, símbolos y espacios. 📌 Es el tipo de campo más flexible en COBOL y, por lo tanto, uno de los más utilizados.",e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 NOMBRE-COMPLETO ",e.jsx(s,{children:"PIC"})," X(30)."]}),e.jsx("div",{children:"Esto define un campo de 30 posiciones que puede almacenar cualquier combinación de caracteres alfanuméricos."})]}),e.jsxs("p",{children:[e.jsx("u",{children:"Características del tipo X"}),":"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Tipo de dato"}),": Alfanumérico"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Rango de valores"}),": Letras (A-Z, a-z), números (0-9), símbolos (como +, -, /, *) y espacios"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Longitud máxima"}),": Depende del sistema, comúnmente hasta 255 caracteres"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Usos comunes"}),": Nombres, direcciones, mensajes, códigos mixtos, descripciones, etc."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Alineación"}),": Los valores se alinean a la izquierda y se rellenan con espacios a la derecha"]}),e.jsx("li",{children:"Acepta cualquier carácter ASCII o EBCDIC válido."}),e.jsx("li",{children:"No realiza validación del tipo de contenido (a diferencia de PIC A o PIC 9)."}),e.jsx("li",{children:"Muy útil para manejar datos de entrada de usuario, archivos de texto, impresiones en pantalla, etc."}),e.jsx("li",{children:"Es ideal para casi cualquier tipo de dato textual o mixto."}),e.jsx("li",{children:"Es común limpiar espacios con funciones intrínsecas como FUNCTION TRIM."}),e.jsx("li",{children:"Verificar si el contenido tiene solo letras o números si se requiere una validación adicional."})]}),dj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"4.2",children:[e.jsx("h3",{children:"4.2. Sentencias de Toma de Decisiones en COBOL"}),e.jsx("p",{children:"En COBOL, las sentencias de toma de decisiones se utilizan para tomar acciones específicas en función de condiciones o valores. Estas sentencias son fundamentales para dirigir la ejecución del programa en diferentes ramas de acuerdo con las condiciones evaluadas."}),e.jsx("h4",{children:"IF-ELSE"}),e.jsx("p",{children:"La sentencia IF en COBOL se utiliza para tomar decisiones basadas en condiciones. Puede ir acompañada de ELSE para manejar situaciones alternativas."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"IF"})," SaldoCuenta ","<"," 0 ",e.jsx("br",{}),e.jsx(l,{}),"  ",e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Cuenta en números rojos'"})," ",e.jsx("br",{}),e.jsx(s,{children:"ELSE"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Cuenta en buen estado' "}),e.jsx("br",{}),e.jsx(s,{children:"END-IF"}),"."]}),e.jsx("p",{children:"En este ejemplo, se muestra un mensaje en función del saldo de la cuenta."}),e.jsx("h4",{children:"PERFORM UNTIL"}),e.jsx("p",{children:"La sentencia PERFORM UNTIL se utiliza para repetir un bloque de código hasta que se cumple una condición."}),e.jsxs("div",{className:"codigo",children:["01 Contador ",e.jsx(s,{children:"PIC"})," 9 ",e.jsx(s,{children:"VALUE"})," 1. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PERFORM UNTIL"})," Contador ",">"," 5 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Iteración '"})," Contador ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"ADD"})," 1 ",e.jsx(s,{children:"TO"})," Contador ",e.jsx("br",{}),e.jsx(s,{children:"END-PERFORM"}),"."]}),e.jsx("p",{children:"En este ejemplo, se muestra un mensaje en cada iteración hasta que el contador sea mayor que 5."}),e.jsx("h4",{children:"IF-ELSE anidados"}),e.jsx("p",{children:"En COBOL, es posible anidar sentencias IF-ELSE para manejar condiciones más complejas. Esto permite tomar decisiones en función de múltiples condiciones."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"IF"})," Edad ","<"," 18 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Menor de edad'"})," ",e.jsx("br",{}),e.jsx(s,{children:"ELSE"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"IF"})," Edad ","<"," 65 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Adulto'"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"ELSE"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Persona mayor'"})," ",e.jsx("br",{}),e.jsx(l,{}),"END-IF. ",e.jsx("br",{}),"END-IF."]}),e.jsx("p",{children:"En este ejemplo, se anidan sentencias IF-ELSE para determinar la categoría de edad."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"Las sentencias de toma de decisiones en COBOL son fundamentales para controlar el flujo de ejecución del programa en función de condiciones o valores evaluados. Comprender cómo utilizar estas sentencias y cómo anidarlas es esencial para desarrollar aplicaciones COBOL efectivas. En módulos posteriores, exploraremos ejemplos más complejos de toma de decisiones y cómo manejar situaciones más elaboradas en programas COBOL."})]}),uj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"4.3",children:[e.jsx("h3",{children:"4.3. Bucles y Repeticiones en COBOL"}),e.jsx("p",{children:"En COBOL, los bucles y las repeticiones se utilizan para ejecutar un bloque de código múltiples veces hasta que se cumple una condición. Estas estructuras son esenciales para realizar tareas repetitivas y procesar grandes volúmenes de datos en aplicaciones empresariales."}),e.jsx("h4",{children:"PERFORM"}),e.jsx("p",{children:"La sentencia PERFORM se utiliza para repetir un bloque de código hasta que se cumple una condición. Puedes utilizar la cláusula UNTIL para especificar la condición de finalización."}),e.jsxs("div",{className:"codigo",children:["01 Contador ",e.jsx(s,{children:"PIC"})," 9 ",e.jsx(s,{children:"VALUE"})," 1. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PERFORM UNTIL "})," Contador ",">"," 5 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Iteración '"})," Contador ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"ADD"})," 1 ",e.jsx(s,{children:"TO"})," Contador ",e.jsx("br",{}),e.jsx(s,{children:"END-PERFORM"}),"."]}),e.jsx("p",{children:"En este ejemplo, se muestra un mensaje en cada iteración hasta que el contador sea mayor que 5."}),e.jsx("h4",{children:"PERFORM VARYING"}),e.jsx("p",{children:"La sentencia PERFORM se puede combinar con la cláusula VARYING para modificar una variable de control en cada iteración."}),e.jsxs("div",{className:"codigo",children:["01 Contador ",e.jsx(s,{children:"PIC"})," 9 ",e.jsx(s,{children:"VALUE"})," 1. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PERFORM VARYING "})," Contador ",e.jsx(s,{children:"FROM"})," 1 ",e.jsx(s,{children:"BY"})," 1 ",e.jsx(s,{children:"UNTIL"})," Contador ",">"," 5 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Iteración '"})," Contador ",e.jsx("br",{}),e.jsx(s,{children:"END-PERFORM"}),"."]}),e.jsx("p",{children:"En este ejemplo, la variable Contador se modifica en cada iteración hasta que sea mayor que 5."}),e.jsx("h4",{children:"EVALUATE TRUE"}),e.jsx("p",{children:"La sentencia EVALUATE se puede utilizar con la opción TRUE para repetir un bloque de código en función de múltiples condiciones."}),e.jsxs("div",{className:"codigo",children:["01 Opcion ",e.jsx(s,{children:"PIC"})," 9 ",e.jsx(s,{children:"VALUE"})," 1. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"EVALUATE TRUE"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN"})," Opcion = 1 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Seleccionó la opción 1'"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN"})," Opcion = 2 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Seleccionó la opción 2'"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WHEN OTHER "})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Opción no válida'"})," ",e.jsx("br",{}),e.jsx(s,{children:"END-EVALUATE"}),"."]}),e.jsx("p",{children:"En este ejemplo, se ejecuta el bloque de código basado en la opción seleccionada."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"Las estructuras de bucles y repeticiones en COBOL son fundamentales para realizar tareas repetitivas y procesar grandes volúmenes de datos en aplicaciones empresariales. Comprender cómo utilizar estas estructuras, ya sea con PERFORM, PERFORM VARYING, o EVALUATE TRUE, es esencial para desarrollar aplicaciones COBOL efectivas. Estas estructuras son ampliamente utilizadas en aplicaciones empresariales para realizar cálculos, procesar registros y llevar a cabo otras tareas que requieren repeticiones controladas."}),e.jsx("hr",{})]}),jj=()=>e.jsxs("article",{id:"modulo-4",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:" Módulo 4: Tipos de datos en COBOL"}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsx(tj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(dj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(uj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z})]}),xj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"5.1",children:[e.jsx("h3",{children:"5.1. Introducción a las tablas"}),e.jsx("p",{children:"Las tablas en COBOL son estructuras de datos similares a los arreglos en otros lenguajes. Permiten almacenar múltiples valores del mismo tipo bajo una misma estructura, accediendo a ellos mediante un índice. Se utilizan principalmente cuando: Se necesita almacenar listas o colecciones de datos. Se desea realizar búsquedas o recorridos secuenciales. Se trabaja con estructuras repetitivas (como registros mensuales, productos, empleados, etc.). No puede especificarse en una descripción de nivel 01, 77, 88 o 66. Entero indica el número de veces que se repite un campo con la misma descripción. Se definen solamente en los niveles 02 a 49 ambos inclusive Decide qué tipo de datos contendrá cada elemento de la tabla y define la estructura correspondiente utilizando la cláusula 01 LEVEL. Por ejemplo, si deseas crear una tabla de nombres, cada elemento podría ser una cadena de caracteres."}),e.jsx("h4",{children:"Uso de OCCURS"}),e.jsx("p",{children:"Esta cláusula es para definir tablas de 'n' dimensiones, y pueden ser referenciadas por índices o suscriptores. Esta cláusula no se puede usar en los niveles 01/66/77/88. Se utiliza para declarar arreglos de variables. Permite especificar el número de elementos y la estructura de cada elemento dentro del arreglo. Indica el número de veces 'n' que se repite un elemento (campo simple o compuesto) con la misma descripción. El subíndice correspondiente al primer elemento es 1. El subíndice puede ser un número entero o un nombre de datos. Si es un nombre de datos se recomienda declararlo con formato binario (COMP). La cláusula OCCURS no puede especificarse en una descripción con número de nivel 01 o 77. Una tabla en COBOL puede tener hasta 3 subíndices. En este caso se dice que la tabla es de 3 dimensiones. La cláusula OCCURS y VALUE son incompatibles, lo cual no permite inicializar una tabla en su propia declaración. Por ejemplo, para declarar una tabla de nombres con capacidad para 100 elementos, puedes hacer lo siguiente:"}),e.jsxs("div",{className:"codigo",children:["01 TABLA-NOMBRES. ",e.jsx("br",{}),e.jsx(l,{}),"05 NOMBRE-REGISTRO ",e.jsx(s,{children:"OCCURS"})," 100 ",e.jsx(s,{children:"TIMES"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"10 NOMBRE ",e.jsx(s,{children:"PIC"})," X(30). ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"10 APELLIDO ",e.jsx(s,{children:"PIC"})," X(30). ",e.jsx("br",{})]}),e.jsx("h4",{children:"Uso de DEPENDING ON"}),e.jsx("p",{children:"La cláusula DEPENDING ON permite que el número de ocurrencias de una tabla se determine dinámicamente en tiempo de ejecución."}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["01 TOTAL-EMPLEADOS        ",e.jsx(s,{children:"PIC"})," 9(2).   ",e.jsx("br",{}),"01 TABLA-EMPLEADOS.   ",e.jsx("br",{}),e.jsx(l,{}),"05 EMPLEADO-NOMBRE     ",e.jsx(s,{children:"PIC"})," X(30)   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"OCCURS"})," 1 ",e.jsx(s,{children:"TO"})," 50 ",e.jsx(s,{children:"TIMES"}),"   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DEPENDING ON"})," TOTAL-EMPLEADOS.   ",e.jsx("br",{})]}),e.jsx("p",{children:" El número real de elementos dependerá del valor de TOTAL-EMPLEADOS."})]}),e.jsx("h4",{children:"5.3 INDEXED BY y USAGE INDEX"}),e.jsx("p",{children:"Cuando se necesita recorrer tablas de forma más eficiente, se puede utilizar un índice, declarado con INDEXED BY."}),e.jsxs("div",{className:"codigo",children:["01 TABLA-EMPLEADOS.  ",e.jsx("br",{}),e.jsx(l,{}),"05 EMPLEADO-NOMBRE      ",e.jsx(s,{children:"PIC"})," X(30) ",e.jsx(s,{children:"OCCURS"})," 10 ",e.jsx(s,{children:"TIMES"}),"  ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"INDEXED BY"})," IDX-NOMBRE.  ",e.jsx("br",{})]}),e.jsxs("div",{className:"twoColums",children:[e.jsx("p",{children:"Para manipular el índice se utiliza la instrucción SET:"}),e.jsx("div",{children:e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"SET"})," IDX-NOMBRE ",e.jsx(s,{children:"TO"})," 1. ",e.jsx("br",{}),e.jsx(s,{children:"SET"})," IDX-NOMBRE ",e.jsx(s,{children:"UP BY"})," 1."]})})]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("p",{children:["En la ",e.jsx("mark",{children:"LINKAGE SECTION"}),", cuando se trabaja con índices, se puede usar USAGE IS INDEX:"]}),e.jsxs("div",{className:"codigo",children:["01 IDX-NOMBRE ",e.jsx(s,{children:"USAGE IS INDEX"}),"."]})]}),e.jsx("h4",{children:"5.4 Inicialización y recorrido"}),e.jsx("p",{children:"Las tablas pueden inicializarse con INITIALIZE o manualmente con MOVE."}),e.jsxs("div",{className:"twoColums",children:[e.jsx("p",{children:"📌 Inicializar toda la tabla:"}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"INITIALIZE"})," EMPLEADO-NOMBRE."]})]}),e.jsxs("div",{className:"twoColums",children:[e.jsx("p",{children:"📌 Recorrido secuencial con subíndice:"}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PERFORM VARYING"})," IDX ",e.jsx(s,{children:"FROM"})," 1 ",e.jsx(s,{children:"BY"})," 1 ",e.jsx(s,{children:"UNTIL"})," IDX ",">"," 10  ",e.jsx("br",{}),e.jsx(l,{}),"    ",e.jsx(s,{children:"DISPLAY"})," EMPLEADO-NOMBRE(IDX)  ",e.jsx("br",{}),e.jsx(s,{children:"END-PERFORM"}),".  ",e.jsx("br",{})]})]}),e.jsxs("div",{className:"twoColums",children:[e.jsx("p",{children:"📌 Recorrido con índice:"}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"SET"})," IDX-NOMBRE ",e.jsx(s,{children:"TO"})," 1  ",e.jsx("br",{}),e.jsx(s,{children:"PERFORM UNTIL "}),"IDX-NOMBRE ",">"," 10  ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"DISPLAY"})," EMPLEADO-NOMBRE(IDX-NOMBRE)  ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"SET"})," IDX-NOMBRE ",e.jsx(s,{children:"UP BY"})," 1  ",e.jsx("br",{}),e.jsx(s,{children:"END-PERFORM"}),".  ",e.jsx("br",{})]})]}),e.jsx("h4",{children:"5.5 Búsqueda con SEARCH y SEARCH ALL"}),"COBOL provee dos formas de búsqueda en tablas:",e.jsxs("li",{children:[e.jsx("mark",{children:"SEARCH"}),": búsqueda secuencial."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"SEARCH ALL"}),": búsqueda binaria (requiere que la tabla esté ordenada)."]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("p",{children:["📌 Ejemplo de ",e.jsx("mark",{children:"SEARCH"}),":"]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"SEARCH"})," EMPLEADO-ID  ",e.jsx("br",{}),e.jsx(l,{}),"   ",e.jsx(s,{children:"AT END DISPLAY"})," ",e.jsx(d,{children:"'NO ENCONTRADO'"}),"  ",e.jsx("br",{}),e.jsx(l,{}),"   ",e.jsx(s,{children:"WHEN"})," EMPLEADO-ID(IDX) = 123  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"      ",e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'ENCONTRADO'"}),"  ",e.jsx("br",{}),e.jsx(s,{children:"END-SEARCH"}),".  ",e.jsx("br",{})]})]}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{children:[e.jsxs("p",{children:["📌 Ejemplo de ",e.jsx("mark",{children:"SEARCH ALL"}),":"]}),e.jsxs("p",{children:["Importante: SEARCH ALL requiere: ",e.jsx("br",{}),"Tabla ordenada (ASCENDING KEY). ",e.jsx("br",{}),"Uso de índice, no subíndice. ",e.jsx("br",{}),"Declaración del campo como OCCURS ... INDEXED BY. ",e.jsx("br",{})]})]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"SEARCH ALL"})," EMPLEADO-ID  ",e.jsx("br",{}),e.jsx(l,{}),"   ",e.jsx(s,{children:"AT END DISPLAY"})," ",e.jsx(d,{children:"'NO ENCONTRADO'"}),"  ",e.jsx("br",{}),e.jsx(l,{}),"   ",e.jsx(s,{children:"WHEN"})," EMPLEADO-ID(IDX) = 123  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"      ",e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'ENCONTRADO'"})," ",e.jsx("br",{}),e.jsx(s,{children:"END-SEARCH"}),".  ",e.jsx("br",{})]})]}),e.jsx("h5",{children:"MANIPULACIÓN DE TABLAS"}),e.jsx("p",{children:"Una tabla es un conjunto de elementos del mismo tipo, que comparten en común un nombre común pero que son distinguibles por la posición que ocupa cada uno de ellos en la tabla. Cada elemento de la tabla puede contener un dato numérico o una cadena de caracteres o una combinación de ambos. La representación de una tabla se hace mediante variables suscritas o de subíndices y puede tener una o varias dimensiones. La descripción de una tabla se hace en la sección FILE y en la sección WORKINGSTORAGE utilizando la cláusula OCCURS."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"IDENTIFICATION DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"PROGRAM-ID"}),". ",e.jsx(s,{children:"EJEMPLO-TABLA"}),". ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 NOMBRE-REGISTRO. ",e.jsx("br",{}),e.jsx(l,{}),"05 NOMBRE ",e.jsx(s,{children:"PIC"})," X(30). ",e.jsx("br",{}),e.jsx(l,{}),"05 APELLIDO ",e.jsx(s,{children:"PIC"})," X(30). ",e.jsx("br",{})," ",e.jsx("br",{}),"01 TABLA-NOMBRES. ",e.jsx("br",{}),e.jsx(l,{}),"05 NOMBRE-REGISTRO ",e.jsx(s,{children:"OCCURS"})," 100 ",e.jsx(s,{children:"TIMES"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"10 NOMBRE ",e.jsx(s,{children:"PIC"})," X(30). ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"10 APELLIDO ",e.jsx(s,{children:"PIC"})," X(30). ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," VACIAR-TABLA ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," LLENAR-TABLA ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," MOSTRAR-TABLA ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"STOP RUN"}),". ",e.jsx("br",{})," ",e.jsx("br",{}),"VACIAR-TABLA. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"INITIALIZE"})," TABLA-NOMBRES. ",e.jsx("br",{})," ",e.jsx("br",{}),"LLENAR-TABLA. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," ",e.jsx(d,{children:"'Juan'"})," ",e.jsx(s,{children:"TO"})," NOMBRE-REGISTRO(1). // Asigna 'Juan' al primer elemento ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," ",e.jsx(d,{children:"'Perez'"})," ",e.jsx(s,{children:"TO"})," APELLIDO(1). // Asigna 'Perez' al primer elemento ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," ",e.jsx(d,{children:"'Maria'"})," ",e.jsx(s,{children:"TO"})," NOMBRE-REGISTRO(2). // Asigna 'Maria' al segundo elemento ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," ",e.jsx(d,{children:"'Gomez'"})," ",e.jsx(s,{children:"TO"})," APELLIDO(2). // Asigna 'Gomez' al segundo elemento ",e.jsx("br",{}),"... // Continuar llenando la tabla ",e.jsx("br",{})," ",e.jsx("br",{}),"MOSTRAR-TABLA. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Tabla de nombres:'"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," ",e.jsx(s,{children:"VARYING"})," I ",e.jsx(s,{children:"FROM"})," 1"," ",e.jsx(s,{children:"BY"})," 1 ",e.jsx(s,{children:"UNTIL"})," I ","> ","100 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Nombre: '"})," NOMBRE-REGISTRO(I) ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Apellido: '"})," APELLIDO(I) ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"END-PERFORM"}),". ",e.jsx("br",{}),e.jsx("br",{})]}),e.jsx("h5",{children:"Acceder y manipular la tabla:"}),e.jsx("p",{children:"Una vez que hayas definido la tabla, puedes acceder y manipular sus elementos de la misma manera que lo harías con cualquier otra variable en COBOL. Puedes acceder a elementos específicos de la tabla utilizando índices y realizar operaciones con ellos según sea necesario en tu programa."}),e.jsx("h5",{children:"Manipulación de tablas en PROCEDURE DIVISION"}),e.jsx("p",{children:"Cuando se especifica nombre dato-2 debe ser descrito por medio de la cláusula USAGE IS INDEX o como un campo elemental entero. El valor de este campo evoluciona paralelamente al índice de la tabla y se emplea cuando:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"A: Aparte de realizar la búsqueda de un determinado elemento de la tabla se desea conocer su posición."}),e.jsx("li",{children:"B: Se desea incrementar simultáneamente el índice de otra tabla diferente a la tabla en la que se está realizando la búsqueda. Las condiciones de las cláusulas WHEN se evalúan en el orden en que están descritas."})]}),e.jsx("h4",{children:"Sentencia SET"}),e.jsx("p",{children:"Permite transferir el valor de un literal, nombre de datos o de un índice a uno o más identificadores."}),e.jsxs("ul",{children:[e.jsx("li",{children:"Formato 1: Cuando se ejecuta esta sentencia el valor del operando que sigue a TO es transferido a los operandos que siguen a SET. SET I J TO 1."}),e.jsx("li",{children:"Formato 2: Este formato permite ir incrementando (UP BY) o decrementando (DOWN BY) el índice o índices en el valor especificado por nombre dato o entero. SET I J UP BY 1."})]})]}),mj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"5.2",children:[e.jsx("h3",{children:"5.2. Declaración de Archivos (FILE SECTION) en COBOL"}),e.jsxs("p",{children:["La sección de archivo (FILE SECTION) en COBOL es una parte fundamental en la definición de archivos y se utiliza para declarar y describir los archivos que un programa COBOL va a utilizar. Aquí es donde se establecen las características de los archivos, como su nombre, organización, clave principal y otros atributos importantes."," "]}),e.jsx("h4",{children:"SELECT"}),e.jsx("p",{children:"La declaración SELECT se utiliza para especificar el nombre del archivo y sus atributos. Aquí se declara el nombre del archivo y se asigna a un archivo físico en el sistema. También se establece la organización del archivo, que puede ser SEQUENTIAL, INDEXED o RELATIVE, según el tipo de archivo."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"SELECT"})," ArchivoSecuencial ",e.jsx(s,{children:"ASSIGN TO"})," ",e.jsx(d,{children:"'datos.dat'"})," ",e.jsx("br",{}),e.jsx(s,{children:"ORGANIZATION IS SEQUENTIAL"}),"."]}),e.jsx("h4",{children:"FD (File Description)"}),e.jsx("p",{children:"La declaración FD se utiliza para describir la estructura de los registros en el archivo. Aquí se definen los campos que componen cada registro, junto con sus atributos, como la longitud y el tipo de datos. También se establece la clave principal si el archivo es de acceso aleatorio o indexado."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"FD"})," RegistroCliente. ",e.jsx("br",{}),"01 NumeroCliente ",e.jsx(s,{children:"PIC"})," 9(5). ",e.jsx("br",{}),"01 NombreCliente ",e.jsx(s,{children:"PIC"})," X(30). ",e.jsx("br",{}),"01 DireccionCliente ",e.jsx(s,{children:"PIC"})," X(50)."]}),e.jsx("h4",{children:"01-Level Record"}),e.jsx("p",{children:"En la sección FD, se declaran los registros utilizando nivel 01, lo que indica un registro principal. Cada campo del registro se declara bajo este nivel. Los nombres de los campos y sus descripciones se definen aquí."}),e.jsx("h4",{children:"Data Types"}),e.jsx("p",{children:"Los tipos de datos utilizados en los campos de los registros pueden incluir datos numéricos (como PIC 9(5)), datos alfanuméricos (como PIC X(30)), datos de punto flotante (como PIC 9(5)V99), y otros tipos de datos compatibles con COBOL."}),e.jsx("h4",{children:"KEY IS"}),e.jsx("p",{children:"Si el archivo es de acceso aleatorio o indexado, se utiliza la cláusula KEY IS para especificar la clave principal que se utilizará para acceder a los registros."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"FD"})," ArchivoAleatorio. ",e.jsx("br",{}),"01 Registro. ",e.jsx("br",{}),e.jsx(l,{}),"02 NumeroEmpleado ",e.jsx(s,{children:"PIC"})," 9(5). ",e.jsx("br",{}),e.jsx(l,{}),"02 NombreEmpleado ",e.jsx(s,{children:"PIC"})," X(30). ",e.jsx("br",{}),e.jsx(l,{}),"02 Departamento ",e.jsx(s,{children:"PIC"})," X(10). ",e.jsx("br",{}),e.jsx(l,{}),"02 Salario ",e.jsx(s,{children:"PIC"})," 9(7)V99. ",e.jsx("br",{}),e.jsx(l,{}),"02 ",e.jsx(s,{children:"KEY IS"})," NumeroEmpleado."]}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"La sección de archivo (FILE SECTION) es esencial para declarar y describir archivos en COBOL. Aquí se establecen los atributos clave de los archivos, como el nombre, la organización, la estructura de los registros y la clave principal. Comprender cómo declarar y describir archivos en COBOL es crucial para el desarrollo de aplicaciones que manejan datos de manera efectiva y precisa, especialmente en aplicaciones empresariales que requieren la gestión de archivos de datos."})]}),hj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"5.3",children:[e.jsx("h3",{children:"5.3. Lectura y Escritura de Archivos Secuenciales en COBOL"}),e.jsx("p",{children:"Los archivos secuenciales son una de las organizaciones de archivos más simples en COBOL y se utilizan para leer y escribir registros en un orden lineal. En este módulo, exploraremos cómo realizar operaciones de lectura y escritura en archivos secuenciales en COBOL."}),e.jsx("h4",{children:"Lectura de Archivos Secuenciales"}),e.jsx("p",{children:"La lectura de archivos secuenciales implica recuperar registros uno tras otro en el orden en que se encuentran en el archivo. Para ello, se utiliza la sentencia READ."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"SELECT"})," ArchivoSecuencial ",e.jsx(s,{children:"ASSIGN TO"})," ",e.jsx(d,{children:"'datos.dat'"})," ",e.jsx("br",{}),e.jsx(s,{children:"ORGANIZATION IS SEQUENTIAL"}),". ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(s,{children:"FD"})," RegistroCliente. ",e.jsx("br",{}),"01 NumeroCliente ",e.jsx(s,{children:"PIC"})," 9(5). ",e.jsx("br",{}),"01 NombreCliente ",e.jsx(s,{children:"PIC"})," X(30). ",e.jsx("br",{}),"01 DireccionCliente ",e.jsx(s,{children:"PIC"})," X(50). ",e.jsx("br",{})," ",e.jsx("br",{}),"01 RegistroLeido. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"COPY"})," RegistroCliente. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"OPEN INPUT"})," ArchivoSecuencial. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM UNTIL EOF"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"READ"})," ArchivoSecuencial ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"AT END"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{})," ",e.jsx(s,{children:"MOVE"})," ",e.jsx(d,{children:"'Y'"})," ",e.jsx(s,{children:"TO EOF"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"NOT AT END"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Número de Cliente: '"})," NumeroCliente ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Nombre del Cliente: '"})," NombreCliente ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Dirección del Cliente: '"})," DireccionCliente ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"END-READ"})," ",e.jsx("br",{}),e.jsx(s,{children:"END-PERFORM"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"CLOSE"})," ArchivoSecuencial. ",e.jsx("br",{}),e.jsx(s,{children:"STOP RUN"}),"."]}),e.jsx("p",{children:"En este ejemplo, se abre el archivo secuencial y se lee registro por registro hasta que se llega al final del archivo (EOF)."}),e.jsx("h4",{children:"Escritura en Archivos Secuenciales"}),e.jsx("p",{children:"La escritura en archivos secuenciales implica agregar nuevos registros al final del archivo existente. Para ello, se utiliza la sentencia WRITE."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"SELECT"})," ArchivoSecuencial ",e.jsx(s,{children:"ASSIGN TO"})," ",e.jsx(d,{children:"'datos.dat'"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"ORGANIZATION IS SEQUENTIAL"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"FD"})," RegistroCliente. ",e.jsx("br",{}),"01 NumeroCliente ",e.jsx(s,{children:"PIC"})," 9(5). ",e.jsx("br",{}),"01 NombreCliente ",e.jsx(s,{children:"PIC"})," X(30). ",e.jsx("br",{}),"01 DireccionCliente ",e.jsx(s,{children:"PIC"})," X(50). ",e.jsx("br",{}),e.jsx("br",{}),"01 NuevoRegistro. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"COPY"})," RegistroCliente. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"OPEN OUTPUT"})," ArchivoSecuencial. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," 12345 ",e.jsx(s,{children:"TO"})," NumeroCliente ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," ",e.jsx(d,{children:"'Juan Pérez'"})," ",e.jsx(s,{children:"TO"})," NombreCliente ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," ",e.jsx(d,{children:"'123 Main St.'"})," ",e.jsx(s,{children:"TO"})," DireccionCliente ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WRITE"})," NuevoRegistro. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," 54321 ",e.jsx(s,{children:"TO"})," NumeroCliente ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," ",e.jsx(d,{children:"'María Rodríguez'"})," ",e.jsx(s,{children:"TO"})," NombreCliente ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," ",e.jsx(d,{children:"'456 Elm St.'"})," ",e.jsx(s,{children:"TO"})," DireccionCliente ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WRITE"})," NuevoRegistro. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"CLOSE"})," ArchivoSecuencial. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"STOP RUN"}),"."]}),e.jsx("p",{children:"En este ejemplo, se abre el archivo secuencial y se escriben nuevos registros en él utilizando la sentencia WRITE."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"La lectura y escritura en archivos secuenciales son operaciones comunes en COBOL cuando se necesita procesar datos en un orden lineal. Estas operaciones son fundamentales para la manipulación de datos en aplicaciones empresariales y otros escenarios en los que se requiere una gestión ordenada de datos. Comprender cómo realizar estas operaciones en archivos secuenciales es esencial para desarrollar aplicaciones COBOL efectivas."})]}),pj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"5.4",children:[e.jsx("h3",{children:"5.4. Acceso a Archivos Indexados en COBOL"}),e.jsx("p",{children:"Los archivos indexados son una forma eficiente de acceder a registros específicos utilizando una clave única. En COBOL, se pueden realizar operaciones de lectura, escritura y modificación en archivos indexados."}),e.jsx("h4",{children:"Lectura de Archivos Indexados"}),e.jsx("p",{children:"La lectura de archivos indexados implica recuperar registros en función de una clave única. Para ello, se utiliza la sentencia READ con la opción KEY IS."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"ORGANIZATION IS INDEXED SELECT"})," ArchivoAleatorio ",e.jsx(s,{children:"ASSIGN TO"})," ",e.jsx(d,{children:"'datos.dat'"})," ",e.jsx("br",{}),e.jsx(s,{children:"ACCESS MODE IS DYNAMIC"})," ",e.jsx("br",{}),e.jsx(s,{children:"RECORD KEY IS"})," ClaveRegistro. ",e.jsx("br",{}),e.jsx(s,{children:"FD"})," RegistroEmpleado. ",e.jsx("br",{}),"01 NumeroEmpleado ",e.jsx(s,{children:"PIC"})," 9(5). ",e.jsx("br",{}),e.jsx("br",{}),"01 NombreEmpleado ",e.jsx(s,{children:"PIC"})," X(30). ",e.jsx("br",{}),"01 DepartamentoEmpleado ",e.jsx(s,{children:"PIC"})," X(10). ",e.jsx("br",{}),"01 SalarioEmpleado ",e.jsx(s,{children:"PIC"})," 9(7)V99. ",e.jsx("br",{}),"01 RegistroLeido. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"COPY"})," RegistroEmpleado. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"OPEN I-O"})," ArchivoAleatorio. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," 12345 ",e.jsx(s,{children:"TO"})," NumeroEmpleado ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"READ"})," ArchivoAleatorio ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"INVALID KEY "}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," 'Registro no encontrado' ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"NOT INVALID KEY ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Número de Empleado: '"})," NumeroEmpleado ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Nombre de Empleado: '"})," NombreEmpleado ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Departamento de Empleado: '"})," DepartamentoEmpleado ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Salario de Empleado: '"})," SalarioEmpleado ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"END-READ"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"CLOSE"})," ArchivoAleatorio.",e.jsx(l,{}),e.jsx(s,{children:"STOP RUN"}),"."]}),e.jsx("p",{children:"En este ejemplo, se abre el archivo indexado y se utiliza la clave principal para buscar y recuperar un registro específico."}),e.jsx("h4",{children:"Escritura en Archivos Indexados"}),e.jsx("p",{children:"La escritura en archivos indexados implica agregar nuevos registros al archivo utilizando una clave única. Para ello, se utiliza la sentencia WRITE con la opción KEY IS."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"SELECT"})," ArchivoAleatorio ",e.jsx(s,{children:"ASSIGN TO"})," ",e.jsx(d,{children:"'datos.dat'"}),e.jsx("br",{}),e.jsx(s,{children:"ORGANIZATION IS INDEXED"}),e.jsx("br",{}),e.jsx(s,{children:"ACCESS MODE IS DYNAMIC"}),e.jsx("br",{}),e.jsx(s,{children:"RECORD KEY IS"})," ClaveRegistro.",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"FD"})," RegistroEmpleado.",e.jsx("br",{}),"01 NumeroEmpleado ",e.jsx(s,{children:"PIC"})," 9(5).",e.jsx("br",{}),"01 NombreEmpleado ",e.jsx(s,{children:"PIC"})," X(30).",e.jsx("br",{}),"01 DepartamentoEmpleado ",e.jsx(s,{children:"PIC"})," X(10).",e.jsx("br",{}),"01 SalarioEmpleado ",e.jsx(s,{children:"PIC"})," 9(7)V99.",e.jsx("br",{}),e.jsx("br",{}),"01 NuevoRegistro.",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"COPY"})," RegistroEmpleado.",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),".",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"OPEN I-O"})," ArchivoAleatorio.",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," 54321",e.jsx(s,{children:" TO "}),"NumeroEmpleado",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," ",e.jsx(d,{children:"'María Rodríguez'"}),e.jsx(s,{children:" TO "}),"NombreEmpleado",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," ",e.jsx(d,{children:"'Ventas'"}),e.jsx(s,{children:" TO "}),"DepartamentoEmpleado",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," 5000.75",e.jsx(s,{children:" TO "}),"SalarioEmpleado",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WRITE"})," NuevoRegistro.",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"CLOSE"})," ArchivoAleatorio.",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"STOP RUN"}),"."]}),e.jsx("p",{children:"En este ejemplo, se abre el archivo indexado y se agrega un nuevo registro utilizando una clave única."}),e.jsx("h4",{children:"Modificación en Archivos Indexados"}),e.jsx("p",{children:"También es posible modificar registros en archivos indexados utilizando la sentencia REWRITE."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"SELECT"})," ArchivoAleatorio ",e.jsx(s,{children:"ASSIGN TO"})," ",e.jsx(d,{children:"'datos.dat'"})," ",e.jsx("br",{}),e.jsx(s,{children:"ORGANIZATION IS INDEXED"})," ",e.jsx("br",{}),e.jsx(s,{children:"ACCESS MODE IS DYNAMIC"})," ",e.jsx("br",{}),e.jsx(s,{children:"RECORD KEY IS"})," ClaveRegistro. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"FD"})," RegistroEmpleado. ",e.jsx("br",{}),"01 NumeroEmpleado ",e.jsx(s,{children:"PIC"})," 9(5). ",e.jsx("br",{}),"01 NombreEmpleado ",e.jsx(s,{children:"PIC"})," X(30). ",e.jsx("br",{}),"01 DepartamentoEmpleado ",e.jsx(s,{children:"PIC"})," X(10). ",e.jsx("br",{}),"01 SalarioEmpleado ",e.jsx(s,{children:"PIC"})," 9(7)V99. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"OPEN I-O"})," ArchivoAleatorio. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," 12345",e.jsx(s,{children:" TO "}),"NumeroEmpleado ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"READ"})," ArchivoAleatorio ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"INVALID KEY"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"}),e.jsxs(d,{children:[" ",e.jsx(d,{children:"'Registro no encontrado'"})]})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"NOT INVALID KEY"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," ",e.jsx(d,{children:"'Juan Pérez'"}),e.jsx(s,{children:" TO "}),"NombreEmpleado ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," ",e.jsx(d,{children:"'Recursos Humanos'"}),e.jsx(s,{children:" TO "}),"DepartamentoEmpleado ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," 6000.00",e.jsx(s,{children:" TO "}),"SalarioEmpleado ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"REWRITE"})," RegistroEmpleado ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"END-READ"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"CLOSE"})," ArchivoAleatorio. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"STOP RUN"}),". ",e.jsx("br",{})]}),e.jsx("p",{children:"En este ejemplo, se abre el archivo indexado, se busca un registro específico por clave y se modifica utilizando la sentencia REWRITE."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"Los archivos indexados son una forma eficiente de acceder a registros en COBOL, especialmente cuando se necesita recuperar o modificar registros en función de una clave única. Comprender cómo realizar operaciones de lectura, escritura y modificación en archivos indexados es esencial para el desarrollo de aplicaciones COBOL que manejan datos de manera efectiva y precisa, particularmente en aplicaciones empresariales donde la gestión de registros es fundamental."})]}),fj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"5.5",children:[e.jsx("h3",{children:"5.5. Acceso a Archivos Directos (VSAM) en COBOL"}),e.jsx("p",{children:"os archivos directos, como los archivos VSAM (Virtual Storage Access Method), son una forma eficiente de acceder a registros en COBOL. Estos archivos permiten acceder directamente a registros utilizando un número relativo de registro en lugar de una clave única. A continuación, exploraremos cómo se realiza el acceso a archivos VSAM en COBOL."}),e.jsx("h4",{children:"Lectura de Archivos VSAM"}),e.jsx("p",{children:"La lectura de archivos VSAM implica recuperar registros utilizando un número relativo de registro. Para ello, se utiliza la sentencia READ en COBOL."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"SELECT "}),"ArchivoDirecto ",e.jsxs(s,{children:["ASSIGN",e.jsx(s,{children:" TO "})]}),e.jsx(d,{children:"'datos.dat'"})," ",e.jsx("br",{}),e.jsx(s,{children:"ORGANIZATION IS RELATIVE"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"FD "}),"RegistroProducto. ",e.jsx("br",{}),"01 CodigoProducto",e.jsx(s,{children:" PIC "}),"9(5). ",e.jsx("br",{}),"01 NombreProducto",e.jsx(s,{children:" PIC "}),"X(30). ",e.jsx("br",{}),"01 PrecioProducto",e.jsx(s,{children:" PIC "}),"9(7)V99. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"OPEN I-O "}),"ArchivoDirecto. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE "}),"3",e.jsx(s,{children:" TO "}),"CodigoProducto ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"READ "}),"ArchivoDirecto ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"INVALID KEY"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),"'Registro no encontrado' ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"NOT INVALID KEY "}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Código de Producto: '"})," CodigoProducto ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Nombre de Producto: '"})," NombreProducto ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Precio de Producto: '"})," PrecioProducto ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"END-READ"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"CLOSE "}),"ArchivoDirecto. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"STOP RUN"}),"."]}),e.jsx("p",{children:"En este ejemplo, se abre el archivo VSAM y se utiliza el número relativo de registro (en este caso, 3) para recuperar un registro específico."}),e.jsx("h4",{children:"Escritura en Archivos VSAM"}),e.jsx("p",{children:"La escritura en archivos VSAM implica agregar nuevos registros al archivo utilizando un número relativo de registro. Para ello, se utiliza la sentencia WRITE en COBOL."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"SELECT "}),"ArchivoDirecto ",e.jsxs(s,{children:["ASSIGN",e.jsx(s,{children:" TO "})]}),e.jsx(d,{children:"'datos.dat'"})," ",e.jsx("br",{}),e.jsx(s,{children:"ORGANIZATION IS RELATIVE"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"FD "}),"RegistroProducto. ",e.jsx("br",{}),"01 CodigoProducto",e.jsx(s,{children:" PIC "}),"9(5). ",e.jsx("br",{}),"01 NombreProducto",e.jsx(s,{children:" PIC "}),"X(30). ",e.jsx("br",{}),"01 PrecioProducto",e.jsx(s,{children:" PIC "}),"9(7)V99. ",e.jsx("br",{}),e.jsx("br",{}),"01 NuevoRegistro. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"COPY"})," RegistroProducto. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"OPEN OUTPUT "}),"ArchivoDirecto. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE "}),"4",e.jsx(s,{children:" TO "}),"CodigoProducto ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE "}),"'Nuevo Producto'",e.jsx(s,{children:" TO "}),"NombreProducto ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE "}),"99.99",e.jsx(s,{children:" TO "}),"PrecioProducto ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WRITE "}),"NuevoRegistro. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"CLOSE "}),"ArchivoDirecto. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"STOP RUN"}),"."]}),e.jsx("p",{children:"En este ejemplo, se abre el archivo VSAM y se utiliza un número relativo de registro (en este caso, 4) para agregar un nuevo registro al archivo."}),e.jsx("h4",{children:"Modificación en Archivos VSAM"}),e.jsx("p",{children:"La modificación en archivos VSAM implica actualizar registros utilizando la sentencia REWRITE en COBOL."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"SELECT "}),"ArchivoDirecto ",e.jsxs(s,{children:["ASSIGN",e.jsx(s,{children:" TO "})]}),e.jsx(d,{children:"'datos.dat'"})," ",e.jsx("br",{}),e.jsx(s,{children:"ORGANIZATION IS RELATIVE"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"FD "}),"RegistroProducto. ",e.jsx("br",{}),"01 CodigoProducto",e.jsx(s,{children:" PIC "}),"9(5). ",e.jsx("br",{}),"01 NombreProducto",e.jsx(s,{children:" PIC "}),"X(30). ",e.jsx("br",{}),"01 PrecioProducto",e.jsx(s,{children:" PIC "}),"9(7)V99. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"OPEN I-O "}),"ArchivoDirecto. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE "}),"2",e.jsx(s,{children:" TO "}),"CodigoProducto ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"READ "}),"ArchivoDirecto ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"INVALID KEY "}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Registro no encontrado' "}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"NOT INVALID KEY "}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE "}),e.jsx(d,{children:"'Producto Actualizado'"}),e.jsx(s,{children:" TO "}),"NombreProducto ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE "}),"49.99",e.jsx(s,{children:" TO "}),"PrecioProducto ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"REWRITE"})," RegistroProducto ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"END-READ"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"CLOSE "}),"ArchivoDirecto. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"STOP RUN"}),"."]}),e.jsx("p",{children:"En este ejemplo, se abre el archivo VSAM y se utiliza un número relativo de registro (en este caso, 2) para buscar un registro y modificarlo utilizando la sentencia REWRITE."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"Los archivos VSAM son una forma eficiente de acceder a registros en COBOL cuando se necesita recuperar, escribir o modificar registros utilizando un número relativo de registro en lugar de una clave única. Comprender cómo realizar operaciones de lectura, escritura y modificación en archivos VSAM es esencial para el desarrollo de aplicaciones COBOL que gestionan datos de manera eficiente y precisa, particularmente en aplicaciones empresariales donde se requiere acceso directo a registros."}),e.jsx("hr",{})]}),Oj=()=>e.jsxs("article",{id:"modulo-5",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:" Módulo 5: Tablas en Cobol"}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsx(xj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(mj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(hj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(pj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(fj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z})]}),Ij=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"6.1",children:[e.jsx("h3",{children:"6.1. Definición de Procedimientos y Subrutinas en COBOL"}),e.jsx("p",{children:"Los procedimientos y subrutinas en COBOL son bloques de código reutilizable que se utilizan para realizar tareas específicas dentro de un programa. Estas estructuras permiten descomponer un programa en partes más pequeñas y más manejables, lo que facilita el mantenimiento y la reutilización del código."}),e.jsx("h4",{children:"Definición de Procedimientos"}),e.jsx("p",{children:"Un procedimiento en COBOL es un bloque de código que realiza una tarea específica. Estos procedimientos se definen dentro de la sección PROCEDURE DIVISION y se llaman desde otros lugares del programa principal. La definición de un procedimiento se inicia con la palabra clave PROCEDURE DIVISION y termina con END PROCEDURE."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Inicio del programa principal'"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM "}),"MiProcedimiento. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Fin del programa principal'"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"STOP RUN"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),"MiProcedimiento. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Este es un procedimiento'"}),"."]}),e.jsx("p",{children:"En este ejemplo, se define un procedimiento llamado MiProcedimiento que muestra un mensaje en pantalla. El procedimiento se llama desde el programa principal utilizando la sentencia PERFORM."}),e.jsx("h4",{children:"Definición de Subrutinas"}),e.jsx("p",{children:"Las subrutinas en COBOL son similares a los procedimientos, pero se definen fuera de la sección PROCEDURE DIVISION . Las subrutinas pueden recibir y devolver valores a través de parámetros. Se definen utilizando la palabra clave ENTRY y se llaman desde el programa principal utilizando la palabra clave CALL."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"IDENTIFICATION DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"PROGRAM-ID"}),". MiPrograma. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 NumeroA",e.jsx(s,{children:" PIC "}),"9(3) ",e.jsx(s,{children:"VALUE"})," 100. ",e.jsx("br",{}),"01 NumeroB",e.jsx(s,{children:" PIC "}),"9(3) ",e.jsx(s,{children:"VALUE"})," 50. ",e.jsx("br",{}),"01 Resultado",e.jsx(s,{children:" PIC "}),"9(4). ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Inicio del programa principal'"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"CALL"})," ",e.jsx(d,{children:"'MiSubrutina'"})," ",e.jsx(s,{children:"USING"})," NumeroA NumeroB Resultado. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Resultado: '"})," Resultado. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Fin del programa principal'"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"STOP RUN"}),". ",e.jsx("br",{}),e.jsx("br",{}),"MiSubrutina. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"ENTRY"})," ",e.jsx(d,{children:"'MiSubrutina'"})," ",e.jsx(s,{children:"USING"})," NumA NumB Result. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"COMPUTE"})," Result = NumA + NumB. ",e.jsx("br",{})]}),e.jsx("p",{children:"En este ejemplo, se define una subrutina llamada MiSubrutina que recibe dos números y devuelve su suma a través del parámetro Result. La subrutina se llama desde el programa principal utilizando la sentencia CALL."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"La definición de procedimientos y subrutinas en COBOL es una práctica común para modularizar y organizar el código de manera más eficiente. Estas estructuras permiten dividir un programa en tareas más manejables y reutilizables, lo que facilita el mantenimiento y la escalabilidad de las aplicaciones COBOL. Comprender cómo definir y utilizar procedimientos y subrutinas es fundamental para desarrollar aplicaciones COBOL bien estructuradas y mantenibles."})]}),Ej=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"6.2",children:[e.jsx("h3",{children:"6.2. Paso de Parámetros en COBOL"}),e.jsx("p",{children:"El paso de parámetros en COBOL es una técnica que permite que los procedimientos y subrutinas reciban información desde el programa principal y devuelvan resultados a través de parámetros. Los parámetros son variables que se pasan entre el programa principal y las subrutinas para compartir información."}),e.jsx("h4",{children:"Paso de Parámetros a Subrutinas"}),e.jsx("p",{children:"El paso de parámetros a subrutinas se realiza utilizando la cláusula USING en la llamada a la subrutina. Los parámetros se enumeran en la sección USING y se pasan a la subrutina. La subrutina debe estar definida para recibir los parámetros en el mismo orden."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"IDENTIFICATION DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"PROGRAM-ID"}),". MiPrograma. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 NumeroA",e.jsx(s,{children:" PIC "}),"9(3)",e.jsx(s,{children:" VALUE "}),"100. ",e.jsx("br",{}),"01 NumeroB",e.jsx(s,{children:" PIC "}),"9(3)",e.jsx(s,{children:" VALUE "}),"50. ",e.jsx("br",{}),"01 Resultado",e.jsx(s,{children:" PIC "}),"9(4). ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Inicio del programa principal'"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"CALL"})," ",e.jsx(d,{children:"'MiSubrutina'"})," ",e.jsx(s,{children:"USING"})," NumeroA NumeroB Resultado. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Resultado: ' "}),"Resultado. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Fin del programa principal'"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"STOP RUN"}),". ",e.jsx("br",{}),e.jsx("br",{}),"MiSubrutina. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"IDENTIFICATION DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PROGRAM-ID"}),". MiSubrutina. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"LINKAGE SECTION"}),". ",e.jsx("br",{}),e.jsx(l,{}),"01 NumA",e.jsx(s,{children:" PIC "}),"9(3). ",e.jsx("br",{}),e.jsx(l,{}),"01 NumB",e.jsx(s,{children:" PIC "}),"9(3). ",e.jsx("br",{}),e.jsx(l,{}),"01 Resul",e.jsx(s,{children:" PIC "}),"9(4). ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PROCEDURE DIVISION USING"})," NumA NumB Resul. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"COMPUTE"})," Resul = NumA + NumB."]}),e.jsx("p",{children:"En este ejemplo, la subrutina MiSubrutina recibe tres parámetros: NumA, NumB, y Resul. Estos parámetros se pasan desde el programa principal mediante la sentencia CALL utilizando la cláusula USING."}),e.jsx("h4",{children:"Paso de Parámetros de Retorno"}),e.jsx("p",{children:"El paso de parámetros de retorno se utiliza para devolver resultados desde una subrutina al programa principal. Los parámetros de retorno se declaran en la subrutina y se modifican para enviar resultados al programa principal."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DENTIFICATION DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"PROGRAM-ID"}),". MiPrograma. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 NumeroA",e.jsx(s,{children:" PIC "}),"9(3)",e.jsx(s,{children:" VALUE "}),"100. ",e.jsx("br",{}),"01 NumeroB",e.jsx(s,{children:" PIC "}),"9(3)",e.jsx(s,{children:" VALUE "}),"50. ",e.jsx("br",{}),"01 Resultado",e.jsx(s,{children:" PIC "}),"9(4). ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Inicio del programa principal'"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),"CALL ",e.jsx(d,{children:"'MiSubrutina'"})," USING NumeroA NumeroB Resultado. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Resultado: ' "}),"Resultado. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Fin del programa principal'"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"STOP RUN"}),". ",e.jsx("br",{}),e.jsx("br",{}),"MiSubrutina. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"IDENTIFICATION DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PROGRAM-ID"}),". MiSubrutina. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"LINKAGE SECTION"}),". ",e.jsx("br",{}),e.jsx(l,{}),"01 NumA",e.jsx(s,{children:" PIC "}),"9(3). ",e.jsx("br",{}),e.jsx(l,{}),"01 NumB",e.jsx(s,{children:" PIC "}),"9(3). ",e.jsx("br",{}),e.jsx(l,{}),"01 Resul",e.jsx(s,{children:" PIC "}),"9(4). ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PROCEDURE DIVISION USING"})," NumA NumB Resul. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"COMPUTE"})," Resul = NumA + NumB."]}),e.jsx("p",{children:"En este ejemplo, la subrutina MiSubrutina modifica el parámetro Resul y envía el resultado de vuelta al programa principal."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"El paso de parámetros en COBOL es esencial para compartir información entre el programa principal y las subrutinas. Permite que las subrutinas realicen tareas específicas con datos proporcionados por el programa principal y devuelvan resultados si es necesario. Comprender cómo pasar y recibir parámetros en COBOL es crucial para el desarrollo de aplicaciones estructuradas y modularizadas en COBOL."})]}),gj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"6.3",children:[e.jsx("h3",{children:"6.3. Llamada a Procedimientos en COBOL"}),e.jsx("p",{children:"Las llamadas a procedimientos en COBOL permiten ejecutar bloques de código reutilizables que se encuentran dentro de la sección PROCEDURE DIVISION. Estos procedimientos son similares a las subrutinas, pero se definen dentro del programa principal y no requieren una declaración de ENTRY."}),e.jsx("h4",{children:"Definición de Procedimientos"}),e.jsx("p",{children:"Los procedimientos en COBOL son bloques de código reutilizable que se definen dentro del programa principal. No requieren una sección de IDENTIFICATION DIVISION. Para definir un procedimiento, se utiliza la palabra clave PROCEDURE DIVISION seguida de un nombre de procedimiento."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Este es un procedimiento'"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"COMPUTE"})," Resultado = NumeroA + NumeroB. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Resultado: '"})," Resultado. ",e.jsx("br",{})]}),e.jsx("p",{children:"En este ejemplo, se define un procedimiento que muestra un mensaje en pantalla, realiza una operación de suma y muestra el resultado. El procedimiento no recibe ni devuelve parámetros."}),e.jsx("h4",{children:"Llamada a Procedimientos"}),e.jsx("p",{children:"Para llamar a un procedimiento en COBOL, se utiliza la sentencia PERFORM seguida del nombre del procedimiento."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Inicio del programa principal'"}),". ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," MiProcedimiento. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Fin del programa principal'"}),". ",e.jsx("br",{})]}),e.jsx("p",{children:"En este ejemplo, se llama al procedimiento MiProcedimiento desde el programa principal utilizando la sentencia PERFORM. El procedimiento se ejecuta y realiza las acciones definidas en su interior."}),e.jsx("h4",{children:"Paso de Parámetros"}),e.jsx("p",{children:"Los procedimientos en COBOL pueden acceder a variables definidas en la sección DATA DIVISION del programa principal. Esto permite compartir información entre el programa principal y los procedimientos. No es necesario definir parámetros explícitamente en la declaración del procedimiento."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 NumeroA",e.jsx(s,{children:" PIC "}),"9(3)",e.jsx(s,{children:" VALUE "}),"100. ",e.jsx("br",{}),"01 NumeroB",e.jsx(s,{children:" PIC "}),"9(3)",e.jsx(s,{children:" VALUE "}),"50. ",e.jsx("br",{}),"01 Resultado",e.jsx(s,{children:" PIC "}),"9(4). ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Inicio del programa principal'"}),". ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," MiProcedimiento. ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Resultado: '"})," Resultado. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Fin del programa principal'"}),". ",e.jsx("br",{})," ",e.jsx("br",{}),"MiProcedimiento. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Este es un procedimiento'"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"COMPUTE"})," Resultado = NumeroA + NumeroB. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Resultado en procedimiento: '"})," Resultado. ",e.jsx("br",{})]}),e.jsx("p",{children:"En este ejemplo, el procedimiento MiProcedimiento accede a las variables NumeroA y NumeroB definidas en la sección DATA DIVISION del programa principal y realiza una operación de suma. El resultado se comparte entre el programa principal y el procedimiento."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"Las llamadas a procedimientos en COBOL permiten modularizar y organizar el código de manera más eficiente. Los procedimientos son bloques de código reutilizable que se definen dentro del programa principal y se llaman cuando es necesario. Comprender cómo definir, llamar y compartir información entre procedimientos es fundamental para desarrollar aplicaciones COBOL bien estructuradas y mantenibles."})]}),vj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"6.4",children:[e.jsx("h3",{children:"6.4. Reutilización de Código en COBOL"}),e.jsx("p",{children:"La reutilización de código es una práctica esencial en la programación, que consiste en escribir código de manera que pueda ser utilizado en múltiples partes de una aplicación o en diferentes programas. En COBOL, la reutilización de código se logra a través de procedimientos, subrutinas y la organización estructurada del programa."}),e.jsx("h4",{children:"Procedimientos y Subrutinas"}),e.jsx("p",{children:"Una de las principales formas de reutilización de código en COBOL es mediante la creación de procedimientos y subrutinas. Estos bloques de código realizan tareas específicas y se pueden llamar desde diferentes partes de un programa o incluso desde varios programas."}),e.jsx("p",{children:"Un ejemplo de reutilización de código con procedimientos y subrutinas se ha presentado en secciones anteriores. Definir tareas específicas en procedimientos y subrutinas y llamarlos cuando sea necesario es una estrategia efectiva para evitar la duplicación de código y mejorar la mantenibilidad."}),e.jsx("h4",{children:"Copias de Registros"}),e.jsx("p",{children:"Otra forma de reutilización de código en COBOL es a través de copias de registros. En lugar de definir la misma estructura de datos repetidamente en diferentes partes del programa, se puede crear una copia del registro en la sección DATA DIVISION y luego utilizarla en múltiples lugares."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(s,{children:"COPY"})," RegistroCliente. ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," ",e.jsx(d,{children:"'Juan Pérez'"}),e.jsx(s,{children:" TO "}),"NombreCliente. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Nombre del Cliente: '"})," NombreCliente."," ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"}),e.jsx(d,{children:" 'María Rodríguez'"}),e.jsx(s,{children:" TO "}),"NombreCliente. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Nombre del Cliente: '"})," NombreCliente."]}),e.jsx("p",{children:"En este ejemplo, se ha definido una copia del registro RegistroCliente en la sección DATA DIVISION. Esto permite reutilizar la estructura de datos en diferentes partes del programa sin tener que volver a definirla."}),e.jsx("h4",{children:"COPY"}),e.jsx("p",{children:"Un programa COBOL puede y es aconsejable, re-utilizar el código programado, recurriendo a la inclusión de estos por medio de COPY."}),e.jsxs("ul",{children:[e.jsx("li",{children:"Declaración de archivos (Select)"}),e.jsx("li",{children:"Definición de archivos y sus registros (FD) "}),e.jsx("li",{children:"Variables propias de cada archivo (Ubicación, File Status)"}),e.jsx("li",{children:"Definición de variables comunes para todos los programas Working-Storage"}),e.jsx("li",{children:"Definición de Tablas de Bases de Datos"}),e.jsx("li",{children:"Rutinas comunes (Cálculos, Mensajes, Errores, LOG, etc)"}),e.jsx("li",{children:"Esqueletos pre-definidos con pseudo-texto"})]}),e.jsx("p",{children:"Vamos a crear el COPY FILEA, como miembro FILEA en SYS1.COPYLIB, que contendrá la siguiente estructura:"}),e.jsxs("div",{className:"codigo",children:[e.jsx(l,{}),"01 FILEA ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"02 NOMBRE-EMPL ",e.jsx(s,{children:"PIC"})," X(40). ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"02 DOMICILIO ",e.jsx(s,{children:"PIC"})," X(40). ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"02 CIUDAD ",e.jsx(s,{children:"PIC"})," X(20). ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"02 COD-POSTAL ",e.jsx(s,{children:"PIC"})," X(04). ",e.jsx("br",{}),e.jsx(I,{children:". . . . . . . . . . . . . . . . . . . Fuente del programa "}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"COPY"})," FILEA. ",e.jsx("br",{}),e.jsx(I,{children:". . . . . . . . . . . . . . . . . . . Posterior a la compilación"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 FILEA ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"02 NOMBRE-EMPL ",e.jsx(s,{children:"PIC"})," X(40). ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"02 DOMICILIO ",e.jsx(s,{children:"PIC"})," X(40). ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"02 CIUDAD ",e.jsx(s,{children:"PIC"})," X(20). ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),"02 COD-POSTAL ",e.jsx(s,{children:"PIC"})," X(04). ",e.jsx("br",{})]}),e.jsx("h4",{children:"REPLACE"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Se proveen los copys que usan los programas"}),e.jsx("li",{children:"Archivos y Tablas de la Base de Datos"}),e.jsx("li",{children:"Ejemplos de Procedimientos comunes a todos los programas"})]}),e.jsx("p",{children:"Sirve para realizar cambios en el texto del COPY previamente generado en COPYLIB, por necesidad del programador. Ejemplo de cómo es reemplazado en el programa el contenido de un COPY:"}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"COPY"})," PAYLIB ",e.jsx(s,{children:"REPLACING"})," ",e.jsx("br",{}),e.jsx(l,{}),"FLDA ",e.jsx(s,{children:"BY"})," PAY-RECORD ",e.jsx("br",{}),e.jsx(l,{}),"FLDB ",e.jsx(s,{children:"BY"})," HRLY-RATE ",e.jsx("br",{}),e.jsx(l,{}),"FLDC ",e.jsx(s,{children:"BY"})," HRS-WORKD. ",e.jsx("br",{})]}),e.jsxs("div",{style:{display:"grid",gridTemplateColumns:"1fr 1fr",placeItems:"center"},children:[e.jsxs("div",{children:[e.jsx("p",{children:"TEXTO DEL COPY EN LA BIBLIOTECA"}),e.jsxs("div",{className:"codigo",children:["01 FLDA. ",e.jsx("br",{}),e.jsx(l,{}),"02 FLDB ",e.jsx(s,{children:"PIC"})," 999V99. ",e.jsx("br",{}),e.jsx(l,{}),"02 FLDC ",e.jsx(s,{children:"PIC"})," 999V99 ",e.jsx("br",{})]})]}),e.jsxs("div",{children:[e.jsx("p",{children:"TEXTO DEL COPY EN EL PROGRAMA"}),e.jsxs("div",{className:"codigo",children:["01 PAY-RECORD. ",e.jsx("br",{}),e.jsx(l,{}),"02 HRLY-RATE ",e.jsx(s,{children:"PIC"})," 999V99. ",e.jsx("br",{}),e.jsx(l,{}),"02 HRS-WORKD ",e.jsx(s,{children:"PIC"})," 999V99. ",e.jsx("br",{})]})]})]}),e.jsx("h4",{children:"COPY DE PROCEDURE DIVISION"}),e.jsx("p",{children:"Este tipo de COPY se invoca en la PROCEDURE DIVISION y contiene un conjunto de sentencias, de uso común para los programas, por ejemplo tratamiento de errores."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"COPY"})," text-name ",e.jsx(s,{children:"OF"})," nombre-biblioteca"," ",e.jsx(s,{children:"SUPRESS REPLACING"})," operando-1 ",e.jsx(s,{children:"BY"})," operando-2"]}),e.jsx("p",{children:"Ejemplo Invocando rutina error: "}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"READ"})," FILEA ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"IF"})," RETORNO ",e.jsx(s,{children:"IS NOT EQUAL"})," ",e.jsx(d,{children:"'OK'"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," INVOCO-ERROR ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"ELSE"})," ",e.jsx("br",{}),e.jsx(I,{children:". . . . . . . . . "})," ",e.jsx("br",{}),"INVOCO-ERROR ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"COPY"})," RUT-ERROR ",e.jsx("br",{}),e.jsx(I,{children:"... Texto del copy en la biblioteca ... "})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE"})," RETORNO ",e.jsx(s,{children:"TO"})," COD-ERROR. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"CALL"})," ",e.jsx(d,{children:"'RUTERROR'"})," ",e.jsx(s,{children:"USING"})," COD-ERROR."," ",e.jsx("br",{})]}),e.jsx("h4",{children:"Bibliotecas de Enlace Dinámico"}),e.jsx("p",{children:"En COBOL, también es posible reutilizar código a nivel de programas mediante el uso de bibliotecas de enlace dinámico. Esto implica almacenar procedimientos, subrutinas o módulos en bibliotecas separadas y luego enlazar dinámicamente esos recursos cuando se ejecuta el programa principal. De esta manera, los mismos procedimientos pueden ser compartidos entre múltiples programas."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"La reutilización de código es una práctica fundamental en la programación en COBOL, que ayuda a reducir la redundancia, mejorar la mantenibilidad y acelerar el desarrollo de aplicaciones. Mediante la creación de procedimientos, subrutinas, copias de registros y el uso de bibliotecas de enlace dinámico, es posible lograr una reutilización efectiva del código en COBOL, lo que resulta en programas más eficientes y fáciles de mantener."}),e.jsx("hr",{})]}),Cj=()=>e.jsxs("article",{id:"modulo-6",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:" Módulo 6: Procedimientos y Subrutinas en COBOL"}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsx(Ij,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(Ej,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(gj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(vj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z})]}),Aj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"7.1",children:[e.jsx("h3",{children:"7.1. Manipulación de Cadenas de Texto en COBOL"}),e.jsxs("p",{children:["La manipulación de cadenas de texto es una tarea común en la programación, y COBOL ofrece diversas herramientas y técnicas para trabajar con cadenas de caracteres."," "]}),e.jsx("h4",{children:"Declaración de Variables de Cadena"}),e.jsxs("p",{children:["Para manipular cadenas de texto en COBOL, primero debes declarar las variables que contendrán las cadenas. Esto se hace en la sección DATA DIVISION."," "]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 Cadena1",e.jsx(s,{children:" PIC "}),"X(20)",e.jsx(s,{children:" VALUE"})," ",e.jsx(d,{children:"'Hola, '"})," ",e.jsx("br",{}),"01 Cadena2",e.jsx(s,{children:" PIC "}),"X(20)",e.jsx(s,{children:" VALUE"})," ",e.jsx(d,{children:"'Mundo!'"})," ",e.jsx("br",{}),"01 Resultado",e.jsx(s,{children:" PIC "}),"X(40). ",e.jsx("br",{})]}),e.jsx("p",{children:"En este ejemplo, hemos declarado tres variables de cadena: Cadena1, Cadena2 y Resultado. Las variables Cadena1 y Cadena2 contienen cadenas de texto predefinidas, mientras que Resultado se utilizará para almacenar el resultado de las manipulaciones de cadenas."}),e.jsx("h4",{children:"Concatenación de Cadenas"}),e.jsx("p",{children:"La concatenación de cadenas es la operación de unir dos o más cadenas en una sola cadena más larga. En COBOL, esto se puede lograr utilizando la sentencia MOVE o el operador +."}),e.jsx("p",{children:"Usando la sentencia MOVE:"}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"MOVE"})," Cadena1 ",e.jsx(s,{children:"TO"})," Resultado. ",e.jsx("br",{}),e.jsx(s,{children:"MOVE"})," ",e.jsx(d,{children:"' '"})," ",e.jsx(s,{children:"TO"})," Resultado(7:1). ",e.jsx("br",{}),e.jsx(s,{children:"MOVE"})," Cadena2 ",e.jsx(s,{children:"TO"})," Resultado(8:6). ",e.jsx("br",{})]}),e.jsx("p",{children:"Usando el operador +:"}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"MOVE"})," Cadena1 + ",e.jsx(d,{children:"' '"})," + Cadena2 ",e.jsx(s,{children:"TO"})," Resultado."]}),e.jsx("p",{children:'Ambos ejemplos producirán Resultado con el valor "Hola, Mundo!".'}),e.jsx("h4",{children:"Longitud de Cadenas"}),e.jsx("p",{children:"Para determinar la longitud de una cadena en COBOL, puedes utilizar la función LENGTH OF."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"MOVE LENGTH OF "}),"Cadena1 ",e.jsx(s,{children:"TO"})," Longitud. ",e.jsx("br",{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'La longitud de Cadena1 es: '"})," Longitud."]}),e.jsx("p",{children:"Este código calculará y mostrará la longitud de Cadena1."}),e.jsx("h4",{children:"Extracción de Subcadenas"}),e.jsx("p",{children:'Puedes extraer subcadenas de una cadena más larga utilizando la técnica de "subíndices".'}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"MOVE"})," Cadena1(7:5) ",e.jsx(s,{children:"TO"})," Subcadena. ",e.jsx("br",{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Subcadena: ' "}),"Subcadena."]}),e.jsx("p",{children:"En este ejemplo, estamos extrayendo una subcadena de Cadena1, comenzando en la posición 7 y con una longitud de 5 caracteres."}),e.jsx("h4",{children:"Búsqueda y Reemplazo"}),e.jsx("p",{children:"COBOL también permite buscar y reemplazar texto dentro de una cadena. Esto se puede hacer utilizando las funciones INSPECT y REPLACE."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"INSPECT"})," Cadena1 ",e.jsx(s,{children:"TALLYING"})," NumReemplazos ",e.jsx(s,{children:"FOR ALL"})," ",e.jsx(d,{children:"'a'"})," ",e.jsx(s,{children:"REPLACING ALL"})," ",e.jsx(d,{children:"'a'"})," ",e.jsx(s,{children:"BY"})," ",e.jsx(d,{children:"'X'"}),". ",e.jsx("br",{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Cadena1 con reemplazos: '"})," Cadena1. ",e.jsx("br",{}),e.jsx(s,{children:"DISPLAY "}),"'Número de reemplazos realizados: ' NumReemplazos. ",e.jsx("br",{})]}),e.jsx("p",{children:"Este código busca todas las instancias de 'a' en Cadena1 y las reemplaza por 'X'."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"La manipulación de cadenas de texto es una parte fundamental de la programación en COBOL. Mediante la declaración de variables de cadena y el uso de técnicas como la concatenación, la determinación de la longitud, la extracción de subcadenas y la búsqueda y reemplazo, puedes trabajar eficazmente con datos de texto en tus programas COBOL. Estas habilidades son esenciales para el procesamiento y la manipulación de información textual en aplicaciones empresariales y sistemas legados."})]}),Nj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"7.2",children:[e.jsx("h3",{children:"7.2. Formateo de Fechas y Horas en COBOL"}),e.jsxs("p",{children:["El formateo de fechas y horas es una tarea común en la programación, particularmente en aplicaciones empresariales donde se necesita representar y manipular datos temporales. COBOL ofrece herramientas y técnicas para trabajar con fechas y horas de manera efectiva."," "]}),e.jsx("h4",{children:"Declaración de Variables de Fecha y Hora"}),e.jsx("p",{children:"Para trabajar con fechas y horas en COBOL, primero debes declarar variables que contendrán estos valores. Esto se hace en la sección DATA DIVISION."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 FechaActual. ",e.jsx("br",{}),e.jsx(l,{}),"05 Anio",e.jsx(s,{children:" PIC"})," 9(4). ",e.jsx("br",{}),e.jsx(l,{}),"05 Mes",e.jsx(s,{children:" PIC"})," 9(2). ",e.jsx("br",{}),e.jsx(l,{}),"05 Dia",e.jsx(s,{children:" PIC"})," 9(2). ",e.jsx("br",{})," ",e.jsx("br",{}),"01 HoraActual. ",e.jsx("br",{}),e.jsx(l,{}),"05 Hora",e.jsx(s,{children:" PIC"})," 9(2). ",e.jsx("br",{}),e.jsx(l,{}),"05 Minuto",e.jsx(s,{children:" PIC"})," 9(2). ",e.jsx("br",{}),e.jsx(l,{}),"05 Segundo",e.jsx(s,{children:" PIC"})," 9(2)."]}),e.jsx("p",{children:"En este ejemplo, hemos declarado dos variables: FechaActual y HoraActual, que representan la fecha y la hora actual. Cada variable se divide en campos separados para año, mes, día, hora, minuto y segundo."}),e.jsx("h4",{children:"Obtención de la Fecha y Hora Actual"}),e.jsx("p",{children:"Para obtener la fecha y hora actual en COBOL, generalmente se utiliza una llamada a una función de sistema o una API proporcionada por el entorno de ejecución. La forma de hacerlo puede variar según la plataforma y el sistema operativo en el que se esté ejecutando el programa COBOL."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"MOVE FUNCTION CURRENT-DATE TO"})," FechaActual. ",e.jsx("br",{}),e.jsx(s,{children:"MOVE FUNCTION CURRENT-TIME TO"})," HoraActual."]}),e.jsx("p",{children:"En este ejemplo, utilizamos las funciones CURRENT-DATE y CURRENT-TIME para obtener la fecha y hora actual y luego las movemos a las variables FechaActual y HoraActual, respectivamente."}),e.jsx("h4",{children:"Formateo de Fechas y Horas"}),e.jsx("p",{children:"Una vez que tienes la fecha y la hora en variables, puedes formatearlas según tus necesidades. Puedes usar la sentencia MOVE para construir cadenas de fecha y hora en un formato específico."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"MOVE"})," Anio",e.jsx(s,{children:" TO "}),"AnioFormatted. ",e.jsx("br",{}),e.jsx(s,{children:"MOVE"})," ",e.jsx(d,{children:"'/'"}),e.jsx(s,{children:" TO "}),"Separator. ",e.jsx("br",{}),e.jsx(s,{children:"MOVE"})," Mes",e.jsx(s,{children:" TO "}),"MesFormatted. ",e.jsx("br",{}),e.jsx(s,{children:"MOVE"})," ",e.jsx(d,{children:"'/'"})," ",e.jsx(s,{children:" TO "}),"Separator. ",e.jsx("br",{}),e.jsx(s,{children:"MOVE"})," Dia",e.jsx(s,{children:" TO "}),"DiaFormatted. ",e.jsx("br",{}),e.jsx(s,{children:"MOVE"})," AnioFormatted + Separator + MesFormatted + Separator + DiaFormatted",e.jsx(s,{children:" TO "}),"FechaFormateada. ",e.jsx("br",{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Fecha Formateada: ' "}),"FechaFormateada."]}),e.jsx("p",{children:'En este ejemplo, hemos formateado la fecha con el formato "AAAA/MM/DD". Puedes aplicar técnicas similares para formatear la hora según tus necesidades.'}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"El formateo de fechas y horas es esencial en muchas aplicaciones, incluidas las aplicaciones empresariales y de sistemas legados escritas en COBOL. COBOL proporciona las herramientas necesarias para declarar, obtener y formatear fechas y horas de manera efectiva. Comprender cómo trabajar con datos temporales es fundamental para el desarrollo de aplicaciones COBOL que gestionan información relacionada con el tiempo de manera precisa y legible."})]}),Sj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"7.3",children:[e.jsx("h3",{children:"7.3. Cálculos Matemáticos y Financieros en COBOL"}),e.jsxs("p",{children:["COBOL es un lenguaje de programación que se utiliza ampliamente en aplicaciones financieras y empresariales, lo que significa que es esencial poder realizar cálculos matemáticos y financieros con precisión."," "]}),e.jsx("h4",{children:"Operaciones Matemáticas Básicas"}),e.jsx("p",{children:"COBOL admite las operaciones matemáticas básicas, como la suma, la resta, la multiplicación y la división. Estas operaciones se realizan utilizando los operadores aritméticos estándar:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Suma (+)"}),e.jsx("li",{children:"Resta (-)"}),e.jsx("li",{children:"Multiplicación (*)"}),e.jsx("li",{children:"División (/)"})]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 NumeroA",e.jsx(s,{children:" PIC "}),"9(3)",e.jsx(s,{children:" VALUE "}),"100. ",e.jsx("br",{}),"01 NumeroB",e.jsx(s,{children:" PIC "}),"9(3)",e.jsx(s,{children:" VALUE "}),"50. ",e.jsx("br",{}),"01 Resultado",e.jsx(s,{children:" PIC "}),"9(4). ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"COMPUTE "}),"Resultado = NumeroA + NumeroB. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Suma: '"})," Resultado. ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"COMPUTE "}),"Resultado = NumeroA - NumeroB. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Resta: '"})," Resultado. ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"COMPUTE "}),"Resultado = NumeroA * NumeroB. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Multiplicación: '"})," Resultado. ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"COMPUTE "}),"Resultado = NumeroA / NumeroB. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'División: ' "}),"Resultado."]}),e.jsx("h4",{children:"Operaciones Financieras"}),e.jsx("p",{children:"En aplicaciones financieras, a menudo se realizan cálculos más complejos, como cálculos de interés, depreciación, tasas de retorno y otros cálculos financieros. COBOL admite cálculos financieros mediante la aplicación de fórmulas financieras específicas."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 Capital",e.jsx(s,{children:" PIC "}),"9(7)V99",e.jsx(s,{children:" VALUE "}),"1000.00. ",e.jsx("br",{}),"01 TasaInteres",e.jsx(s,{children:" PIC "}),"9(4)V99",e.jsx(s,{children:" VALUE "}),"5.25. ",e.jsx("br",{}),"01 Tiempo",e.jsx(s,{children:" PIC "}),"9(3)",e.jsx(s,{children:" VALUE "}),"3. ",e.jsx("br",{}),"01 InteresSimple",e.jsx(s,{children:" PIC "}),"9(7)V99. ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"COMPUTE "}),"InteresSimple = (Capital * TasaInteres * Tiempo) / 100. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Interés Simple: ' "}),"InteresSimple."]}),e.jsx("p",{children:"En este ejemplo, calculamos el interés simple utilizando la fórmula (Capital * Tasa de Interés * Tiempo) / 100. Puedes aplicar fórmulas financieras similares para otros cálculos financieros."}),e.jsx("h4",{children:"Manipulación de Números Decimales"}),e.jsx("p",{children:"COBOL permite trabajar con números decimales precisos utilizando la notación PIC para definir la precisión de las variables numéricas. Las variables numéricas pueden ser de tipo Packed-Decimal, Zoned-Decimal, o Floating-Point, y puedes especificar la precisión y la escala."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 PrecioVenta",e.jsx(s,{children:" PIC "}),"S9(5)V99",e.jsx(s,{children:" VALUE "}),"-123.45. ",e.jsx("br",{}),"01 Cantidad",e.jsx(s,{children:" PIC "}),"9(3)",e.jsx(s,{children:" VALUE "}),"10. ",e.jsx("br",{}),"01 TotalVenta",e.jsx(s,{children:" PIC "}),"9(7)V99. ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"COMPUTE "}),"TotalVenta = PrecioVenta * Cantidad. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Total de Venta: '"})," TotalVenta."]}),e.jsx("p",{children:"En este ejemplo, PrecioVenta es una variable de tipo Packed-Decimal que representa un número decimal con precisión y escala. La multiplicación se realiza de manera precisa, y el resultado se almacena en TotalVenta."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"COBOL es un lenguaje de programación poderoso para realizar cálculos matemáticos y financieros, especialmente en aplicaciones empresariales y financieras. Puedes realizar operaciones matemáticas básicas, aplicar fórmulas financieras, trabajar con números decimales precisos y manipular datos financieros con precisión. La capacidad de realizar cálculos matemáticos y financieros precisos es fundamental para el desarrollo de aplicaciones COBOL en entornos empresariales y financieros."})]}),Lj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"7.4",children:[e.jsx("h3",{children:"7.4. Validación y Transformación de Datos en COBOL"}),e.jsxs("p",{children:["La validación y transformación de datos son tareas críticas en la programación, especialmente en aplicaciones empresariales y de procesamiento de datos. COBOL proporciona herramientas y técnicas para realizar estas operaciones de manera efectiva."," "]}),e.jsx("h4",{children:"Validación de Datos"}),e.jsx("p",{children:"La validación de datos implica verificar que los datos cumplan con ciertas reglas o restricciones antes de ser procesados. Puedes realizar la validación de datos en COBOL utilizando declaraciones IF o EVALUATE. Por ejemplo, puedes verificar si un número es positivo o si una cadena cumple con un formato específico."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),"  . ",e.jsx("br",{}),"01 Edad",e.jsx(s,{children:" PIC "}),"9(3)",e.jsx(s,{children:" VALUE "}),"25. ",e.jsx("br",{}),"01 Resultado",e.jsx(s,{children:" PIC "}),"X(20). ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"IF "}),"Edad ",">"," 0 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE "}),e.jsx(d,{children:"'Edad válida'"}),e.jsx(s,{children:" TO "}),"Resultado ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"ELSE "}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE "}),e.jsx(d,{children:"'Edad no válida'"}),e.jsx(s,{children:" TO "}),"Resultado ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"END-IF"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," Resultado."]}),e.jsx("p",{children:"En este ejemplo, validamos si la variable Edad es un número positivo antes de asignar un mensaje al resultado."}),e.jsx("h4",{children:"Transformación de Datos"}),e.jsx("p",{children:"La transformación de datos implica cambiar el formato o la estructura de los datos. Puedes utilizar declaraciones de asignación para transformar datos en COBOL. Esto es útil, por ejemplo, cuando necesitas formatear una fecha o convertir una cadena en mayúsculas o minúsculas."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 NombreMayusculas",e.jsx(s,{children:" PIC "}),"X(20)",e.jsx(s,{children:" VALUE "}),e.jsx(d,{children:"'juan perez'"}),". ",e.jsx("br",{}),"01 NombreTransformado",e.jsx(s,{children:" PIC "}),"X(20). ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"MOVE FUNCTION"})," UPPER-CASE(NombreMayusculas)",e.jsx(s,{children:" TO "}),"NombreTransformado. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Nombre en mayúsculas: ' "}),"NombreTransformado."]}),e.jsx("p",{children:"En este ejemplo, transformamos la variable NombreMayusculas a mayúsculas utilizando la función UPPER-CASE y luego asignamos el resultado a NombreTransformado."}),e.jsx("h4",{children:"Manipulación de Datos Compuestos"}),e.jsxs("p",{children:["COBOL también permite la validación y transformación de datos en estructuras compuestas, como registros y tablas. Puedes utilizar instrucciones PERFORM y declaraciones ",e.jsx(s,{children:"INSPECT "}),"para iterar a través de elementos y realizar validaciones o transformaciones específicas."]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 Empleado. ",e.jsx("br",{}),e.jsx(l,{}),"05 Nombre",e.jsx(s,{children:" PIC "}),"X(30)",e.jsx(s,{children:" VALUE "}),e.jsx(d,{children:"'Ana López'"}),". ",e.jsx("br",{}),e.jsx(l,{}),"05 Edad",e.jsx(s,{children:" PIC "}),"9(3)",e.jsx(s,{children:" VALUE "}),"30. ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"INSPECT "}),"Empleado ",e.jsx(s,{children:"TALLYING "}),"TotalEspacios ",e.jsx(s,{children:"FOR ALL SPACE"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"IF "}),"TotalEspacios ",">"," 0 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'El nombre contiene espacios en blanco.'"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"ELSE "}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'El nombre no contiene espacios en blanco.'"}),e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"END-IF"}),". ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM "}),"VALIDAR-EDAD ",e.jsx(s,{children:"VARYING"})," Edad ",e.jsx(s,{children:"FROM"})," 1 ",e.jsx(s,{children:"BY"})," 1 ",e.jsx(s,{children:"UNTIL"})," Edad ",">"," 100."," ",e.jsx("br",{})," ",e.jsx("br",{}),"VALIDAR-EDAD. ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"IF "}),"Edad ","<"," 0 ",e.jsx(s,{children:"OR"})," Edad ",">"," 99 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY"})," ",e.jsx(d,{children:"'Edad no válida: '"})," Edad ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"END-IF"}),"."]}),e.jsx("p",{children:"En este ejemplo, validamos si el campo Nombre contiene espacios en blanco y realizamos una validación de la edad para garantizar que esté dentro de un rango válido."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"La validación y transformación de datos son operaciones comunes en el desarrollo de aplicaciones en COBOL. Puedes utilizar declaraciones IF, EVALUATE, MOVE, INSPECT, PERFORM y funciones predefinidas para llevar a cabo estas tareas. La capacidad de validar y transformar datos con precisión es esencial para garantizar la integridad de los datos y prepararlos para su procesamiento en aplicaciones empresariales y sistemas legados escritos en COBOL."}),e.jsx("hr",{})]}),bj=()=>e.jsxs("article",{id:"modulo-7",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:" Módulo 7: Trabajo con Datos en COBOL"}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsx(Aj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(Nj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(Sj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(Lj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z})]}),Tj="https://maurolmorales.github.io/apuntes_cobol/assets/display_1-DUOIfXCz.png",Dj="https://maurolmorales.github.io/apuntes_cobol/assets/display_2-CT3JMS8e.png",Pj="https://maurolmorales.github.io/apuntes_cobol/assets/com3_1-mDRKz5pD.png",yj="https://maurolmorales.github.io/apuntes_cobol/assets/layoutFijo-uprP508O.png",Mj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"8.1",children:[e.jsx("h3",{children:"8.1 Organización de Archivos"}),e.jsx("p",{children:"El manejo de archivos en COBOL es uno de los pilares fundamentales del lenguaje, dado que fue diseñado para el procesamiento masivo de datos. COBOL permite trabajar con distintos tipos de archivos, estructuras de acceso y organizaciones físicas. Este módulo cubre todo lo relacionado con los archivos en COBOL."}),e.jsx("h4",{children:"Almacenamiento de Datos en Mainframe"}),e.jsx("p",{children:"Los datos en un mainframe IBM pueden almacenarse en diferentes formatos según su uso."}),e.jsx("h4",{children:"Zoneado (Zoned Decimal) o Display (EBCDIC)"}),e.jsx("p",{children:"Este formato se usa en COBOL cuando defines una variable numérica con USAGE DISPLAY. Se almacena como caracteres legibles en EBCDIC."}),e.jsx("p",{children:"El byte se divide en zona y dígito propiamente dicho"}),e.jsx("p",{children:"Para valores positivos: "}),e.jsx("img",{src:Tj,alt:"imagen ejemplo",style:{width:"40%"}}),e.jsx("br",{}),e.jsx("p",{children:"Para valores negativos: "}),e.jsx("img",{src:Dj,alt:"imagen ejemplo",style:{width:"40%"}}),e.jsx("h4",{children:"Empaquetado (Packed Decimal - COMP-3)"}),e.jsx("p",{children:"El packed decimal (también conocido como COMP-3) es un formato más compacto para almacenar números decimales."}),e.jsxs("ul",{children:[e.jsx("li",{children:"Cada dígito usa 4 bits en lugar de 8."}),e.jsx("li",{children:"El último nibble almacena el signo (C para positivo, D para negativo)."}),e.jsx("li",{children:"Ocupa menos espacio en comparación con DISPLAY."}),e.jsx("li",{children:"COMP-3 se usa mucho en cálculos financieros en COBOL porque es más eficiente en operaciones aritméticas."})]}),e.jsx("img",{src:Pj,alt:"imagen ejemplo",style:{width:"40%"}}),e.jsx("h4",{children:"ALMACENAMIENTO DE UN REGISTRO DE LARGO FIJO EN MEMORIA DE PROGRAMA."}),e.jsx("p",{children:"(ejemplo) LAYOUT REGISTRO: largo de registro 25 bytes. "}),e.jsx("img",{src:yj,alt:"imagen ejemplo",style:{width:"60%"}}),e.jsx("br",{}),e.jsx("h4",{children:"¿Qué es un archivo?"}),e.jsx("p",{children:"Un archivo o fichero de datos es un conjunto o colección de registros que contienen los datos referidos a una estructura definida previamente y que son almacenados en el Mainframe con un nombre determinado; el cual responde a la naturaleza de los datos que contiene (ejemplo: archivo de personas)."}),e.jsx("h5",{children:"CONCEPTO DE ARCHIVO - REGISTRO - CAMPO"}),e.jsxs("p",{children:[e.jsx("strong",{children:"Archivo"}),": conjunto de registros. Un archivo se almacena en disco; contiene un agrupamiento o lote de datos que definen una clase específica o estructura de datos de la misma naturaleza. Ejemplo: ARCHIVO MAESTRO DE CLIENTES Almacena los datos mínimos indispensables para la identificación exacta y precisa de todos los Clientes de una Entidad financiera o Banco. Los datos se agrupan en forma estructurada e independiente para cada Cliente. El archivo representa el “lote de datos” que ingresan o que resultan de la salida de procesos batch que cumplen funciones específicas, codificadas en los programas COBOL del usuario."]}),e.jsx("br",{}),e.jsxs("p",{children:[e.jsx("strong",{children:"Registro"}),": conjunto de campos que contienen la información mínima indispensable para la identificación de una clase o estructura de datos de la misma naturaleza.Contiene los datos mínimos indispensables para la identificación de cada Cliente del Total de la cartera de clientes de una Entidad financiera o Banco."]}),e.jsx("br",{}),e.jsxs("p",{children:[e.jsx("strong",{children:"Campo"}),": unidad mínima de datos dentro de un registro. Ejemplo: Cada uno de los 28 campos enumerados en el ejemplo del layout de registro."]}),e.jsx("br",{}),e.jsx("br",{}),e.jsx("p",{children:"En COBOL, la organización de un archivo describe cómo se almacenan y acceden los registros:"}),e.jsx("h4",{children:"SEQUENTIAL"}),e.jsx("p",{children:"Los registros se almacenan uno tras otro en el orden en que fueron escritos. El acceso se realiza de forma secuencial, desde el principio hasta el final."}),e.jsx("p",{children:"Un archivo secuencial es aquel que consta de registros que se almacena y se accede a ellos de modo secuencial (de principio a fin), es decir que si quieres hacer la lectura del registro ocho, tienes que hacer las siete lecturas de los registros, para llegar"}),e.jsx("br",{}),e.jsx("p",{children:"Recomendado para:"}),e.jsx("li",{children:"El tamaño de memoria fuera mínimo"}),e.jsx("li",{children:"El archivo fuera fácilmente editable"}),e.jsx("br",{}),e.jsx("p",{children:"Características: "}),e.jsx("li",{children:"Un nuevo registro no se puede insertar ni en medio ni al principio del archivo, este siempre se insertará al final del archivo."}),e.jsx("li",{children:"Después de especificar el tamaño de un registro en un archivo secuencial, no es posible reducir o alargar un registro."}),e.jsx("li",{children:"El orden de los registros, tal y como se insertan no puede ser cambiado."}),e.jsx("li",{children:"Es posible la actualización de un registro, pero esto solamente es posible “a manita” a través de la opción del TSO, de edición. Se puede tambiénsobrescribir un registro, siempre y cuando la nueva longitud de registro sea la misma."}),e.jsx("li",{children:"Los archivos secuenciales para la escritura de registros de salida son una buena opción, teniendo en cuenta, que no requieren de más especificaciones que el tamaño del registro sea el tamaño del archivo."}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"FILE-CONTROL"}),"  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"SELECT"})," ENTRADA ",e.jsx(s,{children:"ASSIGN TO"})," DDENTRA  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"ORGANIZATION IS SEQUENTIAL"}),"  ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"ACCESS MODE IS SEQUENTIAL"}),"   ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"FILE STATUS IS"})," WS-FS-ENTRADA.  ",e.jsx("br",{})]}),e.jsx("div",{children:e.jsxs("p",{children:[e.jsx("li",{children:"ENTRADA: Archivo que se va a tomar de entrada, el cual deberá de ser secuencial"}),e.jsx("li",{children:"DDENTRA: Dataset Definition que se va a declarar en JCL de ejecución"}),e.jsx("li",{children:"ORGANIZATION: Se especifica que su organización es secuencial"}),e.jsx("li",{children:"ACCESS MODE: El modo de acceso, el cual se especifica que es secuencial"}),e.jsx("li",{children:"FILE STATUS: El estatus del archivo el cual deberá de comenzar con 00."})]})})]}),e.jsx("p",{children:"Mientras que en el JCL nosotros podemos encontrarlo como se muestra en el ejemplo a continuación:"}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:["//DDENTRA ",e.jsx(s,{children:"DD"})," DSN=MOVDELL.R08.I1OUP10.SORTINYU,  ",e.jsx("br",{}),"//DISP=(OLD,KEEP,KEEP)"]}),e.jsx("div",{children:e.jsx("p",{children:e.jsx("li",{children:"DDENTRA: Archivo que se va utilizar para entrada del proceso."})})})]}),e.jsx("p",{children:"También vamos a mencionar algunos de los inconvenientes que tienen estos archivos:"}),e.jsx("li",{children:"A tamaño grande la lectura se ralentiza."}),e.jsx("li",{children:"El acceso a los archivos es puramente secuencial."}),e.jsx("p",{children:"Por lo cual dependiendo del tamaño de información que vas a procesar, si esta información aumenta o si es constante, o dependiendo de que tantos reportes o movimiento de información vas a realizar con ella, son puntos que debes de tomar en cuenta para validar si es viable este tipo de archivos."}),"+",e.jsx("h4",{children:"RELATIVE"}),e.jsx("p",{children:"Cada registro tiene un número relativo. Se puede acceder a cualquier registro directamente mediante su número."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"ORGANIZATION IS RELATIVE"})," ",e.jsx("br",{}),e.jsx(s,{children:"ACCESS MODE IS RANDOM"})," ",e.jsx("br",{})]}),e.jsx("h4",{children:"INDEXED"}),e.jsx("p",{children:"Se utiliza una clave (KEY) para acceder a los registros. Los archivos INDEXED permiten búsqueda directa por clave y también recorrido secuencial."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"ORGANIZATION IS INDEXED"}),"  ",e.jsx("br",{}),e.jsx(s,{children:"RECORD KEY IS"})," ID-CLIENTE  ",e.jsx("br",{}),e.jsx(s,{children:"ACCESS MODE IS DYNAMIC"}),"  ",e.jsx("br",{})]})]}),Rj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"8.2",children:[e.jsx("h3",{children:"8.2 Tipos de Acceso"}),e.jsx("p",{children:"El modo de acceso define cómo un programa leerá o escribirá registros:"}),e.jsx("h4",{children:"SEQUENTIAL"}),e.jsx("p",{children:"Los registros se leen o escriben uno por uno, en el orden en que están almacenados. Solo se puede ir hacia adelante."}),e.jsx("div",{className:"codigo",children:e.jsx(s,{children:"ACCESS MODE IS SEQUENTIAL"})}),e.jsx("h4",{children:"RANDOM"}),e.jsx("p",{children:"El acceso a registros se hace directamente, sin seguir un orden. Se utiliza con archivos RELATIVE o INDEXED."}),e.jsx("div",{className:"codigo",children:e.jsx(s,{children:"ACCESS MODE IS RANDOM"})}),e.jsx("h4",{children:"DYNAMIC"}),e.jsx("p",{children:"Permite alternar entre acceso secuencial y acceso directo durante la ejecución del programa."}),e.jsx("div",{className:"codigo",children:e.jsx(s,{children:"ACCESS MODE IS DYNAMIC"})}),e.jsx("h4",{children:"Paso a paso para manejo de archivos en COBOL"}),e.jsxs("ol",{children:[e.jsx("li",{children:"Declarar los archivos en FILE-CONTROL (ENVIRONMENT DIVISION)"}),e.jsxs("div",{className:"twoColums",children:[e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"ENVIRONMENT DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"INPUT-OUTPUT SECTION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"FILE-CONTROL"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{})," ",e.jsx(s,{children:"SELECT"})," archivo-logico ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"ASSIGN TO "}),e.jsx(d,{children:"'NOMBRE.ARCHIVO'"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"ORGANIZATION IS"})," ",e.jsx(I,{children:"{SEQUENTIAL | RELATIVE | INDEXED}"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"ACCESS MODE IS"})," ",e.jsx(I,{children:"{SEQUENTIAL | RANDOM | DYNAMIC}"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(s,{children:"OPTIONAL"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(I,{children:"["}),e.jsx(s,{children:"RECORD KEY IS"})," clave-principal",e.jsx(I,{children:"]"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(I,{children:"["}),e.jsx(s,{children:"ALTERNATE RECORD KEY IS"})," clave-secundaria WITH DUPLICATES",e.jsx(I,{children:"]"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(l,{}),e.jsx(I,{children:"["}),e.jsx(s,{children:"RELATIVE KEY IS"})," clave-relativa",e.jsx(I,{children:"]"}),". ",e.jsx("br",{})]}),e.jsx("div",{style:{paddingLeft:"1rem"},children:e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("mark",{children:"ORGANIZATION"}),": tipo de estructura del archivo."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"ACCESS MODE"}),": cómo se accederá a los registros."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"RECORD KEY"}),": clave primaria (para archivos indexados)."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"RELATIVE KEY"}),": para archivos relativos."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"OPTIONAL"}),": Si el archivo NO EXISTE en el sistema El programa no termina con error automáticamente crea el archivo. Para versiones nuevas de Cobol."]})]})})]}),e.jsx("li",{children:"Definir la estructura del archivo en FILE SECTION (DATA DIVISION)"}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"FILE SECTION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"FD"})," archivo-logico. ",e.jsx("br",{}),"01 registro. ",e.jsx("br",{}),"05 campo-1 ",e.jsx(s,{children:"PIC"})," ",e.jsx(I,{children:"..."})," ",e.jsx("br",{}),"05 campo-2 ",e.jsx(s,{children:"PIC"})," ",e.jsx(I,{children:"..."})," ",e.jsx("br",{}),e.jsx(I,{children:"..."})," ",e.jsx("br",{})]}),e.jsx("p",{children:"📌 Para archivos RELATIVE también puede usarse:"}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"RELATIVE KEY IS"})," clave-relativa."]}),e.jsx("p",{children:"📌 Para archivos INDEXADOS:"}),"Se define la clave dentro del registro.",e.jsx("br",{}),e.jsx("br",{})," ",e.jsx("br",{}),e.jsx("li",{children:"Abrir el archivo (PROCEDURE DIVISION)"}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"OPEN"})," ",e.jsx(I,{children:"{INPUT | OUTPUT | I-O | EXTEND}"})," ","archivo-logico"]}),e.jsx("div",{children:e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("mark",{children:"INPUT"}),": solo lectura. Si el archivo no existe producirá un error."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"OUTPUT"}),": solo escritura (crea o sobreescribe). Si el archivo existe lo reescribe. Si no existe el archivo, lo crea."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"I-O"}),": Lectura y escritura (para archivos indexados o relativos). Si el archivo no existe producirá un error."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"EXTEND"}),": Agregar al final (solo secuenciales). Si existe el achivo lo abre. Si no existe el archivo, lo crea. En ambos casos añade los archivos al final."]})]})}),e.jsx("li",{children:"Leer o escribir registros"}),e.jsx("h5",{children:"🟩 Para archivos secuenciales"}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"READ"})," archivo-logico ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(s,{children:"AT END"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(l,{})," ",e.jsx(s,{children:"SET"})," fin-de-archivo ",e.jsx(s,{children:"TO TRUE"})," ",e.jsx("br",{}),e.jsx(s,{children:"END-READ"}),". ",e.jsx("br",{})]}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"WRITE"})," registro."]}),e.jsx("h5",{children:" Para archivos indexados o relativos"}),e.jsx("ul",{children:e.jsx("li",{children:"📖 Lectura"})}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"READ"})," archivo-logico ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(I,{children:"["}),e.jsx(s,{children:"RECORD KEY IS"})," campo-clave",e.jsx(I,{children:"]"})," ",e.jsx("br",{}),e.jsx(l,{})," ",e.jsx(I,{children:"{NEXT | INVALID KEY ...}"})," ",e.jsx("br",{}),e.jsx(s,{children:"END-READ"}),". ",e.jsx("br",{})]}),e.jsx("ul",{children:e.jsx("li",{children:"✍ Escritura"})}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"WRITE"})," registro ",e.jsx("br",{}),e.jsx(I,{children:"["}),e.jsx(s,{children:"INVALID KEY"})," ...",e.jsx(I,{children:"]"}),"."]}),e.jsx("ul",{children:e.jsx("li",{children:"🔁 Reescritura"})}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"REWRITE"})," registro ",e.jsx("br",{}),e.jsx(I,{children:"["}),e.jsx(s,{children:"INVALID KEY"})," ...",e.jsx(I,{children:"]"}),"."]}),e.jsx("ul",{children:e.jsx("li",{children:"❌ Eliminación"})}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"DELETE"})," archivo-logico ",e.jsx("br",{}),e.jsx(I,{children:"["}),e.jsx(s,{children:"INVALID KEY"})," ...",e.jsx(I,{children:"]"}),"."]})," ",e.jsx("br",{}),e.jsx("br",{}),e.jsx("li",{children:"Cerrar el archivo"}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"CLOSE"})," archivo-logico."]})]})]}),Uj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"8.3",children:[e.jsx("h3",{children:"8.3 QSAM, VSAM, ESDS, KSDS, RRDS"}),e.jsx("p",{children:"Estas son organizaciones físicas utilizadas en sistemas z/OS (mainframe):"}),e.jsx("h4",{children:"QSAM (Queued Sequential Access Method)"}),e.jsx("p",{children:"Método secuencial estándar para archivos. Se usa para archivos de texto o binarios secuenciales. Es transparente al programador COBOL."}),e.jsx("h4",{children:"VSAM (Virtual Storage Access Method)"}),e.jsx("p",{children:"Método avanzado para el manejo de archivos indexados o relativos."}),e.jsx("p",{children:"Definidos como Virtual Storage Access Method, es un tipo de fichero que trata de mejorar lo que se hace con los ficheros secuenciales y el cual soporta que se tenga un mayor número de registros, y que estos de igual forma puedan ser procesados en un tiempo más óptimo y con un acceso más eficaz. Estos archivos se caracterizan por tener una llave (clave) de acceso a cada uno de los registros lo cual permite que se tenga un mejor acceso a los archivos,"}),e.jsx("h5",{children:"Clúster VSAM"}),"Los conjuntos de datos lógicos para almacenar registros se conocen como clústeres. Simplemente una asociación del índice, un conjunto de secuencias, un conjunto de datos. El espacio ocupado por un clúster VSAM se divide en áreas contiguas denominadas Intervalos de control (según se explica más abajo). Hay dos componentes principales en un clúster VSAM:"," ",e.jsx("br",{}),e.jsxs("li",{children:[e.jsx("mark",{children:"Index"})," contiene la parte del índice. Los registros de índice están presentes en el componente de índice. El uso del componente de índice VSAM puede recuperar registros del componente de datos."]}),e.jsxs("li",{children:[e.jsx("mark",{children:"Data"})," contiene la parte de datos. Los registros de datos reales están presentes en el componente de datos."]}),e.jsx("br",{}),"Siempre se advertirá sobre ambas zonas bien delimitadas que duplican el espacio de almacenamiento:",e.jsx("li",{children:"área de datos: contiene los registros almacenados según orden de ingreso"}),e.jsx("li",{children:"área de índice: contiene los mismos registros del área anterior pero ordenados según clave"}),"de acceso.",e.jsx("h5",{children:"Intervalo de control"}),"Los intervalos de control (CI) en VSAM son equivalentes a bloques para conjuntos de datos que no son VSAM. En los métodos que no son VSAM, la unidad de datos la define el bloque. Este concepto es la cantidad de registros físicos que contiene un registro lógico ante cada READ en código COBOL. VSAM trabaja con el área de datos lógicos que se conoce como Intervalos de control. En este caso ante cada READ en código COBOL, queda disponible un intervalo de control o área de datos lógicos. Los intervalos de control son la unidad más pequeña de transferencia entre un disco y el sistema operativo. Siempre que se recupera un registro directamente del almacenamiento, todo el CI que contiene el registro se lee en el búfer de entrada y salida de VSAM. Luego, el registro deseado se transfiere al área de trabajo desde el búfer VSAM. El intervalo de control consta de: ",e.jsx("br",{}),e.jsx("li",{children:"Registros lógicos"}),e.jsx("li",{children:"Campos de información de control"}),e.jsx("li",{children:"Espacio libre"}),"Cuando se carga un conjunto de datos VSAM, se crean intervalos de control. El tamaño del intervalo de control predeterminado es de 4 KB y(1 página de memoria Mainframe) y puede extenderse hasta 32 KB.",e.jsx("br",{})," ",e.jsx("br",{}),e.jsxs("p",{children:[e.jsx("u",{children:"Tipos de archivos VSAM"}),":"]}),e.jsx("h5",{children:"ESDS (Entry-Sequenced Data Set)"}),"Similar a archivos secuenciales, pero con capacidades extendidas. Se trata de un fichero VSAM, equivalente al clásico Fichero Secuencial. no está indexado. Las claves no están presentes en el conjunto de datos ESDS, por lo que pueden contener registros duplicados. ESDS se puede utilizar en programas COBOL como cualquier otro archivo. Dentro del JCL especificaremos el nombre del archivo y podemos utilizarlo para procesarlo dentro del programa. En el programa COBOL, se especifica: ",e.jsx("br",{}),e.jsx("li",{children:"organización de archivo Sequential"}),e.jsx("li",{children:"modo de acceso Sequential"}),e.jsx("h5",{children:"KSDS (Key-Sequenced Data Set)"}),"Archivo indexado, permite acceso por clave y secuencial. Emplea dos subficheros para el tratamiento de los datos. Uno para el almacenamiento de los índices, y otro para la información (Registros de datos) asociada a cada índice. conjunto de datos secuenciados caracterizados por una clave. KSDS; es el más útil y versátil de este tipo de almacenamiento. En el programa COBOL, se especifica: ",e.jsx("br",{}),e.jsx("li",{children:"organización de archivo INDEXED"}),e.jsx("li",{children:"modo de acceso SEQUENTIAL/RANDOM/DYNAMIC"})," ",e.jsx("br",{}),e.jsx("u",{children:"El clúster de KSDS consta de dos componentes"}),": ",e.jsx("br",{}),e.jsx("strong",{children:"INDICE"}),": El componente de índice del clúster KSDS contiene la lista de valores clave para los registros en el clúster con punteros a los registros correspondientes en el componente de datos. El componente de índice se refiere a la dirección física de un registro KSDS. Esto relaciona la clave de cada registro con la ubicación relativa del registro en el conjunto de datos. Cuando se agrega o elimina un registro, este índice se actualiza en consecuencia. ",e.jsx("br",{})," ",e.jsx("br",{}),e.jsx("strong",{children:"DATA"}),": El componente de datos del clúster KSDS contiene los datos reales. Cada registro en el componente de datos de un clúster KSDS contiene un campo clave con el mismo número de caracteres y ocurre en la misma posición relativa en cada registro.",e.jsx("br",{}),e.jsx("br",{}),e.jsxs("p",{children:[e.jsx("u",{children:"Características de un archivo VSAM KSDS"}),":"]}),e.jsx("li",{children:"Los registros siempre se mantienen ordenados por campo clave."}),e.jsx("li",{children:"Los registros se almacenan en orden ascendente."}),e.jsx("li",{children:"Se puede acceder a los registros de forma secuencial o directa."}),e.jsx("li",{children:"Los registros se identifican mediante una clave."}),e.jsx("li",{children:"La clave de cada registro es un campo en una posición predefinida dentro del registro."}),e.jsx("li",{children:"Cada clave debe ser única en el conjunto de datos de KSDS."}),e.jsx("li",{children:"Cuando se insertan nuevos registros, el orden lógico de los registros depende de la secuencia de clasificación del campo clave."}),e.jsx("li",{children:"La longitud de los registros puede ser fija o variable."}),e.jsx("li",{children:"Se puede utilizar en código COBOL como cualquier otro archivo."}),e.jsx("br",{}),e.jsxs("p",{children:[e.jsx("u",{children:"Estructura de un archivo VSAM KSDS"}),":"]}),"Para buscar un registro, se debe armar un valor de clave único. El valor clave se busca en el componente de índice. Una vez que se encuentra la clave, se recupera la dirección de memoria correspondiente que se refiere al componente de datos. A partir de la dirección de la memoria podemos obtener los datos reales que se almacenan en el componente de datos.",e.jsx("br",{}),e.jsx("h5",{children:"RRDS (Relative Record Data Set) "}),"Cada registro tiene una posición numérica fija (como RELATIVE). Se trata del VSAM más eficiente. Se asigna un número relativo a cada registro, que es el que se usará para recuperar la información. Obviamente, si dicha asignación no se actualiza correctamente cada vez que borramos registros del fichero, entonces irán quedando espacios de memoria sin uso y el acceso será cada vez menos eficiente.",e.jsx("h5",{children:"Linear Data Set (LDS) "}),e.jsx("p",{children:"Este tipo de fichero se emplea para almacenar los TABLESPACE de las bases de datos DB2."}),e.jsx("br",{}),e.jsx("p",{children:"📌 COBOL accede a archivos VSAM mediante ORGANIZATION IS INDEXED y declarando claves."}),e.jsx("br",{}),e.jsx("p",{children:"Puede ser raro que veas un desarrollo hecho en archivos VSAM. Esto debido a que cuando se implementó no se tenían bien especificadas las reglas de las bases de datos relacionales dentro del DB2, pero ahora se ha vuelto una práctica más usual que se utilicen las bases de datos relacionales con los archivos secuenciales. O que en casos muy especiales se utilicen desarrollos con archivos VSAM."}),e.jsx("br",{}),e.jsxs("p",{children:[e.jsx("u",{children:"ventajas/ desventajas que tienen estos archivos"}),":"]}),e.jsx("li",{children:"Estos archivos pueden ser de una longitud fija o variable"}),e.jsx("li",{children:"Están organizados en bloques de tamaño fijo llamados intervalos de control (IC) y a su vez en divisiones más grandes llamadas Áreas de Control (AC)"}),e.jsx("li",{children:"El tamaño de los intervalos se miden en bytes"}),e.jsx("li",{children:"Las áreas de control se miden en número de pistas o cilindros de disco."}),e.jsx("p",{children:"La manipulación de ficheros VSAM (“borrar” y “definir”) se realiza normalmente a través de la utilidad de IDCAMS. Los programas propios pueden acceder a ficheros VSAM mediante sentencias de “data definition” (DD) en los JCL o en las regiones online de CICS. DB2 está implementado sobre ficheros VSAM usando su estructura de datos."})]}),zj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"8.4",children:[e.jsx("h3",{children:"8.4 PDS (Partitioned Data Set)"}),e.jsx("p",{children:"Un PDS es un archivo contenedor que almacena varios miembros o subarchivos, como si fueran carpetas con archivos individuales."}),e.jsx("p",{children:"🗂️ Comúnmente se usa para:"}),e.jsx("li",{children:"Almacenar programas fuente COBOL."}),e.jsx("li",{children:"Almacenar JCL (Job Control Language)."}),e.jsx("li",{children:"Almacenar COPYBOOKS."}),e.jsxs("div",{className:"codigo",children:["//COPYLIB ",e.jsx(s,{children:"DD"})," DSN=MI.LIBRERIA.COPYBOOKS,DISP=SHR"]}),e.jsx("p",{children:"Cada miembro dentro de un PDS puede accederse por nombre: MIEMBRO1, MIEMBRO2, etc."})]}),Bj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"8.5",children:[e.jsx("h3",{children:"8.5 Archivos PLANOS"}),e.jsx("p",{children:"Un archivo plano (flat file) es un archivo secuencial sin índices ni estructuras complejas. Son utilizados para intercambiar datos con otros sistemas o como entrada/salida básica."}),e.jsxs("li",{children:[e.jsx("u",{children:"Organización"}),": ",e.jsx("mark",{children:"SEQUENTIAL"})]}),e.jsxs("li",{children:[e.jsx("u",{children:"Acceso"}),": ",e.jsx("mark",{children:"SEQUENTIAL"})]}),e.jsxs("li",{children:[e.jsx("u",{children:"Medio común"}),": archivo ",e.jsx("mark",{children:".txt"})," o ",e.jsx("mark",{children:".dat"})," en entornos Windows/Linux o datasets secuenciales en mainframes."]}),e.jsx("br",{}),"📌 Ejemplo de asignación en COBOL:",e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"SELECT"})," ARCHIVO-ENTRADA ",e.jsx(s,{children:"ASSIGN TO"})," ",e.jsx(d,{children:"'DATOS.TXT'"})," ",e.jsx("br",{}),e.jsx(s,{children:"ORGANIZATION IS SEQUENTIAL"})," ",e.jsx("br",{}),e.jsx(s,{children:"ACCESS MODE IS SEQUENTIAL"})," ",e.jsx("br",{}),e.jsx(s,{children:"FILE STATUS IS FS"}),". ",e.jsx("br",{})]}),e.jsx("hr",{})]}),Vj=()=>e.jsxs("article",{id:"modulo-8",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:" Módulo 8: Archivos en COBOL"}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsx(Mj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(Rj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(Uj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(zj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(Bj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z})]}),Fj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"9.1",children:[e.jsx("h3",{children:"9.1. Principios de Programación Estructurada en COBOL"}),e.jsx("p",{children:'Claro, a continuación, desarrollaré el punto 9.1: "Principios de Programación Estructurada" en un curso de COBOL. 9.1. Principios de Programación Estructurada en COBOL La programación estructurada es un enfoque de diseño de software que se centra en la organización lógica y clara del código. Aunque COBOL es conocido por su estilo de programación basado en divisiones (Divisiones de Identificación, Medio Ambiente, Datos y Procedimientos), muchos de los principios de programación estructurada pueden aplicarse al escribir programas COBOL. Aquí hay algunos principios clave de la programación estructurada que se pueden aplicar en COBOL:'}),e.jsx("h4",{children:"1. Descomposición Modular"}),e.jsx("p",{children:"La descomposición modular implica dividir un programa en módulos o subrutinas más pequeñas. En COBOL, esto se logra mediante la creación de secciones de código reutilizables utilizando la cláusula PERFORM. Cada subrutina debe tener una tarea clara y específica, lo que facilita la comprensión y el mantenimiento del código."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PERFORM"})," Inicializar-Datos ",e.jsx("br",{}),e.jsx(s,{children:"PERFORM"})," Procesar-Datos ",e.jsx("br",{}),e.jsx(s,{children:"PERFORM"})," Mostrar-Resultados"]}),e.jsx("h4",{children:"2. Secuencia y Control de Flujo"}),e.jsx("p",{children:"En COBOL, el control de flujo se gestiona mediante estructuras de control como IF, PERFORM, EVALUATE, y GO TO. La programación estructurada fomenta el uso de estructuras de control claras y evita el uso excesivo de GO TO, lo que facilita la lectura y comprensión del código."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"IF "}),"Saldo ","<"," 0 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Saldo negativo'"})," ",e.jsx("br",{}),e.jsx(s,{children:"ELSE"})," ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"DISPLAY "}),e.jsx(d,{children:"'Saldo positivo'"})," ",e.jsx("br",{}),e.jsx(s,{children:"END-IF"}),"."]}),e.jsx("h4",{children:"3. Abstracción de Datos"}),e.jsx("p",{children:"La abstracción de datos se refiere a la encapsulación de datos y funciones en módulos o subrutinas, lo que oculta los detalles internos y simplifica su uso. En COBOL, esto se logra mediante el uso de variables locales y parámetros en las subrutinas, lo que evita la exposición innecesaria de datos."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PERFORM"})," Calcular-Interes (Capital, TasaInteres, Tiempo)"]}),e.jsx("h4",{children:"4. Evitar Estructuras de Control Anidadas en Exceso"}),e.jsx("p",{children:"La anidación excesiva de estructuras de control, como bucles dentro de bucles, puede hacer que el código sea difícil de entender. En COBOL, es importante limitar la anidación excesiva y dividir las tareas en subrutinas si es necesario"}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PERFORM UNTIL"})," Contador ",">"," 10 ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," Dentro-Del-Bucle ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"ADD"})," 1 ",e.jsx(s,{children:"TO"})," Contador ",e.jsx("br",{}),e.jsx(s,{children:"END-PERFORM"}),"."]}),e.jsx("h4",{children:"5. Comentarios Significativos"}),e.jsx("p",{children:"La programación estructurada enfatiza la importancia de proporcionar comentarios significativos en el código para explicar la lógica y el propósito de las secciones de código. Los comentarios ayudan a otros programadores a comprender el código más rápidamente."}),e.jsxs("div",{className:"codigo",children:["* Este programa calcula el interés simple. ",e.jsx("br",{}),e.jsx(s,{children:"IDENTIFICATION DIVISION"}),"."]}),e.jsx("h4",{children:"6. Pruebas Unitarias"}),e.jsx("p",{children:"La programación estructurada promueve la realización de pruebas unitarias para cada módulo o subrutina por separado. En COBOL, puedes desarrollar casos de prueba específicos para cada subrutina y verificar su funcionamiento antes de la integración."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PERFORM"})," Test-Calcular-Interes"]}),e.jsx("h4",{children:"7. Reutilización de Código"}),e.jsx("p",{children:"La reutilización de código es un principio fundamental en la programación estructurada. En COBOL, puedes definir subrutinas que realicen tareas específicas y reutilizarlas en diferentes partes del programa."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"PERFORM"})," Calcular-Interes ",e.jsx("br",{}),e.jsx(s,{children:"PERFORM"})," Calcular-Amortización"]}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"La aplicación de principios de programación estructurada en COBOL conlleva a la escritura de código más limpio, organizado y mantenible. Al dividir un programa en módulos, utilizar estructuras de control efectivas y proporcionar comentarios significativos, los programadores pueden escribir código COBOL que sea más fácil de comprender y mantener a lo largo del tiempo. Esto es esencial para el desarrollo y mantenimiento de aplicaciones empresariales en COBOL."})]}),qj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsx("section",{id:"9.2"}),kj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"9.3",children:[e.jsx("p",{children:"falta data"}),e.jsx("hr",{})]}),wj=()=>e.jsxs("article",{id:"modulo-9",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:" Módulo 9: Mejores Prácticas y Estilo de Codificación"}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsx(Fj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(qj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(kj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z})]}),Gj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"10.1",children:[e.jsx("h3",{children:"10.1. Integración de COBOL con Otros Lenguajes"}),e.jsx("p",{children:"La integración de COBOL con otros lenguajes es una práctica común en el desarrollo de software empresarial y sistemas legados. Puede ser necesario utilizar varios lenguajes para aprovechar las ventajas de diferentes tecnologías o para modernizar aplicaciones COBOL. A continuación, exploraremos cómo es posible integrar COBOL con otros lenguajes de programación."}),e.jsx("h4",{children:"1. Llamadas a Subrutinas Externas"}),e.jsx("p",{children:"Una forma común de integrar COBOL con otros lenguajes es a través de llamadas a subrutinas externas. Puedes escribir funciones o módulos en otro lenguaje (como C, C++, Java, o Python) y luego llamar a estas subrutinas desde un programa COBOL. La comunicación entre COBOL y el lenguaje externo se realiza a través de convenciones de llamada, como C o el estándar de llamada externa de COBOL."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"CALL"})," ",e.jsx(d,{children:"'C_FUNCTION'"})," ",e.jsx(s,{children:"USING "})," Argumentos."]}),e.jsx("h4",{children:"2. Uso de Bibliotecas Compartidas (DLL, SO)"}),e.jsx("p",{children:"Otra técnica de integración es utilizar bibliotecas compartidas (también conocidas como DLL en Windows o SO en Linux) que contienen código escrito en otro lenguaje. Puedes cargar y ejecutar estas bibliotecas desde un programa COBOL. Esto permite aprovechar las capacidades de otros lenguajes sin necesidad de reescribir todo el programa."}),e.jsx("h4",{children:"3. Interfaz de Paso de Datos"}),e.jsx("p",{children:"En la integración de COBOL con otros lenguajes, es esencial establecer una interfaz de paso de datos efectiva. Esto implica definir cómo se pasan los datos entre COBOL y el lenguaje externo. Los datos deben ser traducidos adecuadamente entre los formatos utilizados en ambos lenguajes."}),e.jsx("h4",{children:"4. Acceso a Bases de Datos"}),e.jsx("p",{children:"COBOL se utiliza a menudo en aplicaciones empresariales que requieren acceso a bases de datos. Puedes utilizar lenguajes de consulta como SQL para interactuar con bases de datos desde un programa COBOL. Esto se logra mediante la ejecución de instrucciones SQL directamente en el código COBOL o llamando a subrutinas que ejecutan consultas SQL."}),e.jsx("h4",{children:"5. Web Services y APIs"}),e.jsx("p",{children:"Para la integración con aplicaciones web y servicios externos, COBOL puede comunicarse con ellos a través de Web Services y APIs. Puedes utilizar herramientas y bibliotecas que permiten a COBOL actuar como un cliente o servidor en arquitecturas basadas en servicios web."}),e.jsx("h4",{children:"6. Migración y Modernización"}),e.jsx("p",{children:"En algunos casos, la integración de COBOL con otros lenguajes puede ser parte de un proceso de migración o modernización de sistemas heredados. Esto implica la reescritura de componentes de una aplicación en un lenguaje más moderno mientras se mantiene la funcionalidad existente en COBOL."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"La integración de COBOL con otros lenguajes es una práctica común en el desarrollo de aplicaciones empresariales y sistemas legados. Permite aprovechar las capacidades de diferentes tecnologías y modernizar aplicaciones existentes. Para lograr una integración efectiva, es fundamental definir interfaces de comunicación claras, establecer convenciones de llamada y gestionar la traducción de datos entre COBOL y otros lenguajes. Esta flexibilidad es esencial para garantizar que las aplicaciones COBOL sigan siendo relevantes en el entorno tecnológico actual."})]}),Yj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"9.2",children:[e.jsx("h3",{children:"10.2. Modernización de Aplicaciones COBOL"}),e.jsx("p",{children:"La modernización de aplicaciones COBOL es un proceso que busca actualizar y mejorar aplicaciones empresariales heredadas escritas en COBOL. Este proceso es necesario para mantener la relevancia de las aplicaciones en un entorno tecnológico en constante evolución. Aquí se describen algunas estrategias y enfoques comunes para modernizar aplicaciones COBOL:"}),e.jsx("h4",{children:"1. Reingeniería de Aplicaciones"}),e.jsx("p",{children:"La reingeniería de aplicaciones implica reescribir o refactorizar partes significativas de una aplicación COBOL utilizando tecnologías más modernas. Esto puede incluir la conversión de módulos COBOL a lenguajes más modernos como Java o C#. La reingeniería también puede implicar la actualización de la interfaz de usuario, la lógica empresarial y la infraestructura subyacente."}),e.jsx("h4",{children:"2. Servicios Web y API"}),e.jsx("p",{children:"La exposición de funcionalidades de aplicaciones COBOL a través de servicios web y APIs permite la integración con sistemas modernos y aplicaciones basadas en la web. Los servicios web pueden exponer la funcionalidad de COBOL como servicios accesibles a través de HTTP, lo que facilita la integración con aplicaciones más recientes."}),e.jsx("h4",{children:"3. Virtualización y Contenedores"}),e.jsx("p",{children:"La virtualización y la contenerización permiten ejecutar aplicaciones COBOL en entornos más modernos y escalables. Las aplicaciones COBOL pueden empaquetarse en contenedores Docker, lo que facilita la implementación y la administración en entornos basados en la nube o en servidores virtuales."}),e.jsx("h4",{children:"4. Interfaz de Usuario Moderna"}),e.jsx("p",{children:"La modernización de la interfaz de usuario es fundamental para mantener la usabilidad de las aplicaciones COBOL. Puedes actualizar la interfaz de usuario utilizando tecnologías web, lo que facilita el acceso a través de navegadores y dispositivos móviles."}),e.jsx("h4",{children:"5. Migración de Plataforma"}),e.jsx("p",{children:"Migrar aplicaciones COBOL a una plataforma más moderna es una estrategia común. Esto puede implicar la migración de sistemas heredados a servidores más nuevos, sistemas operativos actualizados o bases de datos más modernas."}),e.jsx("h4",{children:"6. Automatización de Pruebas"}),e.jsx("p",{children:"La modernización también puede implicar la automatización de pruebas para garantizar la calidad del software. Las pruebas automatizadas pueden ayudar a detectar problemas y errores de manera eficiente a medida que se realizan cambios en la aplicación."}),e.jsx("h4",{children:"7. Mantenimiento y Mejora Continua"}),e.jsx("p",{children:"La modernización no es un proceso único, sino un compromiso continuo con la mejora. A medida que la tecnología y los requisitos empresariales evolucionan, es esencial mantener y mejorar las aplicaciones COBOL de manera constante."}),e.jsx("h4",{children:"8. Reentrenamiento de Personal"}),e.jsx("p",{children:"A medida que se modernizan las aplicaciones COBOL, es importante proporcionar capacitación a los desarrolladores y personal de TI para que estén al tanto de las nuevas tecnologías y enfoques utilizados en la modernización."}),e.jsx("h4",{children:"Conclusión"}),e.jsxs("p",{children:["La modernización de aplicaciones COBOL es un proceso crítico para garantizar que las aplicaciones empresariales heredadas sigan siendo relevantes en un entorno tecnológico en constante evolución. Los enfoques mencionados anteriormente pueden ayudar a mejorar la usabilidad, la escalabilidad y la eficiencia de las aplicaciones COBOL, al tiempo que permiten la integración con sistemas más modernos. La modernización es esencial para garantizar la longevidad y la funcionalidad de las aplicaciones"," "]})]}),_j=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"10.3",children:[e.jsx("h3",{children:"10.3. Migración a Plataformas Modernas"}),e.jsx("p",{children:"La migración de aplicaciones COBOL a plataformas modernas es una estrategia clave para mantener la funcionalidad y la relevancia de sistemas heredados en un entorno tecnológico en constante evolución. La migración implica trasladar aplicaciones COBOL desde plataformas legadas a entornos más modernos y eficientes. Aquí se describen algunos enfoques comunes para llevar a cabo esta migración:"}),e.jsx("h4",{children:"1. Replataformización"}),e.jsx("p",{children:"La replataformización implica migrar aplicaciones COBOL a hardware más moderno o a sistemas operativos más actuales. Esto puede implicar la reescritura de partes del código para adaptarse a las diferencias de plataforma, como la administración de archivos y la gestión de recursos."}),e.jsx("h4",{children:"2. Virtualización y Contenerización"}),e.jsx("p",{children:"La virtualización y la contenerización permiten ejecutar aplicaciones COBOL en entornos modernos. Puedes empaquetar aplicaciones COBOL en contenedores Docker y ejecutarlos en servidores virtualizados o en la nube. Esto facilita la escalabilidad y la administración."}),e.jsx("h4",{children:"3. Reescritura en un Lenguaje Moderno"}),e.jsx("p",{children:"Una estrategia más radical es reescribir completamente la aplicación COBOL en un lenguaje de programación más moderno, como Java, C# o Python. Esto implica analizar la lógica empresarial existente y reescribirla en un lenguaje más actual."}),e.jsx("h4",{children:"4. Servicios Web y Microservicios"}),e.jsx("p",{children:"Otro enfoque es exponer la funcionalidad de la aplicación COBOL a través de servicios web y microservicios. Esto permite que las aplicaciones COBOL interactúen con sistemas modernos y aplicaciones basadas en la web."}),e.jsx("h4",{children:"5. Actualización de Bases de Datos"}),e.jsx("p",{children:"Las aplicaciones COBOL a menudo se integran con bases de datos legadas. La migración puede incluir la actualización de estas bases de datos a sistemas de gestión de bases de datos (DBMS) más modernos, como Oracle, SQL Server o PostgreSQL."}),e.jsx("h4",{children:"6. Migración de Datos"}),e.jsx("p",{children:"La migración de datos es fundamental en el proceso de migración. Debes asegurarte de que los datos existentes se transfieran de manera segura y sin errores a la nueva plataforma o sistema de bases de datos."}),e.jsx("h4",{children:"7. Pruebas Rigurosas"}),e.jsx("p",{children:"La migración a plataformas modernas debe ir acompañada de pruebas rigurosas. Debes verificar que la funcionalidad de la aplicación COBOL se mantenga en la nueva plataforma y que no se hayan introducido errores."}),e.jsx("h4",{children:"8. Capacitación del Personal"}),e.jsx("p",{children:"Es importante proporcionar capacitación al personal para que esté familiarizado con la nueva plataforma, las herramientas y los lenguajes utilizados en la migración."}),e.jsx("h4",{children:"9. Planificación y Evaluación Continua"}),e.jsx("p",{children:"La migración es un proceso complejo y requiere una planificación cuidadosa. La evaluación continua y la retroalimentación son esenciales para garantizar el éxito de la migración."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"La migración de aplicaciones COBOL a plataformas modernas es una estrategia clave para mantener la funcionalidad y la relevancia de los sistemas heredados. La elección del enfoque de migración depende de diversos factores, como la complejidad de la aplicación, los recursos disponibles y los objetivos comerciales. La migración exitosa requiere una planificación meticulosa, pruebas rigurosas y capacitación del personal. La modernización de aplicaciones COBOL es esencial para garantizar la continuidad de los sistemas empresariales en un entorno tecnológico en constante cambio."}),e.jsx("hr",{})]}),Hj=()=>e.jsxs("article",{id:"modulo-10",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:" Módulo 10: Integración y Modernización de COBOL"}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsx(Gj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(Yj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(_j,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z})]}),Wj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"11.1",children:[e.jsx("h3",{children:"11.1. Desarrollo de Aplicaciones Empresariales en COBOL"}),e.jsx("p",{children:"COBOL es un lenguaje de programación ampliamente utilizado en el desarrollo de aplicaciones empresariales. Su estructura, orientación a los datos y capacidades de procesamiento por lotes lo convierten en una elección sólida para aplicaciones comerciales. A continuación, se describen algunos aspectos clave del desarrollo de aplicaciones empresariales en COBOL:"}),e.jsx("h4",{children:"1. Estructura Modular"}),e.jsx("p",{children:"Las aplicaciones empresariales suelen ser grandes y complejas. COBOL facilita la organización de código en módulos reutilizables. Las Divisiones y Secciones de COBOL permiten una estructura lógica que separa la lógica empresarial de la presentación y la gestión de datos. Esto facilita la colaboración en equipos y el mantenimiento a largo plazo."}),e.jsxs("div",{className:"codigo",children:[e.jsx(s,{children:"IDENTIFICATION DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"PROGRAM-ID"}),". MiAplicacion. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"DATA DIVISION"}),". ",e.jsx("br",{}),e.jsx(s,{children:"WORKING-STORAGE SECTION"}),". ",e.jsx("br",{}),"01 Datos-Cliente. ",e.jsx("br",{}),e.jsx(l,{}),"05 Nombre",e.jsx(s,{children:" PIC "}),"X(50). ",e.jsx("br",{}),e.jsx(l,{}),"05 Edad",e.jsx(s,{children:" PIC "}),"9(3). ",e.jsx("br",{}),e.jsx("br",{}),e.jsx(s,{children:"PROCEDURE DIVISION"}),". ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," Procesar-Datos ",e.jsx("br",{}),e.jsx(l,{}),e.jsx(s,{children:"PERFORM"})," Generar-Reporte ",e.jsx("br",{}),"..."]}),e.jsx("h4",{children:"2. Procesamiento por Lotes y Transaccional"}),e.jsx("p",{children:"COBOL es adecuado para aplicaciones por lotes y transaccionales. Puedes crear programas que procesen grandes volúmenes de datos por lotes, como la facturación mensual, o aplicaciones que gestionen transacciones individuales, como la administración de cuentas bancarias. La estructura modular de COBOL facilita la gestión de flujos de trabajo complejos."}),e.jsx("h4",{children:"3. Manipulación de Datos"}),e.jsx("p",{children:"Las aplicaciones empresariales requieren una gestión sólida de datos. COBOL proporciona una amplia gama de tipos de datos y estructuras de datos, lo que facilita la manipulación de información compleja. Puedes trabajar con archivos secuenciales, bases de datos relacionales, archivos indexados y otros sistemas de almacenamiento de datos."}),e.jsx("h4",{children:"4. Interfaz de Usuario"}),e.jsx("p",{children:"Si bien COBOL es fuerte en el procesamiento de datos, puede interactuar con interfaces de usuario modernas. Puedes desarrollar interfaces de usuario basadas en texto o integrar aplicaciones COBOL con interfaces de usuario web y móviles utilizando tecnologías como HTML, CSS y JavaScript."}),e.jsx("h4",{children:"5. Seguridad y Regulación"}),e.jsx("p",{children:"Las aplicaciones empresariales a menudo deben cumplir con regulaciones y estándares de seguridad estrictos. COBOL permite implementar políticas de seguridad, auditoría y control de acceso a los datos. Es esencial mantener registros precisos y asegurarse de que los datos confidenciales estén protegidos."}),e.jsx("h4",{children:"6. Gestión de Transacciones"}),e.jsx("p",{children:"En muchas aplicaciones empresariales, la gestión de transacciones es fundamental. COBOL admite la definición y control de transacciones, lo que garantiza la integridad de los datos y permite realizar operaciones atómicas."}),e.jsx("h4",{children:"7. Mantenimiento a Largo Plazo"}),e.jsx("p",{children:"El mantenimiento a largo plazo es una consideración clave en el desarrollo de aplicaciones empresariales. COBOL es conocido por su estabilidad y longevidad. El código COBOL desarrollado hace décadas todavía se utiliza en muchas organizaciones. La estructura modular y la documentación adecuada son fundamentales para facilitar el mantenimiento continuo."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"COBOL sigue siendo una elección sólida para el desarrollo de aplicaciones empresariales, especialmente en industrias como la banca, seguros y administración de bases de datos. Su estructura modular, capacidades de procesamiento por lotes y transaccional, y la facilidad de manipulación de datos lo hacen adecuado para aplicaciones que requieren un alto rendimiento y confiabilidad. A pesar de su longevidad, COBOL se ha adaptado a las demandas de la empresa moderna, lo que lo convierte en una herramienta valiosa en el mundo empresarial actual."})]}),Xj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"11.2",children:[e.jsx("h3",{children:"11.2. Proyectos de Procesamiento de Datos Masivos en COBOL"}),e.jsx("p",{children:"El procesamiento de datos masivos se ha vuelto esencial en el mundo empresarial actual, ya que las organizaciones generan y gestionan grandes volúmenes de datos. COBOL, a pesar de su antigüedad, sigue siendo una elección sólida para proyectos de procesamiento de datos masivos debido a su eficiencia y capacidad de manejar grandes conjuntos de datos. A continuación, se describen algunos aspectos clave de los proyectos de procesamiento de datos masivos en COBOL:"}),e.jsx("h4",{children:"1. Manejo de Grandes Volúmenes de Datos"}),e.jsx("p",{children:"COBOL es conocido por su capacidad para manejar grandes volúmenes de datos. Esto es fundamental en proyectos que implican la recopilación, procesamiento y almacenamiento de cantidades masivas de información, como la gestión de datos de clientes, registros financieros o datos de sensores."}),e.jsx("h4",{children:"2. Procesamiento por Lotes"}),e.jsx("p",{children:"Muchos proyectos de procesamiento de datos masivos implican el procesamiento por lotes, donde se recopilan, procesan y almacenan datos en bloques. COBOL se destaca en esta área, ya que su estructura modular facilita la creación de programas de procesamiento por lotes eficientes."}),e.jsx("h4",{children:"3. Manipulación de Archivos Secuenciales y Bases de Datos"}),e.jsx("p",{children:"COBOL es compatible con la manipulación de archivos secuenciales, que es una parte fundamental de muchos proyectos de procesamiento de datos masivos. Además, COBOL puede interactuar con sistemas de bases de datos relacionales, lo que facilita la gestión de datos estructurados."}),e.jsx("h4",{children:"4. Escalabilidad"}),e.jsx("p",{children:"COBOL puede escalar para manejar proyectos que crecen con el tiempo. Esto es fundamental en proyectos que requieren la expansión de infraestructuras de procesamiento de datos para acomodar mayores volúmenes de información."}),e.jsx("h4",{children:"5. Integración con Otros Sistemas"}),e.jsx("p",{children:"En proyectos de procesamiento de datos masivos, es común que COBOL interactúe con otros sistemas y tecnologías. Puedes integrar aplicaciones COBOL con sistemas de almacenamiento en la nube, bases de datos distribuidas y sistemas de procesamiento en tiempo real."}),e.jsx("h4",{children:"6. Optimización de Rendimiento"}),e.jsx("p",{children:"COBOL permite realizar optimizaciones de rendimiento específicas para proyectos de procesamiento de datos masivos. Puedes ajustar el código y las estructuras de datos para garantizar un rendimiento óptimo, incluso en aplicaciones que manejan grandes cantidades de información."}),e.jsx("h4",{children:"7. Mantenimiento a Largo Plazo"}),e.jsx("p",{children:"La longevidad de COBOL es un activo importante en proyectos de procesamiento de datos masivos, ya que estos proyectos a menudo tienen un ciclo de vida prolongado. La estructura modular y la documentación adecuada facilitan el mantenimiento a largo plazo."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"COBOL sigue siendo una opción sólida para proyectos de procesamiento de datos masivos, especialmente en industrias que generan grandes volúmenes de información, como las finanzas, seguros, logística y salud. Su capacidad para manejar grandes conjuntos de datos, su eficiencia en el procesamiento por lotes y su longevidad lo hacen valioso en entornos donde la precisión y el rendimiento son fundamentales. COBOL ha evolucionado para adaptarse a las demandas de proyectos de procesamiento de datos masivos en la empresa moderna."})]}),Kj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"11.3",children:[e.jsx("h3",{children:"11.3. Casos de Estudio y Ejemplos Reales en COBOL"}),e.jsx("p",{children:"Para comprender mejor cómo COBOL se utiliza en aplicaciones empresariales y proyectos de procesamiento de datos masivos, es útil revisar algunos casos de estudio y ejemplos reales. A continuación, se presentan dos ejemplos que ilustran cómo COBOL sigue siendo relevante en el mundo empresarial actual:"}),e.jsx("h4",{children:"1. Banca y Finanzas"}),e.jsx("p",{children:"La industria financiera es un ámbito en el que COBOL ha desempeñado un papel fundamental durante décadas. Muchos sistemas bancarios y financieros utilizan aplicaciones COBOL para procesar transacciones, gestionar cuentas y generar informes financieros. Estas aplicaciones manejan grandes volúmenes de datos y requieren una alta precisión y rendimiento."}),e.jsxs("p",{children:[e.jsx("strong",{children:"Ejemplo: "}),"Un banco utiliza un sistema COBOL para gestionar las transacciones de sus clientes. El sistema procesa millones de transacciones diarias, mantiene registros de cuentas y genera estados de cuenta mensuales. COBOL garantiza que las transacciones sean precisas y se procesen de manera eficiente, lo que es esencial para la confianza de los clientes y el cumplimiento de las regulaciones financieras."]}),e.jsx("h4",{children:"2. Sector de Seguros"}),e.jsx("p",{children:"La industria de seguros es otra área donde COBOL es ampliamente utilizado. Las compañías de seguros dependen de aplicaciones COBOL para administrar pólizas, calcular primas, procesar reclamaciones y mantener registros de clientes. Estas aplicaciones manejan grandes volúmenes de datos y deben cumplir con regulaciones estrictas."}),e.jsxs("p",{children:[" ",e.jsx("strong",{children:"Ejemplo: "}),"Una compañía de seguros utiliza una aplicación COBOL para administrar sus pólizas y procesar reclamaciones. La aplicación almacena información detallada sobre las pólizas de los clientes, calcula los pagos de las reclamaciones y genera informes para fines regulatorios. COBOL garantiza la precisión en los cálculos y la integridad de los datos, lo que es fundamental en el sector de seguros."]}),e.jsx("h4",{children:"3. Logística y Transporte"}),e.jsx("p",{children:"En la industria de la logística y el transporte, las aplicaciones COBOL desempeñan un papel importante en la gestión de inventarios, la planificación de rutas y la administración de flotas. Estas aplicaciones manejan grandes volúmenes de datos relacionados con la distribución y el seguimiento de productos."}),e.jsxs("p",{children:[e.jsx("strong",{children:"Ejemplo:"}),"Una empresa de logística utiliza una aplicación COBOL para gestionar su inventario y coordinar la entrega de productos a clientes en todo el país. La aplicación realiza un seguimiento de la ubicación de los productos, planifica rutas de entrega eficientes y mantiene registros de inventario en tiempo real. COBOL garantiza la precisión en la gestión de datos y la eficiencia en la logística."]}),e.jsx("h4",{children:"4. Atención Médica y Seguridad Social"}),e.jsx("p",{children:"En el campo de la atención médica y la seguridad social, COBOL se utiliza para administrar registros de pacientes, procesar reclamaciones de seguros médicos y gestionar programas de seguridad social. Estas aplicaciones gestionan datos médicos sensibles y deben cumplir con regulaciones de privacidad."}),e.jsxs("p",{children:[e.jsx("strong",{children:"Ejemplo:"}),"Un sistema de atención médica utiliza una aplicación COBOL para administrar los registros de pacientes, programar citas, procesar reclamaciones de seguros y mantener registros de tratamientos médicos. COBOL garantiza la integridad de los registros de pacientes y la precisión en la facturación de seguros médicos."]}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"Los casos de estudio y ejemplos reales demuestran que COBOL sigue siendo esencial en diversas industrias, especialmente en aquellas que manejan grandes volúmenes de datos y requieren precisión y rendimiento. A pesar de su antigüedad, COBOL ha evolucionado para adaptarse a las demandas de aplicaciones empresariales y proyectos de procesamiento de datos masivos en la empresa moderna. Su capacidad para manejar datos de manera eficiente y precisa lo convierte en una herramienta valiosa en una variedad de sectores."}),e.jsx("hr",{})]}),Qj=()=>e.jsxs("article",{id:"modulo-11",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:" Módulo 11: Aplicaciones Prácticas de COBOL"}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsx(Wj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(Xj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(Kj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z})]}),$j=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"12.1",children:[e.jsx("h3",{children:"12.1. Estrategias de Mantenimiento en COBOL"}),e.jsx("p",{children:"El mantenimiento de aplicaciones COBOL es una parte crítica de su ciclo de vida, especialmente en aplicaciones empresariales y proyectos de procesamiento de datos masivos. Las estrategias de mantenimiento están diseñadas para garantizar que las aplicaciones COBOL sigan siendo eficientes, confiables y cumplan con los requisitos cambiantes de la organización. Aquí se describen algunas estrategias comunes de mantenimiento en COBOL:"}),e.jsx("h4",{children:"1. Mantenimiento Correctivo"}),e.jsx("p",{children:"El mantenimiento correctivo implica la corrección de errores y defectos en la aplicación COBOL. Estos errores pueden ser descubiertos durante las pruebas, en producción o a través de informes de usuarios. Los equipos de desarrollo deben abordar estos problemas de manera oportuna para garantizar que la aplicación siga funcionando correctamente."}),e.jsx("h4",{children:"2. Mantenimiento Adaptativo"}),e.jsx("p",{children:"El mantenimiento adaptativo se enfoca en ajustar la aplicación COBOL para que siga siendo funcional en un entorno en constante cambio. Esto puede incluir la adaptación a cambios en regulaciones, actualizaciones de sistemas operativos o migraciones de hardware. La adaptación es esencial para garantizar la continuidad de la aplicación."}),e.jsx("h4",{children:"3. Mantenimiento Perfectivo"}),e.jsx("p",{children:"El mantenimiento perfectivo tiene como objetivo mejorar la calidad y el rendimiento de la aplicación sin cambiar su funcionalidad. Esto implica la optimización de algoritmos, la reducción de la complejidad del código y la mejora de la eficiencia. El mantenimiento perfectivo ayuda a mantener la aplicación ágil y eficiente."}),e.jsx("h4",{children:"4. Mantenimiento Preventivo"}),e.jsx("p",{children:"El mantenimiento preventivo se enfoca en evitar futuros problemas identificando y solucionando posibles puntos de falla. Esto implica la revisión y la mejora continua del código para evitar problemas conocidos y preparar la aplicación para cambios futuros."}),e.jsx("h4",{children:"5. Documentación y Comentarios"}),e.jsx("p",{children:"Mantener documentación detallada y comentarios en el código es fundamental para facilitar el mantenimiento. Los desarrolladores deben asegurarse de que el código esté bien documentado, lo que ayuda a nuevos miembros del equipo a comprender el funcionamiento de la aplicación y facilita la resolución de problemas."}),e.jsx("h4",{children:"6. Gestión de Versiones y Control de Cambios"}),e.jsx("p",{children:"La gestión de versiones y el control de cambios son esenciales para rastrear las modificaciones realizadas en la aplicación a lo largo del tiempo. Las herramientas de control de versiones, como Git, permiten registrar y gestionar cambios, lo que es crítico para el mantenimiento y la colaboración en equipos."}),e.jsx("h4",{children:"7. Pruebas Continuas"}),e.jsx("p",{children:"Las pruebas continuas son fundamentales para garantizar que las modificaciones realizadas durante el mantenimiento no introduzcan nuevos errores. Las pruebas unitarias y de integración deben formar parte integral de la estrategia de mantenimiento."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"El mantenimiento de aplicaciones COBOL es un proceso continuo que garantiza la confiabilidad y la eficiencia de las aplicaciones empresariales y de procesamiento de datos masivos. Las estrategias de mantenimiento, que abarcan desde la corrección de errores hasta la adaptación a cambios, son esenciales para asegurar la longevidad y el rendimiento de las aplicaciones COBOL. Además, la documentación, la gestión de versiones y las pruebas continuas son prácticas clave que facilitan el mantenimiento a largo plazo."})]}),Zj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"12.2",children:[e.jsx("h3",{children:"12.2. Actualizaciones y Evolución de Aplicaciones COBOL"}),e.jsx("p",{children:"Las aplicaciones COBOL pueden requerir actualizaciones y evoluciones a lo largo de su ciclo de vida para mantener su relevancia y funcionalidad en un entorno empresarial en constante cambio. Aquí se describen las estrategias y enfoques clave para actualizar y evolucionar aplicaciones COBOL:"}),e.jsx("h4",{children:"1. Revisión de Requisitos de Negocio"}),e.jsx("p",{children:"Antes de realizar cualquier actualización o evolución, es esencial comprender los requisitos cambiantes del negocio. Esto implica colaborar estrechamente con los interesados y usuarios finales para identificar nuevas necesidades y objetivos."}),e.jsx("h4",{children:"2. Análisis de Impacto"}),e.jsx("p",{children:"Una vez que se comprenden los nuevos requisitos, se debe llevar a cabo un análisis de impacto. Esto implica evaluar cómo los cambios propuestos afectarán a la aplicación existente, incluida la estructura del código, las interfaces y los datos."}),e.jsx("h4",{children:"3. Mantenimiento Correctivo y Preventivo"}),e.jsx("p",{children:"Antes de realizar actualizaciones importantes, es importante abordar problemas de mantenimiento correctivo y preventivo. Esto incluye la corrección de errores, la mejora de la eficiencia y la reducción de la complejidad del código existente."}),e.jsx("h4",{children:"4. Refactorización del Código"}),e.jsx("p",{children:"En muchos casos, es necesario refactorizar el código existente para hacerlo más legible, mantenible y eficiente. Esto puede implicar la reorganización de Secciones y Divisions, la eliminación de código obsoleto y la adopción de mejores prácticas de programación."}),e.jsx("h4",{children:"5. Migración de Plataforma"}),e.jsx("p",{children:"Si la aplicación COBOL se ejecuta en hardware o sistemas operativos obsoletos, puede ser necesario migrar a una plataforma más moderna. Esto implica adaptar la aplicación a la nueva plataforma y asegurarse de que siga siendo compatible."}),e.jsx("h4",{children:"6. Interfaz de Usuario Moderna"}),e.jsx("p",{children:"Para mejorar la experiencia del usuario, puedes actualizar la interfaz de usuario de la aplicación. Esto puede incluir la adopción de tecnologías web, la implementación de interfaces móviles y la mejora de la usabilidad."}),e.jsx("h4",{children:"7. Integración de Tecnologías Modernas"}),e.jsx("p",{children:"COBOL puede integrarse con tecnologías modernas, como bases de datos relacionales, servicios web y sistemas en la nube. Esta integración permite que la aplicación interactúe con sistemas más nuevos y aproveche servicios externos."}),e.jsx("h4",{children:"8. Pruebas Rigurosas"}),e.jsx("p",{children:"Cualquier actualización debe ir acompañada de pruebas rigurosas para garantizar que la aplicación siga siendo funcional y que las modificaciones no introduzcan nuevos errores."}),e.jsx("h4",{children:"9. Documentación Actualizada"}),e.jsx("p",{children:"La documentación debe mantenerse al día para reflejar los cambios realizados en la aplicación. Esto incluye la actualización de comentarios en el código, la creación de documentación de usuario actualizada y la documentación de nuevos flujos de trabajo."}),e.jsx("h4",{children:"10. Gestión de Versiones y Control de Cambios"}),e.jsx("p",{children:"Las actualizaciones y evoluciones deben registrarse y gestionarse mediante sistemas de control de versiones. Esto permite un seguimiento preciso de las modificaciones realizadas."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"Las actualizaciones y la evolución de aplicaciones COBOL son esenciales para mantener la relevancia y la eficiencia de las aplicaciones a lo largo del tiempo. Estas estrategias y enfoques aseguran que las aplicaciones COBOL sigan siendo una parte valiosa de las operaciones empresariales y puedan adaptarse a las cambiantes necesidades del negocio y las tecnologías emergentes. La colaboración entre equipos de desarrollo, interesados y usuarios finales es fundamental para el éxito de las actualizaciones y evoluciones de aplicaciones COBOL."})]}),Jj=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"12.3",children:[e.jsx("h3",{children:"12.3. Retiro de Aplicaciones COBOL"}),e.jsx("p",{children:"El retiro de aplicaciones COBOL es un proceso importante que involucra el desmantelamiento o la desactivación de una aplicación COBOL que ya no es necesaria o eficaz. El retiro adecuado de aplicaciones es crucial para mantener la eficiencia de la infraestructura de TI y garantizar que los recursos estén disponibles para proyectos más críticos. Aquí se describen las estrategias clave para el retiro de aplicaciones COBOL:"}),e.jsx("h4",{children:"1. Evaluación de la Relevancia"}),e.jsx("p",{children:"Antes de proceder al retiro de una aplicación COBOL, es esencial evaluar su relevancia. Preguntas clave a considerar incluyen: ¿La aplicación sigue siendo utilizada por los usuarios? ¿Hay alternativas más modernas disponibles? ¿La aplicación cumple con los requisitos actuales del negocio?"}),e.jsx("h4",{children:"2. Planificación del Retiro"}),e.jsx("p",{children:"Una vez que se decide retirar una aplicación, se debe crear un plan detallado. Esto incluye una cronología para el retiro, la identificación de las partes interesadas involucradas y la documentación de los pasos necesarios para el desmantelamiento."}),e.jsx("h4",{children:"3. Migración de Datos"}),e.jsx("p",{children:"Si la aplicación a retirar contiene datos importantes, es necesario migrar estos datos a un nuevo sistema o asegurarse de que estén archivados de manera segura. La migración de datos puede requerir herramientas de extracción, transformación y carga (ETL) para garantizar una transición sin problemas."}),e.jsx("h4",{children:"4. Comunicación con Usuarios y Partes Interesadas"}),e.jsx("p",{children:"Es esencial comunicar de manera efectiva el proceso de retiro a los usuarios y partes interesadas. Esto incluye notificar a los usuarios sobre el cese de la aplicación, proporcionar orientación sobre alternativas y abordar cualquier inquietud o pregunta que puedan tener."}),e.jsx("h4",{children:"5. Desmantelamiento de la Aplicación"}),e.jsx("p",{children:"Una vez que se ha migrado la información crítica y se ha informado a los usuarios, se puede proceder al desmantelamiento de la aplicación. Esto incluye la eliminación de todos los componentes relacionados, como el código fuente, los archivos de datos y cualquier infraestructura de hardware o software asociada."}),e.jsx("h4",{children:"6. Evaluación de Impacto"}),e.jsx("p",{children:"Después del retiro de la aplicación, es importante evaluar el impacto en la infraestructura de TI y en las operaciones comerciales. Esto puede incluir la liberación de recursos, la reducción de costos y la liberación de personal que estaba involucrado en el soporte de la aplicación retirada."}),e.jsx("h4",{children:"7. Documentación y Archivado"}),e.jsx("p",{children:"Asegúrate de documentar adecuadamente el proceso de retiro y archivar esta documentación. Esto es importante para futuras referencias, auditorías y para garantizar que la decisión de retiro se haya llevado a cabo de manera adecuada y completa."}),e.jsx("h4",{children:"8. Gestión de Versiones y Control de Cambios"}),e.jsx("p",{children:"Mantén un registro de las modificaciones realizadas durante el proceso de retiro a través de sistemas de control de versiones y control de cambios. Esto permite un seguimiento preciso y una auditoría adecuada."}),e.jsx("h4",{children:"Conclusión"}),e.jsx("p",{children:"El retiro de aplicaciones COBOL es un proceso estratégico que permite a las organizaciones optimizar sus recursos de TI y mantenerse ágiles en un entorno empresarial en constante cambio. Es importante llevar a cabo el retiro de aplicaciones de manera planificada, comunicativa y documentada para garantizar una transición sin problemas y un impacto mínimo en las operaciones comerciales. Al hacerlo, las organizaciones pueden liberar recursos y centrarse en proyectos y aplicaciones más críticos para sus necesidades actuales."}),e.jsx("hr",{})]}),ex=()=>e.jsxs("article",{id:"modulo-12",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:" Módulo 12: Mantenimiento y Evolución de Programas COBOL"}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsx($j,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(Zj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(Jj,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z})]}),rx=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"13.1",children:[e.jsx("h3",{children:"13.1. Optimización de Código COBOL"}),e.jsx("p",{children:"La optimización de código en COBOL es un proceso que busca mejorar la eficiencia, el rendimiento y la legibilidad del código fuente de una aplicación. Una optimización adecuada puede conducir a una ejecución más rápida, un menor consumo de recursos y una mayor mantenibilidad del código. Aquí se describen algunas estrategias clave para optimizar el código COBOL:"}),e.jsx("h4",{children:"1. Identificación de Código Ineficiente"}),e.jsx("p",{children:"El primer paso en la optimización de código es identificar las secciones, procedimientos o rutinas que son ineficientes. Esto puede incluir bucles que se ejecutan innecesariamente o cálculos redundantes. Un análisis detallado del código puede revelar oportunidades de mejora."}),e.jsx("h4",{children:" 2. Reducción de Acceso a Disco"}),e.jsx("p",{children:"Minimizar el acceso a disco es fundamental para mejorar el rendimiento. Puedes lograr esto optimizando la lectura y escritura de archivos, reduciendo el uso de archivos temporales y manteniendo datos en memoria siempre que sea posible."}),e.jsx("h4",{children:" 3. Utilización de Índices"}),e.jsx("p",{children:"Si tu aplicación utiliza bases de datos o archivos indexados, asegúrate de utilizar índices de manera eficiente. Los índices pueden acelerar la recuperación de datos, pero un uso inadecuado puede ralentizar la aplicación."}),e.jsx("h4",{children:" 4. Reducción de Recursos Compartidos"}),e.jsx("p",{children:"El uso excesivo de recursos compartidos puede llevar a problemas de concurrencia y cuellos de botella. Asegúrate de que las secciones críticas estén bien gestionadas y de que los recursos se compartan de manera eficiente."}),e.jsx("h4",{children:" 5. Minimización de Comprobaciones de Condiciones"}),e.jsx("p",{children:"Reducir el número de comprobaciones de condiciones (if statements) puede mejorar el rendimiento. Esto implica simplificar la lógica condicional siempre que sea posible y evitar comprobaciones innecesarias."}),e.jsx("h4",{children:" 6. Optimización de Algoritmos"}),e.jsx("p",{children:"La selección de algoritmos eficientes es esencial para la optimización. Revisa los algoritmos utilizados en tu aplicación y busca oportunidades para mejorar la complejidad temporal."}),e.jsx("h4",{children:" 7. Eliminación de Código Obsoleto"}),e.jsx("p",{children:"A lo largo del tiempo, el código obsoleto puede acumularse. Elimina el código que ya no se utiliza y que no aporta valor a la aplicación. Esto simplificará el mantenimiento y mejorará la legibilidad."}),e.jsx("h4",{children:" 8. Mejora de la Legibilidad"}),e.jsx("p",{children:"La optimización no se trata solo de rendimiento, sino también de legibilidad. Un código limpio y bien estructurado es más fácil de entender y mantener. Utiliza nombres descriptivos para variables y comentarios claros para explicar la lógica."}),e.jsx("h4",{children:" 9. Pruebas Rigurosas"}),e.jsx("p",{children:"Después de realizar optimizaciones, realiza pruebas rigurosas para asegurarte de que la aplicación siga siendo funcional y que las modificaciones no hayan introducido nuevos errores."}),e.jsx("h4",{children:" 10. Perfiles de Rendimiento"}),e.jsx("p",{children:"Utiliza herramientas de perfiles de rendimiento para identificar cuellos de botella y áreas críticas en tu código. Esto te ayudará a dirigir tus esfuerzos de optimización de manera eficaz."}),e.jsx("h4",{children:" Conclusión"}),e.jsx("p",{children:"La optimización de código COBOL es un proceso continuo que busca mejorar la eficiencia y el rendimiento de las aplicaciones existentes. Es esencial identificar y abordar áreas ineficientes, reducir el acceso a disco, simplificar la lógica condicional y utilizar algoritmos eficientes. La optimización no solo mejora el rendimiento, sino que también facilita el mantenimiento a largo plazo al hacer que el código sea más claro y legible. La combinación de buenas prácticas de programación y técnicas de optimización puede llevar a un código COBOL más eficiente y confiable."})]}),nx=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"13.2",children:[e.jsx("h3",{children:"13.2. Gestión de Recursos y Rendimiento en COBOL"}),e.jsx("p",{children:"La gestión de recursos y el rendimiento son aspectos críticos en el desarrollo y mantenimiento de aplicaciones COBOL, especialmente en entornos empresariales que manejan grandes volúmenes de datos. Asegurarse de que una aplicación COBOL funcione de manera eficiente y haga un uso óptimo de los recursos es esencial para satisfacer las demandas del negocio. Aquí se describen estrategias clave para gestionar recursos y mejorar el rendimiento en aplicaciones COBOL:"}),e.jsx("h4",{children:" 1. Gestión de Memoria"}),e.jsx("p",{children:"La gestión de memoria es esencial para garantizar que una aplicación COBOL utilice eficazmente los recursos del sistema. Algunos aspectos a considerar incluyen:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Asignación de Memoria: Utiliza estructuras de datos apropiadas para minimizar el desperdicio de memoria y asegurarte de que las variables se almacenen de manera eficiente."}),e.jsx("li",{children:"Liberación de Memoria: Asegúrate de liberar la memoria utilizada por variables o estructuras de datos cuando ya no se necesiten para evitar fugas de memoria."})]}),e.jsx("h4",{children:" 2. Optimización de Bases de Datos"}),e.jsx("p",{children:"Si tu aplicación COBOL utiliza bases de datos, es importante optimizar las consultas y las transacciones para mejorar el rendimiento. Considera las siguientes estrategias:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Índices Eficientes: Utiliza índices de manera adecuada para acelerar la recuperación de datos."}),e.jsx("li",{children:"Transacciones Eficientes: Agrupa transacciones para minimizar la latencia y el bloqueo de recursos."})]}),e.jsx("h4",{children:" 3. Gestión de Procesos y Hilos"}),e.jsx("p",{children:"Si tu aplicación COBOL maneja múltiples procesos o hilos, asegúrate de gestionarlos de manera eficiente para aprovechar los recursos del sistema. Esto incluye:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Planificación de Procesos: Asigna prioridades a los procesos según su importancia y necesidades."}),e.jsx("li",{children:"Sincronización de Hilos: Utiliza mecanismos de sincronización para evitar condiciones de carrera y bloqueos."})]}),e.jsx("h4",{children:" 4. Monitorización y Perfil de Rendimiento"}),e.jsx("p",{children:"Implementa sistemas de monitorización y perfiles de rendimiento para identificar cuellos de botella y áreas de mejora en tu aplicación COBOL. Esto te permitirá tomar medidas para mejorar el rendimiento en áreas críticas."}),e.jsx("h4",{children:" 5. Paralelización"}),e.jsx("p",{children:"En aplicaciones COBOL que deben procesar grandes cantidades de datos, la paralelización puede mejorar significativamente el rendimiento. Divide tareas en unidades más pequeñas y procesa en paralelo cuando sea posible."}),e.jsx("h4",{children:" 6. Gestión de Transacciones"}),e.jsx("p",{children:"Si tu aplicación maneja transacciones, asegúrate de que la gestión de transacciones sea eficiente y segura. Utiliza técnicas como el control de transacciones distribuidas para mantener la consistencia de los datos."}),e.jsx("h4",{children:" 7. Ajuste de Configuración de Sistema"}),e.jsx("p",{children:"Colabora con los administradores del sistema para asegurarte de que la configuración del sistema se ajuste a las necesidades de tu aplicación. Esto puede incluir configuraciones de memoria, ajustes del sistema de archivos y afinación del sistema operativo."}),e.jsx("h4",{children:" 8. Pruebas de Rendimiento"}),e.jsx("p",{children:"Realiza pruebas exhaustivas de rendimiento para evaluar la capacidad de tu aplicación COBOL para manejar cargas de trabajo y volúmenes de datos típicos. Esto ayuda a identificar problemas antes de que afecten a la producción."}),e.jsx("h4",{children:" Conclusión"}),e.jsx("p",{children:"La gestión de recursos y el rendimiento son fundamentales en el desarrollo y mantenimiento de aplicaciones COBOL. Optimizar la gestión de memoria, mejorar las consultas de bases de datos, gestionar procesos y hilos de manera eficiente y utilizar técnicas de monitorización y pruebas de rendimiento son prácticas clave para garantizar que una aplicación COBOL funcione de manera eficiente y cumpla con los requisitos del negocio. La colaboración entre equipos de desarrollo y administradores de sistemas es esencial para abordar estos desafíos de manera efectiva."})]}),ax=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"13.3",children:[e.jsx("h3",{children:"13.3. Monitorización y Análisis de Rendimiento en COBOL"}),e.jsx("p",{children:"La monitorización y el análisis de rendimiento son aspectos fundamentales en el desarrollo y mantenimiento de aplicaciones COBOL. Estas prácticas permiten supervisar y evaluar el comportamiento de la aplicación en tiempo real y durante su funcionamiento en producción. Aquí se describen estrategias clave para implementar un sistema eficaz de monitorización y análisis de rendimiento en aplicaciones COBOL:"}),e.jsx("h4",{children:" 1. Selección de Herramientas de Monitorización"}),e.jsx("p",{children:"El primer paso es seleccionar las herramientas de monitorización adecuadas. Estas herramientas pueden incluir:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Herramientas de Monitorización de Aplicaciones: Estas herramientas supervisan el rendimiento de la aplicación COBOL y registran métricas clave, como el tiempo de respuesta, el uso de recursos y la utilización de CPU."}),e.jsx("li",{children:"Herramientas de Monitorización de Infraestructura: Estas herramientas supervisan los recursos de hardware y software en los que se ejecuta la aplicación COBOL, como servidores, bases de datos y sistemas operativos."})]}),e.jsx("h4",{children:" 2. Definición de Métricas Clave"}),e.jsx("p",{children:"Identifica las métricas clave que son relevantes para tu aplicación. Estas métricas pueden incluir:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Tiempo de Respuesta: El tiempo que tarda la aplicación en responder a solicitudes."}),e.jsx("li",{children:"Uso de CPU: La cantidad de tiempo de CPU utilizada por la aplicación."}),e.jsx("li",{children:"Consumo de Memoria: La cantidad de memoria utilizada por la aplicación."}),e.jsx("li",{children:"Tasas de Error: La cantidad de errores generados por la aplicación."}),e.jsx("li",{children:"Carga del Sistema: La carga en el servidor en términos de uso de CPU, memoria y E/S."})]}),e.jsx("h4",{children:" 3. Configuración de Alertas"}),e.jsx("p",{children:"Configura alertas que se activarán cuando las métricas superen ciertos umbrales. Esto permite detectar problemas de rendimiento de manera proactiva y tomar medidas antes de que afecten a los usuarios."}),e.jsx("h4",{children:" 4. Registro y Análisis de Datos"}),e.jsx("p",{children:"Registra los datos de rendimiento recopilados por las herramientas de monitorización. Estos registros pueden utilizarse para el análisis posterior. Las herramientas de análisis pueden ayudarte a identificar tendencias, patrones y problemas recurrentes."}),e.jsx("h4",{children:" 5. Identificación de Cuellos de Botella"}),e.jsx("p",{children:"Utiliza los datos de rendimiento para identificar cuellos de botella en la aplicación. Esto puede implicar la revisión de código, la optimización de consultas de bases de datos o la mejora de algoritmos."}),e.jsx("h4",{children:" 6. Pruebas de Carga y Estrés"}),e.jsx("p",{children:"Realiza pruebas de carga y estrés para evaluar cómo se comporta la aplicación bajo cargas de trabajo extremas. Esto puede ayudarte a identificar problemas de rendimiento que no se manifiestan en condiciones normales."}),e.jsx("h4",{children:" 7. Mejora Continua"}),e.jsx("p",{children:"La monitorización y el análisis de rendimiento deben ser un proceso continuo. A medida que la aplicación evoluciona y cambian las condiciones, es importante seguir supervisando y ajustando para garantizar un rendimiento óptimo."}),e.jsx("h4",{children:" 8. Comunicación y Colaboración"}),e.jsx("p",{children:"La monitorización y el análisis de rendimiento son responsabilidades compartidas entre los equipos de desarrollo, operaciones y administradores de sistemas. La comunicación y la colaboración efectivas son esenciales para abordar los problemas de rendimiento de manera eficaz."}),e.jsx("h4",{children:" Conclusión"}),e.jsx("p",{children:"La monitorización y el análisis de rendimiento son prácticas fundamentales para garantizar que las aplicaciones COBOL funcionen de manera eficiente y cumplan con los requisitos del negocio. Al seleccionar las herramientas adecuadas, definir métricas clave, configurar alertas, registrar y analizar datos, y realizar pruebas de carga, las organizaciones pueden identificar y abordar problemas de rendimiento de manera proactiva. La mejora continua y la colaboración entre equipos son clave para garantizar un rendimiento óptimo a lo largo del tiempo."}),e.jsx("hr",{})]}),sx=()=>e.jsxs("article",{id:"modulo-13",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:" Módulo 13: Aspectos de Rendimiento y Optimización"}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsx(rx,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(nx,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(ax,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z})]}),ix=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"14.1",children:[e.jsx("h3",{children:"14.1. Principios de Seguridad en Aplicaciones COBOL"}),e.jsx("p",{children:"La seguridad es un aspecto crítico en el desarrollo de aplicaciones COBOL, especialmente en entornos empresariales donde se manejan datos sensibles y operaciones comerciales críticas. A continuación, se describen los principios clave de seguridad que deben considerarse al desarrollar aplicaciones COBOL:"}),e.jsx("h4",{children:" 1. Autenticación y Autorización"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Autenticación: Asegúrate de que los usuarios que acceden a la aplicación estén debidamente autenticados. Utiliza métodos de autenticación seguros, como contraseñas robustas, autenticación multifactor (MFA) y certificados digitales."}),e.jsx("li",{children:"Autorización: Implementa un sistema de autorización sólido para garantizar que los usuarios solo tengan acceso a los recursos y datos para los que están autorizados."})]}),e.jsx("h4",{children:" 2. Protección de Datos Sensibles"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Encriptación: Utiliza la encriptación para proteger datos sensibles en reposo y en tránsito. Asegúrate de que las contraseñas y los datos confidenciales estén encriptados adecuadamente."}),e.jsx("li",{children:"Protección de Datos en la Memoria: Implementa medidas para proteger datos sensibles en la memoria, como el uso de variables temporales seguras y la eliminación segura de datos."})]}),e.jsx("h4",{children:" 3. Auditoría y Registro de Actividades"}),e.jsx("p",{children:"Implementa un sistema de auditoría que registre actividades de usuarios y eventos críticos. Esto es esencial para rastrear y responder a incidentes de seguridad."}),e.jsx("h4",{children:" 4. Prevención de Ataques"}),e.jsx("p",{children:"Protege la aplicación contra ataques comunes, como inyección SQL, ataques de fuerza bruta y ataques de secuencias de comandos entre sitios (XSS). Utiliza medidas de seguridad, como validación de entrada y escapado de datos, para prevenir estos ataques."}),e.jsx("h4",{children:" 5. Actualizaciones y Parches"}),e.jsx("p",{children:"Mantén la aplicación actualizada con las últimas actualizaciones y parches de seguridad. Esto incluye actualizaciones del sistema operativo, bases de datos y componentes de terceros utilizados en la aplicación."}),e.jsx("h4",{children:" 6. Gestión de Sesiones y Tokens de Seguridad"}),e.jsx("p",{children:"Implementa una gestión segura de sesiones y utiliza tokens de seguridad para evitar ataques de suplantación de identidad y secuestro de sesiones."}),e.jsx("h4",{children:" 7. Pruebas de Seguridad"}),e.jsx("p",{children:"Realiza pruebas de seguridad regulares, como pruebas de penetración y evaluaciones de vulnerabilidades, para identificar y abordar posibles brechas de seguridad."}),e.jsx("h4",{children:" 8. Formación y Concienciación en Seguridad"}),e.jsx("p",{children:"Proporciona formación en seguridad a los desarrolladores y usuarios para garantizar que todos comprendan las mejores prácticas y riesgos de seguridad."}),e.jsx("h4",{children:" 9. Plan de Respuesta a Incidentes"}),e.jsx("p",{children:"Desarrolla un plan de respuesta a incidentes que describa cómo responder a posibles violaciones de seguridad y restaurar la integridad de la aplicación y los datos."}),e.jsx("h4",{children:" Conclusión"}),e.jsx("p",{children:"La seguridad es un aspecto crítico en el desarrollo y mantenimiento de aplicaciones COBOL, especialmente en un entorno empresarial que maneja datos sensibles y operaciones comerciales esenciales. Los principios de seguridad, como la autenticación y autorización, la protección de datos sensibles, la auditoría, la prevención de ataques y la formación en seguridad, son fundamentales para garantizar que la aplicación sea resistente a las amenazas y cumpla con las normativas de seguridad. La seguridad debe ser una consideración central en cada etapa del ciclo de vida de desarrollo de aplicaciones COBOL."})]}),lx=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"14.2",children:[e.jsx("h3",{children:"14.2. Mitigación de Amenazas y Vulnerabilidades en Aplicaciones COBOL"}),e.jsx("p",{children:"La mitigación de amenazas y vulnerabilidades es un aspecto crítico de la seguridad en aplicaciones COBOL. Las amenazas y las vulnerabilidades pueden comprometer la integridad, la confidencialidad y la disponibilidad de los datos y sistemas empresariales. Aquí se describen estrategias clave para mitigar amenazas y abordar vulnerabilidades en aplicaciones COBOL:"}),e.jsx("h4",{children:" 1. Evaluación de Vulnerabilidades"}),e.jsx("p",{children:"Realiza evaluaciones regulares de vulnerabilidades en la aplicación COBOL para identificar posibles debilidades de seguridad. Esto puede incluir análisis estáticos y dinámicos del código y evaluaciones de seguridad de la infraestructura."}),e.jsx("h4",{children:" 2. Actualización y Parcheo"}),e.jsx("p",{children:"Mantén la aplicación COBOL, los sistemas operativos y los componentes de terceros actualizados con las últimas actualizaciones y parches de seguridad. Las vulnerabilidades conocidas a menudo se solucionan con parches."}),e.jsx("h4",{children:" 3. Validación de Entrada"}),e.jsx("p",{children:"Implementa una validación estricta de entrada para prevenir ataques de inyección, como inyección SQL y secuencias de comandos entre sitios (XSS). Filtra y escape adecuadamente todos los datos de entrada antes de procesarlos."}),e.jsx("h4",{children:" 4. Control de Sesiones y Sesiones Seguras"}),e.jsx("p",{children:"Utiliza controles de sesiones seguros y tokens de seguridad para prevenir ataques de suplantación de identidad y secuestro de sesiones."}),e.jsx("h4",{children:" 5. Control de Acceso"}),e.jsx("p",{children:"Implementa un sistema de control de acceso sólido que garantice que los usuarios solo tengan acceso a los recursos y datos para los que están autorizados."}),e.jsx("h4",{children:" 6. Encriptación"}),e.jsx("p",{children:"Utiliza encriptación para proteger datos sensibles en reposo y en tránsito. Esto incluye la encriptación de contraseñas, datos financieros y otros datos confidenciales."}),e.jsx("h4",{children:" 7. Gestión de Errores Seguros"}),e.jsx("p",{children:"Evita exponer información sensible en mensajes de error. Utiliza mensajes de error genéricos en lugar de revelar detalles internos que podrían ser aprovechados por atacantes."}),e.jsx("h4",{children:" 8. Gestión de Sesiones Expiradas"}),e.jsx("p",{children:"Implementa una gestión adecuada de sesiones expiradas para garantizar que las sesiones inactivas se cierren de manera segura y se requiera una nueva autenticación."}),e.jsx("h4",{children:" 9. Pruebas de Penetración"}),e.jsx("p",{children:"Realiza pruebas de penetración regulares para identificar vulnerabilidades en la aplicación y abordarlas antes de que sean explotadas por atacantes."}),e.jsx("h4",{children:" 10. Supervisión y Registro de Actividades"}),e.jsx("p",{children:"Establece un sistema de registro y supervisión de actividades que permita detectar comportamientos anómalos y rastrear incidentes de seguridad."}),e.jsx("h4",{children:" 11. Formación en Seguridad"}),e.jsx("p",{children:"Proporciona formación en seguridad a los desarrolladores, administradores de sistemas y usuarios para garantizar que todos estén al tanto de las mejores prácticas de seguridad."}),e.jsx("h4",{children:" 12. Plan de Respuesta a Incidentes"}),e.jsx("p",{children:"Desarrolla y practica un plan de respuesta a incidentes que describa cómo abordar y recuperarse de posibles violaciones de seguridad."}),e.jsx("h4",{children:" Conclusión"}),e.jsx("p",{children:"La mitigación de amenazas y vulnerabilidades es una parte esencial de la seguridad en aplicaciones COBOL. Las aplicaciones COBOL, al igual que cualquier otro software, están expuestas a una variedad de amenazas, desde ataques de inyección hasta ataques de suplantación de identidad. Adoptar una postura proactiva y seguir prácticas de seguridad sólidas, como la validación de entrada, el control de sesiones y la encriptación, es esencial para proteger los sistemas y datos empresariales. La seguridad en COBOL debe ser un esfuerzo continuo que evoluciona a medida que cambian las amenazas y las mejores prácticas de seguridad."})]}),ox=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"14.3",children:[e.jsx("h3",{children:"14.3. Cumplimiento Normativo en Aplicaciones COBOL"}),e.jsx("p",{children:"El cumplimiento normativo es un aspecto crítico en el desarrollo y mantenimiento de aplicaciones COBOL, especialmente en entornos empresariales altamente regulados, como el sector financiero y de la salud. Asegurarse de que las aplicaciones cumplan con las regulaciones y estándares relevantes es esencial para evitar sanciones legales y proteger la integridad de los datos. Aquí se describen las estrategias clave para garantizar el cumplimiento normativo en aplicaciones COBOL:"}),e.jsx("h4",{children:" 1. Conocimiento de las Regulaciones Relevantes"}),e.jsx("p",{children:"Comprende las regulaciones y estándares específicos que se aplican a tu industria y región. Algunos ejemplos incluyen HIPAA (para la privacidad de la información médica), GDPR (para la protección de datos en la Unión Europea) y regulaciones financieras como SOX."}),e.jsx("h4",{children:" 2. Diseño de Seguridad y Privacidad"}),e.jsx("p",{children:"Diseña la aplicación COBOL con la seguridad y la privacidad en mente desde el principio. Asegúrate de que la aplicación cumple con los requisitos de seguridad y privacidad definidos en las regulaciones."}),e.jsx("h4",{children:" 3. Auditoría y Registro de Actividades"}),e.jsx("p",{children:"Implementa un sistema de auditoría y registro de actividades que registre las acciones realizadas en la aplicación. Esto es esencial para rastrear y documentar el cumplimiento normativo."}),e.jsx("h4",{children:" 4. Políticas y Procedimientos de Cumplimiento"}),e.jsx("p",{children:"Establece políticas y procedimientos formales de cumplimiento que describan cómo se deben abordar y documentar las cuestiones de cumplimiento."}),e.jsx("h4",{children:" 5. Formación y Concienciación en Cumplimiento"}),e.jsx("p",{children:"Proporciona formación en cumplimiento a los empleados y miembros del equipo de desarrollo para asegurarte de que comprendan las regulaciones y los procedimientos de cumplimiento."}),e.jsx("h4",{children:" 6. Pruebas de Cumplimiento"}),e.jsx("p",{children:"Realiza pruebas de cumplimiento para evaluar si la aplicación cumple con los requisitos normativos. Estas pruebas deben simular situaciones que evalúen el cumplimiento en condiciones reales."}),e.jsx("h4",{children:" 7. Gestión de Datos"}),e.jsx("p",{children:"Asegura que la gestión de datos cumple con los requisitos de privacidad y retención de datos establecidos por las regulaciones."}),e.jsx("h4",{children:" 8. Plan de Respuesta a Incidentes de Cumplimiento"}),e.jsx("p",{children:"Desarrolla un plan de respuesta a incidentes específico para cuestiones de cumplimiento, lo que incluye la notificación de violaciones de datos según lo requieran las regulaciones."}),e.jsx("h4",{children:" 9. Colaboración con Expertos en Cumplimiento"}),e.jsx("p",{children:"Colabora con expertos en cumplimiento, asesores legales y profesionales de auditoría para garantizar que la aplicación cumpla con las regulaciones vigentes."}),e.jsx("h4",{children:" Conclusión"}),e.jsx("p",{children:"El cumplimiento normativo es fundamental para garantizar que las aplicaciones COBOL cumplan con las leyes y regulaciones aplicables. Las organizaciones deben estar al tanto de las regulaciones específicas de su industria y región y tomar medidas proactivas para asegurarse de que sus aplicaciones cumplan con los requisitos de seguridad, privacidad y retención de datos. El cumplimiento normativo es un esfuerzo continuo que requiere planificación, formación y supervisión constante para garantizar que se mantenga el cumplimiento a lo largo del tiempo. La no conformidad puede resultar en sanciones legales, multas y daños a la reputación de la organización."}),e.jsx("hr",{})]}),cx=()=>e.jsxs("article",{id:"modulo-14",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:" Módulo 14: Seguridad en Aplicaciones COBOL"}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsx(ix,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(lx,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(ox,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z})]}),tx=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"15.1",children:[e.jsx("h3",{children:"15.1. Estado Actual de COBOL en la Industria"}),e.jsx("p",{children:"El lenguaje de programación COBOL ha sido un componente esencial en la industria de la tecnología desde su creación en la década de 1950. A pesar de su longevidad, COBOL todavía desempeña un papel importante en muchas organizaciones y sistemas empresariales. A continuación, se describen el estado actual y la relevancia de COBOL en la industria:"}),e.jsx("h4",{children:" 1. Aplicaciones Legadas"}),e.jsx("p",{children:"COBOL se ha utilizado ampliamente en aplicaciones empresariales críticas durante décadas. Muchas organizaciones aún dependen de sistemas legados escritos en COBOL para operaciones comerciales esenciales. Estos sistemas pueden ser difíciles y costosos de migrar a otras tecnologías."}),e.jsx("h4",{children:" 2. Mantenimiento y Modernización"}),e.jsx("p",{children:"Dado que muchas aplicaciones COBOL son críticas para el funcionamiento de las organizaciones, existe una demanda continua de programadores COBOL para el mantenimiento y la modernización de sistemas existentes. Esto incluye la adopción de prácticas de desarrollo más modernas y la interfaz de sistemas COBOL con tecnologías más nuevas."}),e.jsx("h4",{children:" 3. Escasez de Habilidades"}),e.jsx("p",{children:"A pesar de la demanda constante, hay una escasez de habilidades en COBOL en la industria. La mayoría de los programadores más jóvenes no tienen experiencia en COBOL, lo que crea oportunidades para aquellos que desean aprender y trabajar en este campo."}),e.jsx("h4",{children:" 4. Rendimiento Confiable"}),e.jsx("p",{children:"COBOL se destaca por su capacidad de manejar grandes volúmenes de datos y operaciones comerciales críticas. Las organizaciones confían en COBOL debido a su historial de rendimiento confiable en entornos empresariales exigentes."}),e.jsx("h4",{children:" 5. Migración y Modernización"}),e.jsx("p",{children:"A medida que las organizaciones buscan modernizar sus aplicaciones COBOL, están explorando opciones como la migración a plataformas más modernas, la reescritura de partes de la aplicación en lenguajes más nuevos y la implementación de interfaces de usuario más amigables."}),e.jsx("h4",{children:" 6. Evolución del Lenguaje"}),e.jsx("p",{children:"Aunque COBOL es un lenguaje maduro, ha evolucionado con el tiempo para adaptarse a las demandas cambiantes de la tecnología. Las últimas revisiones de COBOL han introducido características más modernas, como compatibilidad con Unicode y capacidades de interoperabilidad con otros lenguajes."}),e.jsx("h4",{children:" 7. Continuidad en Sectores Regulados"}),e.jsx("p",{children:"En sectores altamente regulados, como la banca, la atención médica y el gobierno, COBOL sigue siendo ampliamente utilizado debido a su capacidad para cumplir con las normativas y estándares específicos de la industria."}),e.jsx("h4",{children:" 8. Perspectivas Laborales"}),e.jsx("p",{children:"La demanda de profesionales con habilidades en COBOL sigue siendo sólida, lo que crea oportunidades de empleo en organizaciones que requieren experiencia en este lenguaje."}),e.jsx("h4",{children:" Conclusión"}),e.jsx("p",{children:"A pesar de su antigüedad, COBOL sigue siendo relevante en la industria de la tecnología debido a la presencia continua de aplicaciones legadas y sistemas empresariales críticos escritos en este lenguaje. La escasez de habilidades en COBOL crea oportunidades para aquellos que deseen aprender y trabajar en este campo. La evolución del lenguaje y las prácticas de modernización están ayudando a que COBOL se adapte a las demandas cambiantes de la tecnología, lo que permite que las organizaciones continúen aprovechando sus inversiones en sistemas COBOL mientras avanzan hacia soluciones tecnológicamente más modernas."})]}),dx=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"15.2",children:[e.jsx("h3",{children:"15.2. Futuro de COBOL y Tendencias Emergentes"}),e.jsx("p",{children:"Aunque COBOL es un lenguaje de programación maduro que ha estado en uso durante décadas, sigue siendo relevante en muchas industrias. Sin embargo, también se están produciendo cambios y tendencias emergentes que pueden influir en el futuro de COBOL:"}),e.jsx("h4",{children:" 1. Migración y Modernización Continua"}),e.jsx("p",{children:"Muchas organizaciones están comprometidas en programas de migración y modernización de sistemas COBOL. Esto implica la adopción de prácticas de desarrollo más modernas, la implementación de interfaces de usuario amigables y la exploración de opciones para reemplazar o integrar sistemas COBOL con tecnologías más nuevas."}),e.jsx("h4",{children:" 2. Interoperabilidad y APIs"}),e.jsx("p",{children:"COBOL está evolucionando para ser más compatible con las tecnologías modernas, incluida la capacidad de interactuar con servicios web y APIs. Esto permite a las aplicaciones COBOL integrarse con aplicaciones y servicios en la nube, lo que amplía sus capacidades."}),e.jsx("h4",{children:" 3. Atracción de Nuevos Desarrolladores"}),e.jsx("p",{children:"Dado que muchos programadores jóvenes no tienen experiencia en COBOL, las organizaciones están interesadas en atraer y capacitar a nuevos desarrolladores en este lenguaje. La escasez de habilidades en COBOL ha creado oportunidades para quienes deseen aprender y trabajar en esta área."}),e.jsx("h4",{children:" 4. Transformación Digital"}),e.jsx("p",{children:"A medida que las organizaciones buscan la transformación digital, las aplicaciones COBOL pueden ser un desafío debido a su antigüedad. Sin embargo, muchas organizaciones están trabajando en estrategias para modernizar y aprovechar sistemas COBOL en su camino hacia la transformación digital."}),e.jsx("h4",{children:" 5. Cumplimiento Normativo"}),e.jsx("p",{children:"En sectores altamente regulados, COBOL seguirá siendo relevante debido a su capacidad para cumplir con las normativas y estándares específicos de la industria. Las organizaciones necesitarán mantener y modernizar aplicaciones COBOL para cumplir con las regulaciones en constante evolución."}),e.jsx("h4",{children:" 6. Gestión de Datos y Analítica"}),e.jsx("p",{children:"COBOL es conocido por su capacidad para gestionar grandes volúmenes de datos, lo que lo hace valioso en aplicaciones de analítica de datos y gestión de bases de datos. Las organizaciones pueden continuar utilizando COBOL en aplicaciones relacionadas con el análisis de datos."}),e.jsx("h4",{children:" 7. Evolución del Lenguaje"}),e.jsx("p",{children:"COBOL ha seguido evolucionando a lo largo de los años con revisiones que introducen características más modernas, como la compatibilidad con Unicode y la interoperabilidad con otros lenguajes. Esto permite que el lenguaje se adapte a las demandas cambiantes de la tecnología."}),e.jsx("h4",{children:" Conclusión"}),e.jsx("p",{children:"El futuro de COBOL es una combinación de la continuidad en el uso de sistemas legados, la modernización para adaptarse a las demandas tecnológicas actuales y la atracción de nuevos desarrolladores para garantizar la disponibilidad de habilidades en COBOL. A medida que las organizaciones continúan evolucionando hacia soluciones tecnológicamente más modernas, COBOL seguirá desempeñando un papel importante en la infraestructura tecnológica de muchas industrias. La capacidad de COBOL para mantener y modernizar aplicaciones críticas para el negocio lo hace relevante en el panorama tecnológico actual y futuro."})]}),ux=({Cuadro:O,Red:s,Grey:d,Esp:l,Com:I})=>e.jsxs("section",{id:"15.3",children:[e.jsx("h3",{children:"15.3. Oportunidades Profesionales en COBOL"}),e.jsx("p",{children:"A pesar de ser un lenguaje de programación maduro, COBOL ofrece una serie de oportunidades profesionales en la actualidad. La continua demanda de aplicaciones COBOL y la escasez de habilidades en este campo crean un mercado laboral dinámico para aquellos que deseen trabajar con este lenguaje. A continuación, se describen algunas de las oportunidades profesionales en el campo de COBOL:"}),e.jsx("h4",{children:" 1. Programador COBOL"}),e.jsx("p",{children:"Los programadores COBOL son responsables de escribir, mantener y actualizar aplicaciones escritas en COBOL. Esto incluye la corrección de errores, la incorporación de nuevas funcionalidades y la adaptación de aplicaciones legadas para cumplir con los requisitos actuales."}),e.jsx("h4",{children:" 2. Analista de Sistemas COBOL"}),e.jsx("p",{children:"Los analistas de sistemas COBOL se centran en el análisis de sistemas existentes escritos en COBOL. Trabajan en estrecha colaboración con los usuarios y los equipos de desarrollo para identificar requisitos, diseñar soluciones y realizar pruebas de sistemas."}),e.jsx("h4",{children:" 3. Especialista en Modernización COBOL"}),e.jsx("p",{children:"La modernización de aplicaciones COBOL es una tendencia importante. Los especialistas en modernización trabajan en la actualización de sistemas COBOL a tecnologías más modernas, como interfaces web y servicios en la nube."}),e.jsx("h4",{children:" 4. Especialista en Seguridad COBOL"}),e.jsx("p",{children:"La seguridad es crítica en aplicaciones empresariales. Los especialistas en seguridad COBOL se centran en garantizar que las aplicaciones COBOL cumplan con los estándares de seguridad y privacidad, así como en proteger contra amenazas y vulnerabilidades."}),e.jsx("h4",{children:" 5. Administrador de Bases de Datos COBOL"}),e.jsx("p",{children:"Muchas aplicaciones COBOL interactúan con bases de datos. Los administradores de bases de datos COBOL son responsables de administrar, mantener y optimizar las bases de datos utilizadas por estas aplicaciones."}),e.jsx("h4",{children:" 6. Consultor en COBOL"}),e.jsx("p",{children:"Los consultores en COBOL trabajan de manera independiente o en empresas de consultoría. Ofrecen experiencia en COBOL y ayudan a las organizaciones a abordar problemas específicos relacionados con aplicaciones COBOL, desde la modernización hasta la seguridad y el cumplimiento normativo."}),e.jsx("h4",{children:" 7. Formador en COBOL"}),e.jsx("p",{children:"La formación en COBOL es esencial para capacitar a nuevos desarrolladores y para mantener actualizados a los profesionales actuales en este lenguaje. Los formadores en COBOL proporcionan capacitación y recursos educativos."}),e.jsx("h4",{children:" 8. Gestión de Proyectos COBOL"}),e.jsx("p",{children:"Los profesionales con experiencia en COBOL pueden avanzar en sus carreras hacia roles de gestión de proyectos. Son responsables de supervisar proyectos de desarrollo y modernización de aplicaciones COBOL."}),e.jsx("h4",{children:" 9. Experto en Cumplimiento COBOL"}),e.jsx("p",{children:"En sectores regulados, como la banca y la atención médica, los expertos en cumplimiento COBOL se centran en garantizar que las aplicaciones cumplan con las regulaciones específicas de la industria y las mejores prácticas de seguridad."}),e.jsx("h4",{children:" Conclusión"}),e.jsx("p",{children:"A pesar de ser un lenguaje de programación con décadas de antigüedad, COBOL sigue siendo relevante y ofrece una variedad de oportunidades profesionales en el mercado laboral actual. La demanda de habilidades en COBOL sigue siendo sólida, y la necesidad de programadores, analistas y especialistas en diversos aspectos de COBOL está en aumento. La escasez de habilidades en COBOL crea oportunidades para aquellos que deseen aprender y trabajar en este campo, y la posibilidad de modernización y migración de aplicaciones COBOL garantiza que haya un flujo constante de proyectos y empleos en esta área."}),e.jsx("hr",{})]}),jx=()=>e.jsxs("article",{id:"modulo-15",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:" Módulo 15: Tendencias y Futuro de COBOL"}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsx(tx,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(dx,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z}),e.jsx(ux,{Cuadro:y,Red:M,Grey:R,Com:U,Esp:z})]}),xx=()=>e.jsxs("section",{id:"ape1_1",children:[e.jsx("h4",{children:"ARCHIVOS QSAM, SECUENCIALES o PLANOS"}),e.jsx("p",{children:"Los archivos planos se llaman a todos aquellos archivos de datos que contienen rutas de registro sin relaciones estructurales. Para interpretar este tipo de archivo se requiere conocimiento de elementos adicionales como, por ejemplo, las propiedades de formato o estructura de datos del archivo."}),e.jsxs("ul",{children:[e.jsxs("li",{children:["Archivo PDS (Partitioned Data Set)(particionado o biblioteca de datos): es un tipo de archivo en mainframes IBM que actúa como un contenedor de múltiples miembros, similar a un directorio o carpeta en sistemas operativos modernos.",e.jsxs("ul",{children:[e.jsx("li",{children:"Se compone de múltiples miembros, cada uno de los cuales se trata como un archivo separado dentro del PDS."}),e.jsx("li",{children:"Se utiliza para almacenar programas fuente en COBOL, JCL, macros, o scripts de ensamblador."}),e.jsx("li",{children:"Facilita la organización y gestión de archivos relacionados."}),e.jsx("li",{children:"Puede contener programas compilados y versiones de código fuente en un solo dataset."})]})]}),e.jsxs("li",{children:[" ","Archivo QSAM (Queued Sequential Access Method): es un tipo de archivo secuencial en mainframe, similar a un archivo de texto en otros sistemas.",e.jsxs("ul",{children:[e.jsx("li",{children:"Se accede de manera secuencial, de principio a fin, sin acceso"}),e.jsx("li",{children:"aleatorio. Es el tipo de archivo más común para procesar grandes"}),e.jsx("li",{children:"volúmenes de datos en COBOL. Se puede usar para almacenar registros"}),e.jsx("li",{children:"de datos estructurados, como nóminas, reportes, etc."})]})]})]}),e.jsx("h4",{children:"DIFERENCIA ENTRE ARCHIVOS SECUENCIALES, INDEXADOS Y RELATIVOS EN COBOL"}),e.jsx("p",{children:"Los archivos son la colección de registros relacionados con una entidad en particular. Mediante el manejo de archivos, podemos almacenar estos registros en un orden organizado. Estos registros se almacenan en cinta magnética o en un disco duro. Los archivos se clasifican además en 3 tipos:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"​Organización secuencial de archivos."}),e.jsx("li",{children:"​Organización relativa de archivos."}),e.jsx("li",{children:"​Organización de archivos indexados."})]}),"Ventajas del manejo de archivos: ​",e.jsxs("ul",{children:[e.jsx("li",{children:"Tienen almacenamiento ilimitado y, por lo tanto, almacenan un gran volumen de datos."}),e.jsx("li",{children:"Almacenan los datos de forma permanente en el dispositivo."}),e.jsx("li",{children:"​Reducen la reedición de datos."})]}),e.jsx("p",{children:"La organización de archivos secuenciales almacena los datos en orden secuencial. Podemos acceder a los datos de forma secuencial y los datos se pueden almacenar solo al final del archivo; o sea a continuación del último registro de datos."}),e.jsx("p",{children:"La organización de archivos indexados almacena el registro secuencialmente dependiendo del valor de RECORD-KEY (generalmente en orden ascendente). Una CLAVE DE REGISTRO en un archivo indexado es una variable que debe ser parte del registro / datos. En el caso de archivos indexados, se crean dos tipos de archivos:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Archivo de datos: consta de los registros en orden secuencial."}),e.jsx("li",{children:"Archivo de índice: Consiste en RECORD-KEY y la dirección de RECORD-KEY en el archivo de datos."})]}),e.jsx("p",{children:"Se puede acceder al archivo indexado de forma secuencial al igual que la organización de archivos secuenciales, así como de forma aleatoria solo si se conoce la CLAVE DE REGISTRO. La organización de archivos relativa almacena el registro sobre la base de su dirección relativa."})," ",e.jsx("p",{children:"Cada registro se identifica por su Número de registro relativo, un Número de registro relativo es la posición del registro desde el principio del archivo. Se puede acceder a estos registros de forma secuencial al igual que la organización de archivos secuenciales, así como de forma aleatoria, para acceder a los archivos de forma aleatoria, el usuario debe especificar el número de registro relativo."}),e.jsx("br",{}),e.jsxs(y,{data:{gridTemplateColumns:"1fr 1fr 1fr"},children:[e.jsxs("div",{className:"col tCenter",children:[e.jsx("div",{children:"ARCHIVOS SECUENCIALES"}),e.jsx("div",{children:"Solo se puede acceder a estos archivos de forma secuencial."}),e.jsx("div",{children:"Los registros se almacenan secuencialmente."}),e.jsx("div",{children:"Los registros no se pueden eliminar y solo se pueden almacenar al final del archivo."}),e.jsx("div",{children:"Ocupa menos espacio ya que los registros se almacenan en orden continuo."}),e.jsx("div",{children:"Proporciona un acceso lento, ya que para acceder a cualquier registro se debe acceder primero a todos los registros anteriores."}),e.jsx("div",{children:"En la organización de archivos secuenciales, los registros se leen y escriben en orden secuencial."}),e.jsx("div",{children:"No es necesario declarar ninguna CLAVE para almacenar y acceder a los registros."})]}),e.jsxs("div",{className:"col tCenter",children:[e.jsx("div",{children:"ARCHIVOS INDEXADOS"}),e.jsx("div",{children:"Se puede acceder a estos archivos de forma secuencial y aleatoria con la ayuda de la clave de registro."}),e.jsx("div",{children:"Los registros se almacenan en función del valor de la CLAVE DE REGISTRO que es parte de los datos. Es posible almacenar los registros en medio del archivo."}),e.jsx("div",{children:"Es posible almacenar los registros en medio del archivo."}),e.jsx("div",{children:"Ocupa más espacio."}),e.jsx("div",{children:"También proporciona un acceso lento (pero es rápido en comparación con el acceso secuencial) ya que lleva tiempo buscar el índice."}),e.jsx("div",{children:"En la organización de archivos indexados, los registros se escriben en orden secuencial, pero se pueden leer tanto en orden secuencial como aleatorio."}),e.jsx("div",{children:"Se pueden crear una o más LLAVES para almacenar y acceder a los registros."})]}),e.jsxs("div",{className:"col tCenter",children:[e.jsx("div",{children:"ARCHIVOS RELATIVOS"}),e.jsx("div",{children:"Se puede acceder a estos archivos de forma secuencial y aleatoria con la ayuda de su número de registro relativo."}),e.jsx("div",{children:"Los registros se almacenan por su dirección relativa."}),e.jsx("div",{children:"Los registros se pueden insertar en cualquier posición."}),e.jsx("div",{children:"Ocupa más espacio."}),e.jsx("div",{children:"Proporciona un acceso rápido, ya que proporciona la clave de registro en comparación con los otros dos."}),e.jsx("div",{children:"En la organización relativa de archivos, los registros se pueden escribir y leer en orden secuencial y aleatorio."}),e.jsx("div",{children:"Solo se declara una CLAVE única para almacenar y acceder a los registros."})]})]},2)]}),mx=()=>e.jsxs("article",{id:"apendice",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:" Apendice: Categoria a definir."}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsx(xx,{})]}),hx=()=>e.jsxs("article",{id:"glosario",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:"Glosario"}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsxs("ol",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"ACCEPT: "})," Declara una instrucción de entrada."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"ADD: "})," Realiza una suma."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"ALTER: "})," Se utiliza para modificar un archivo o programa existente."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"AND: "})," Realiza una operación AND."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"ANY: "})," Se utiliza con una cláusula WHEN para seleccionar cualquier valor."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"AT: "})," Indica la ubicación de un archivo."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"BEGIN: "})," Indica el inicio de un bloque de código."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"BY: "})," Indica el orden de las filas en una tabla."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"CALL: "})," Llama a un programa o procedimiento."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"CANCEL: "})," Cancela un trabajo en ejecución."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"CLOSE: "})," Cierra un archivo."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"COBOL: "})," Reservado para el uso futuro."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"COMPUTE: "})," Permite realizar cálculos aritméticos o lógicos."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"CONTINUE: "})," Continua la ejecución de un bucle."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"COPY: "})," Copia un programa o procedimiento."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"DATA: "})," Declara un conjunto de datos."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"DATE: "})," Obtiene o establece la fecha actual."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"DELETE: "})," Elimina una fila de una tabla."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"DIVIDE: "})," Realiza una división."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"DISPLAY: "})," Imprime un mensaje."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"DO: "})," Inicia un bucle."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"END-COMPUTE: "})," Indica el final de una instrucción. COMPUTE"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"END-DELETE: "})," Indica el final de una instrucción. DELETE"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"END-DIVIDE: "})," Indica el final de una instrucción. DIVIDE"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"END-IF: "})," Indica el final de una instrucción IF."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"END-MULTIPLY: "})," Indica el final de una instrucción. MULTIPLY"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"END-OF-FILE: "})," Indica el final de un archivo."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"END-PERFORM: "})," Indica el final de una instrucción. PERFORM"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"END-READ: "})," Indica el final de una instrucción READ."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"END-SELECT: "})," Indica el final de una instrucción. SELECT"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"END-SUBTRACT: "})," Indica el final de una instrucción. SUBTRACT"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"END-WRITE: "})," Indica el final de una instrucción WRITE."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"ENTER: "})," Obtiene datos del usuario."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"EVALUATE: "})," Evalúa una expresión."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"EXCEPTION: "})," Declara una excepción."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"EXIT: "})," Sale de un bloque de código."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"EXTEND: "})," Amplía un archivo."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"FILE: "})," Declara un archivo."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"FOR: "})," Inicia un bucle."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"FUNCTION: "})," Declara una función."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"GIVING"})," Útil cuando deseas realizar una operación aritmética y, al mismo tiempo, almacenar el resultado en una variable para su posterior uso."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"GO: "})," Salta a una instrucción."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"IF: "})," Realiza una condición."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"INITIALIZE: "})," Inicializa una variable."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"INPUT: "})," Declara un conjunto de datos de entrada."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"INTO: "})," Asigna un valor a una variable."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"KEY: "})," Declara una clave para un archivo."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"LABEL: "})," Declara una etiqueta."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"LEAVE: "})," Sale de un bucle."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"LENGTH: "})," Obtiene la longitud de una variable."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"LIMIT: "})," Declara un límite para un archivo."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"LOCATE: "})," Encuentra una fila en una tabla."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"MEMORY: "})," Declara un conjunto de datos de memoria."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"MERGE: "})," Combina dos archivos."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"MULTIPLY: "})," Realiza una multiplicación."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"NOT: "})," Realiza una operación NOT."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"OBJECT: "})," Reservado para el uso futuro."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"OF: "})," Indica el tipo de un archivo."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"ON: "})," Indica una condición."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"OPEN: "})," Abre un archivo."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"OPTIONAL: "})," Indica que una variable es opcional."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"PERFORM: "})," Ejecuta un procedimiento."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"PICTURE: "})," Declara un formato para una variable."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"PROCEDURE: "})," Declara un procedimiento."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"READ: "})," Lee una fila de un archivo."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"RECORD: "})," Declara un registro."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"REMAINDER: "}),' En combinación con la instrucción "DIVIDE" para obtener el residuo de una división entre dos números.']}),e.jsxs("li",{children:[e.jsx("strong",{children:"REPLACE: "})," Reemplaza una fila de una tabla."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"RETURN: "})," Devuelve un valor de un procedimiento."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"REWRITE: "})," Escribe una fila en un archivo."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"SELECT: "})," Declara un conjunto de condiciones."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"SET: "})," Asigna un valor a una variable."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"SORT: "})," Ordena un archivo."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"START: "})," Inicia un programa."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"STOP: "})," Detiene la ejecución de un programa."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"STRING: "})," Declara una cadena de texto."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"SUBTRACT: "})," Realiza una resta."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"THEN: "})," Indica el resultado de una condición."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"TIME: "})," Obtiene o establece la hora actual."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"TO: "})," Indica el rango de un bucle."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"UNDERLINE: "})," Declara un subrayado."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"USE: "})," Asigna un conjunto de datos a un archivo."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"VARYING: "})," Declara una variable de longitud variable."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"WHEN: "})," Indica una condición."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"WRITE: "})," Escribe una fila en un archivo."]}),e.jsxs("li",{children:[e.jsx("strong",{children:"WITH NO ADVANCING:"}),' se utiliza para controlar la posición del cursor de salida en la pantalla o en el archivo de salida cuando se usa la instrucción "DISPLAY".']})]})]}),px=()=>{const O={1:`IDENTIFICATION DIVISION.
PROGRAM-ID. HOLA-MUNDO.

PROCEDURE DIVISION.
    DISPLAY "¡Hola, Mundo!".
    STOP RUN.
`,2:`IDENTIFICATION DIVISION.
PROGRAM-ID. SUMA-DOS-NUMEROS.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 NUM1 PIC 9(5).
01 NUM2 PIC 9(5).
01 SUMA PIC 9(5).

PROCEDURE DIVISION.
    DISPLAY "Ingrese el primer número: " WITH NO ADVANCING.
    ACCEPT NUM1.
    DISPLAY "Ingrese el segundo número: " WITH NO ADVANCING.
    ACCEPT NUM2.
    
    COMPUTE SUMA = NUM1 + NUM2.
    
    DISPLAY "La suma es: " SUMA.
    
    STOP RUN.
`,3:`IDENTIFICATION DIVISION.
PROGRAM-ID. CONVERSION-C-F.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 GRADOS-C PIC 999V99.
01 GRADOS-F PIC 999V99.

PROCEDURE DIVISION.
    DISPLAY "Ingrese los grados Celsius: " WITH NO ADVANCING.
    ACCEPT GRADOS-C.
    
    COMPUTE GRADOS-F = (GRADOS-C * 9 / 5) + 32.
    
    DISPLAY "Los grados Fahrenheit son: " GRADOS-F.
    
    STOP RUN.
`,4:`IDENTIFICATION DIVISION.
PROGRAM-ID. NUMERO-PRIMO.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 NUMERO PIC 9(5).
01 ES-PRIMO PIC X(3).

PROCEDURE DIVISION.
    DISPLAY "Ingrese un número: " WITH NO ADVANCING.
    ACCEPT NUMERO.
    
    IF NUMERO <= 1
        MOVE "No" TO ES-PRIMO
    ELSE
        PERFORM ES-PRIMO-CHECK
    END-IF
    
    DISPLAY "El número" NUMERO "es primo: " ES-PRIMO.
    
    STOP RUN.
    
ES-PRIMO-CHECK.
    MOVE "Sí" TO ES-PRIMO
    DIVIDE NUMERO BY 2 GIVING NUMERO REMAINDER RESIDUO
    PERFORM VARYING I FROM 3 BY 2 UNTIL I * I > NUMERO
        IF NUMERO REM I = 0
            MOVE "No" TO ES-PRIMO
            EXIT PERFORM
        END-IF
    END-PERFORM.
`,5:`IDENTIFICATION DIVISION.
PROGRAM-ID. FACTORIAL.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 NUMERO-IN PIC 9(5).
01 NUMERO-OUT PIC 9(10).
01 FACTORIAL PIC 9(10) VALUE 1.

PROCEDURE DIVISION.
    DISPLAY "Ingrese un número para calcular su factorial: " WITH NO ADVANCING.
    ACCEPT NUMERO-IN.
    
    IF NUMERO-IN < 0
        DISPLAY "No se puede calcular el factorial de un número negativo."
    ELSE
        PERFORM CALCULAR-FACTORIAL
        DISPLAY "El factorial de" NUMERO-IN "es:" NUMERO-OUT
    END-IF
    
    STOP RUN.

CALCULAR-FACTORIAL.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > NUMERO-IN
        MULTIPLY FACTORIAL BY I GIVING FACTORIAL
    END-PERFORM.
    MOVE FACTORIAL TO NUMERO-OUT.
`,6:`IDENTIFICATION DIVISION.
PROGRAM-ID. SUMA-PARES.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 NUM-INICIAL PIC 9(5).
01 NUM-FINAL PIC 9(5).
01 SUMA-PARES PIC 9(10) VALUE 0.
01 CONTADOR PIC 9(5).

PROCEDURE DIVISION.
    DISPLAY "Ingrese el número inicial: " WITH NO ADVANCING.
    ACCEPT NUM-INICIAL.
    DISPLAY "Ingrese el número final: " WITH NO ADVANCING.
    ACCEPT NUM-FINAL.
    
    PERFORM CALCULAR-SUMA-PARES VARYING CONTADOR FROM NUM-INICIAL BY 1 UNTIL CONTADOR > NUM-FINAL
    
    DISPLAY "La suma de los números pares entre" NUM-INICIAL "y" NUM-FINAL "es:" SUMA-PARES
    
    STOP RUN.

CALCULAR-SUMA-PARES.
    IF CONTADOR MOD 2 = 0
        ADD CONTADOR TO SUMA-PARES
    END-IF.
`,7:`IDENTIFICATION DIVISION.
PROGRAM-ID. FIBONACCI.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 N PIC 9(5).
01 A PIC 9(10) VALUE 0.
01 B PIC 9(10) VALUE 1.
01 I PIC 9(5) VALUE 1.
01 TEMP PIC 9(10).

PROCEDURE DIVISION.
    DISPLAY "Ingrese el valor de n para generar la serie Fibonacci: " WITH NO ADVANCING.
    ACCEPT N.
    
    DISPLAY "Los primeros" N "números de la serie Fibonacci son:"
    
    PERFORM DISPLAY-FIBONACCI UNTIL I > N
    
    STOP RUN.

DISPLAY-FIBONACCI.
    DISPLAY A WITH NO ADVANCING
    IF I < N
        DISPLAY ", " WITH NO ADVANCING
    ELSE
        DISPLAY "." WITH NO ADVANCING
    END-IF
    
    COMPUTE TEMP = A + B
    MOVE B TO A
    MOVE TEMP TO B
    ADD 1 TO I.
`,8:`IDENTIFICATION DIVISION.
PROGRAM-ID. POTENCIA.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 BASE PIC 9(5).
01 EXPONENTE PIC 9(5).
01 RESULTADO PIC 9(10) VALUE 1.

PROCEDURE DIVISION.
    DISPLAY "Ingrese la base: " WITH NO ADVANCING.
    ACCEPT BASE.
    DISPLAY "Ingrese el exponente: " WITH NO ADVANCING.
    ACCEPT EXPONENTE.
    
    PERFORM CALCULAR-POTENCIA
    
    DISPLAY "El resultado de" BASE "elevado a la" EXPONENTE "es:" RESULTADO
    
    STOP RUN.

CALCULAR-POTENCIA.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > EXPONENTE
        MULTIPLY RESULTADO BY BASE GIVING RESULTADO
    END-PERFORM.
`,9:`IDENTIFICATION DIVISION.
PROGRAM-ID. ORDENAR-ARREGLO.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 ARREGLO OCCURS 10 TIMES.
    02 ELEMENTO PIC 9(5).
01 TEMP PIC 9(5).
01 I PIC 9(5).
01 J PIC 9(5).

PROCEDURE DIVISION.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > 10
        DISPLAY "Ingrese el elemento" I "del arreglo: " WITH NO ADVANCING
        ACCEPT ARREGLO(I)
    END-PERFORM
    
    PERFORM ORDENAR-ARREGLO
    
    DISPLAY "El arreglo ordenado es:"
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > 10
        DISPLAY ARREGLO(I)
    
    STOP RUN.

ORDENAR-ARREGLO.
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > 10
        PERFORM VARYING J FROM 1 BY 1 UNTIL J > 10 - I
            IF ARREGLO(J) > ARREGLO(J + 1)
                MOVE ARREGLO(J) TO TEMP
                MOVE ARREGLO(J + 1) TO ARREGLO(J)
                MOVE TEMP TO ARREGLO(J + 1)
            END-IF
        END-PERFORM
    END-PERFORM.
`,10:`IDENTIFICATION DIVISION.
PROGRAM-ID. CONTEO-VOCALES.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 CADENA-TEXTO PIC X(100).
01 VOCAL PIC X.
01 CONTADOR PIC 9(5) VALUE 0.
01 I PIC 9(5) VALUE 1.

PROCEDURE DIVISION.
    DISPLAY "Ingrese una cadena de texto: " WITH NO ADVANCING.
    ACCEPT CADENA-TEXTO
    
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > LENGTH OF CADENA-TEXTO
        MOVE SUBSTRING (I:1) OF CADENA-TEXTO TO VOCAL
        INSPECT VOCAL TALLYING CONTADOR FOR CHARACTERS("AEIOUaeiou")
    END-PERFORM
    
    DISPLAY "El número de vocales en la cadena es:" CONTADOR
    
    STOP RUN.
`,11:`IDENTIFICATION DIVISION.
PROGRAM-ID. PALINDROMO.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 PALABRA PIC X(100).
01 LONGITUD PIC 9(5).
01 I PIC 9(5).
01 ES-PALINDROMO PIC X(3).

PROCEDURE DIVISION.
    DISPLAY "Ingrese una palabra: " WITH NO ADVANCING.
    ACCEPT PALABRA
    MOVE FUNCTION LENGTH (PALABRA) TO LONGITUD
    MOVE "Sí" TO ES-PALINDROMO
    
    PERFORM VARYING I FROM 1 BY 1 UNTIL I * 2 > LONGITUD
        IF SUBSTRING(I:1) OF PALABRA NOT EQUAL SUBSTRING(LONGITUD - I + 1:1) OF PALABRA
            MOVE "No" TO ES-PALINDROMO
            EXIT PERFORM
        END-IF
    END-PERFORM
    
    DISPLAY "La palabra" PALABRA "es un palíndromo: " ES-PALINDROMO
    
    STOP RUN.
`,12:`IDENTIFICATION DIVISION.
PROGRAM-ID. CONTEO-PALABRAS.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 CADENA-TEXTO PIC X(100).
01 PALABRAS PIC 9(5) VALUE 0.
01 LONGITUD PIC 9(5).
01 I PIC 9(5).

PROCEDURE DIVISION.
    DISPLAY "Ingrese una cadena de texto: " WITH NO ADVANCING.
    ACCEPT CADENA-TEXTO
    MOVE FUNCTION LENGTH (CADENA-TEXTO) TO LONGITUD
    
    IF LONGITUD > 0
        ADD 1 TO PALABRAS
    END-IF
    
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > LONGITUD
        IF SUBSTRING(I:1) OF CADENA-TEXTO EQUAL " " AND SUBSTRING(I + 1:1) OF CADENA-TEXTO NOT EQUAL " "
            ADD 1 TO PALABRAS
        END-IF
    END-PERFORM
    
    DISPLAY "El número de palabras en la cadena es:" PALABRAS
    
    STOP RUN.
`,13:`IDENTIFICATION DIVISION.
PROGRAM-ID. CONVERSION-MONEDA.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 MONEDA-ORIGEN PIC X(3).
01 MONEDA-DESTINO PIC X(3).
01 TASA-CAMBIO PIC 9(5)V99.
01 CANTIDAD-DOLARES PIC 9(10).
01 CANTIDAD-DESTINO PIC 9(10).

PROCEDURE DIVISION.
    DISPLAY "Ingrese la moneda de origen (USD, EUR, JPY, etc.): " WITH NO ADVANCING.
    ACCEPT MONEDA-ORIGEN
    DISPLAY "Ingrese la moneda de destino: " WITH NO ADVANCING.
    ACCEPT MONEDA-DESTINO
    DISPLAY "Ingrese la cantidad en dólares: " WITH NO ADVANCING.
    ACCEPT CANTIDAD-DOLARES
    DISPLAY "Ingrese la tasa de cambio (1 USD a " MONEDA-DESTINO "): " WITH NO ADVANCING.
    ACCEPT TASA-CAMBIO
    
    COMPUTE CANTIDAD-DESTINO = CANTIDAD-DOLARES * TASA-CAMBIO
    
    DISPLAY "El equivalente en" MONEDA-DESTINO "es:" CANTIDAD-DESTINO
    
    STOP RUN.
`,14:`IDENTIFICATION DIVISION.
PROGRAM-ID. INTERES-COMPUES.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 CAPITAL-INICIAL PIC 9(10)V99.
01 TASA-INTERES PIC 9(5)V99.
01 PERIODOS PIC 9(5).
01 TIEMPO PIC 9(5).
01 MONTO-FINAL PIC 9(10)V99.

PROCEDURE DIVISION.
    DISPLAY "Ingrese el capital inicial: " WITH NO ADVANCING.
    ACCEPT CAPITAL-INICIAL.
    DISPLAY "Ingrese la tasa de interés anual (porcentaje): " WITH NO ADVANCING.
    ACCEPT TASA-INTERES.
    DISPLAY "Ingrese el número de períodos por año: " WITH NO ADVANCING.
    ACCEPT PERIODOS.
    DISPLAY "Ingrese el tiempo en años: " WITH NO ADVANCING.
    ACCEPT TIEMPO.
    
    COMPUTE MONTO-FINAL = CAPITAL-INICIAL * (1 + (TASA-INTERES / 100) / PERIODOS) ** (PERIODOS * TIEMPO)
    
    DISPLAY "El monto final es:" MONTO-FINAL
    
    STOP RUN.
`,15:`IDENTIFICATION DIVISION.
PROGRAM-ID. VALIDACION-NIF.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 NIF PIC X(9).
01 LETRA-NIF PIC X.
01 DIGITOS-NIF PIC 9(8).
01 ES-VALIDO-NIF PIC X(3).

PROCEDURE DIVISION.
    DISPLAY "Ingrese un número de NIF (letra y 8 dígitos): " WITH NO ADVANCING.
    ACCEPT NIF
    
    IF LENGTH OF NIF = 9
        MOVE SUBSTRING(1:1) OF NIF TO LETRA-NIF
        MOVE SUBSTRING(2:8) OF NIF TO DIGITOS-NIF
        
        IF FUNCTION NUMVAL(LETRA-NIF) > 0 AND FUNCTION NUMVAL(DIGITOS-NIF) > 0
            MOVE "Sí" TO ES-VALIDO-NIF
        ELSE
            MOVE "No" TO ES-VALIDO-NIF
        END-IF
    ELSE
        MOVE "No" TO ES-VALIDO-NIF
    END-IF
    
    DISPLAY "El NIF ingresado es válido: " ES-VALIDO-NIF
    
    STOP RUN.
`,16:`IDENTIFICATION DIVISION.
PROGRAM-ID. SUMA-DIGITOS.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 NUMERO-ENTERO PIC 9(10).
01 SUMA-DIGITOS PIC 9(10) VALUE 0.
01 DIGITO PIC 9.

PROCEDURE DIVISION.
    DISPLAY "Ingrese un número entero positivo: " WITH NO ADVANCING.
    ACCEPT NUMERO-ENTERO
    
    PERFORM CALCULAR-SUMA-DIGITOS
    
    DISPLAY "La suma de los dígitos es:" SUMA-DIGITOS
    
    STOP RUN.

CALCULAR-SUMA-DIGITOS.
    PERFORM VARYING DIGITO FROM 1 BY 1 UNTIL DIGITO > LENGTH OF NUMERO-ENTERO
        ADD FUNCTION NUMVAL(SUBSTRING(DIGITO:1) OF NUMERO-ENTERO) TO SUMA-DIGITOS
    END-PERFORM.
`,17:`IDENTIFICATION DIVISION.
PROGRAM-ID. MINIMO-COMUN-MULTIPLO.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 NUMERO-1 PIC 9(5).
01 NUMERO-2 PIC 9(5).
01 MCD PIC 9(5).
01 MCM PIC 9(10).

PROCEDURE DIVISION.
    DISPLAY "Ingrese el primer número: " WITH NO ADVANCING.
    ACCEPT NUMERO-1.
    DISPLAY "Ingrese el segundo número: " WITH NO ADVANCING.
    ACCEPT NUMERO-2.
    
    PERFORM CALCULAR-MCD
    
    COMPUTE MCM = (NUMERO-1 * NUMERO-2) / MCD
    
    DISPLAY "El Mínimo Común Múltiplo (MCM) es:" MCM
    
    STOP RUN.

CALCULAR-MCD.
    MOVE NUMERO-1 TO WS-NUM1
    MOVE NUMERO-2 TO WS-NUM2
    
    PERFORM CALCULAR-MCD-ALGORITMO UNTIL WS-NUM2 = 0
    
    MOVE WS-NUM1 TO MCD.

CALCULAR-MCD-ALGORITMO.
    DIVIDE WS-NUM1 BY WS-NUM2 GIVING WS-COCIENTE REMAINDER WS-RESTO
    MOVE WS-NUM2 TO WS-NUM1
    MOVE WS-RESTO TO WS-NUM2.
`,18:`IDENTIFICATION DIVISION.
PROGRAM-ID. NUMEROS-PERFECTOS.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 LIMITE-INFERIOR PIC 9(5).
01 LIMITE-SUPERIOR PIC 9(5).
01 NUMERO PIC 9(5).
01 SUMA-DIVISORES PIC 9(5).

PROCEDURE DIVISION.
    DISPLAY "Ingrese el límite inferior: " WITH NO ADVANCING.
    ACCEPT LIMITE-INFERIOR.
    DISPLAY "Ingrese el límite superior: " WITH NO ADVANCING.
    ACCEPT LIMITE-SUPERIOR.
    
    DISPLAY "Los números perfectos en el rango son:"
    
    PERFORM VARYING NUMERO FROM LIMITE-INFERIOR BY 1 UNTIL NUMERO <= LIMITE-SUPERIOR
        MOVE 0 TO SUMA-DIVISORES
        PERFORM CALCULAR-DIVISORES UNTIL SUMA-DIVISORES > NUMERO OR NUMERO - 1 = 0
        
        IF SUMA-DIVISORES = NUMERO
            DISPLAY NUMERO WITH NO ADVANCING
            IF NUMERO < LIMITE-SUPERIOR
                DISPLAY ", " WITH NO ADVANCING
            ELSE
                DISPLAY "." WITH NO ADVANCING
            END-IF
        END-IF
    END-PERFORM
    
    STOP RUN.

CALCULAR-DIVISORES.
    PERFORM VARYING DIVISOR FROM 1 BY 1 UNTIL DIVISOR < NUMERO
        IF NUMERO MOD DIVISOR = 0
            ADD DIVISOR TO SUMA-DIVISORES
        END-IF
    END-PERFORM.
`,19:`IDENTIFICATION DIVISION.
PROGRAM-ID. CONVERSION-F-C.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 GRADOS-F PIC 999V99.
01 GRADOS-C PIC 999V99.

PROCEDURE DIVISION.
    DISPLAY "Ingrese los grados Fahrenheit: " WITH NO ADVANCING.
    ACCEPT GRADOS-F.
    
    COMPUTE GRADOS-C = (GRADOS-F - 32) * 5 / 9.
    
    DISPLAY "Los grados Celsius son: " GRADOS-C.
    
    STOP RUN.
`,20:`IDENTIFICATION DIVISION.
PROGRAM-ID. CALCULO-INTERESES.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 CAPITAL-INICIAL PIC 9(10)V99.
01 TASA-INTERES PIC 9(5)V99.
01 TIEMPO-ANOS PIC 9(5).
01 INTERESES-GANADOS PIC 9(10)V99.

PROCEDURE DIVISION.
    DISPLAY "Ingrese el capital inicial: " WITH NO ADVANCING.
    ACCEPT CAPITAL-INICIAL.
    DISPLAY "Ingrese la tasa de interés anual (porcentaje): " WITH NO ADVANCING.
    ACCEPT TASA-INTERES.
    DISPLAY "Ingrese el tiempo en años: " WITH NO ADVANCING.
    ACCEPT TIEMPO-ANOS.
    
    COMPUTE INTERESES-GANADOS = CAPITAL-INICIAL * TASA-INTERES / 100 * TIEMPO-ANOS
    
    DISPLAY "Los intereses ganados son:" INTERESES-GANADOS
    
    STOP RUN.
`,21:`IDENTIFICATION DIVISION.
PROGRAM-ID. CALCULO-SALDO-BANCARIO.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 SALDO-INICIAL PIC 9(10)V99 VALUE 1000.00.
01 DEPOSITO PIC 9(10)V99.
01 RETIRO PIC 9(10)V99.
01 SALDO-FINAL PIC 9(10)V99.

PROCEDURE DIVISION.
    DISPLAY "Ingrese el monto a depositar: " WITH NO ADVANCING.
    ACCEPT DEPOSITO.
    DISPLAY "Ingrese el monto a retirar: " WITH NO ADVANCING.
    ACCEPT RETIRO.
    
    COMPUTE SALDO-FINAL = SALDO-INICIAL + DEPOSITO - RETIRO
    
    DISPLAY "El saldo final es:" SALDO-FINAL
    
    STOP RUN.
`,22:`IDENTIFICATION DIVISION.
PROGRAM-ID. CALCULO-PAGOS-PRESTAMO.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 CAPITAL-PRESTADO PIC 9(10)V99.
01 TASA-INTERES PIC 9(5)V99.
01 NUMERO-CUOTAS PIC 9(5).
01 PAGO-MENSUAL PIC 9(10)V99.

PROCEDURE DIVISION.
    DISPLAY "Ingrese el capital prestado: " WITH NO ADVANCING.
    ACCEPT CAPITAL-PRESTADO.
    DISPLAY "Ingrese la tasa de interés anual (porcentaje): " WITH NO ADVANCING.
    ACCEPT TASA-INTERES.
    DISPLAY "Ingrese el número de cuotas: " WITH NO ADVANCING.
    ACCEPT NUMERO-CUOTAS.
    
    MOVE TASA-INTERES / 100 / 12 TO TASA-MENSUAL
    COMPUTE PAGO-MENSUAL = CAPITAL-PRESTADO * TASA-MENSUAL
                         / (1 - (1 + TASA-MENSUAL) ** -NUMERO-CUOTAS)
    
    DISPLAY "El pago mensual es:" PAGO-MENSUAL
    
    STOP RUN.
`,23:`IDENTIFICATION DIVISION.
PROGRAM-ID. INTERESES-COMPUESTOS.

DATA DIVISION.
WORKING-STORAGE SECTION.
01 CAPITAL-INICIAL PIC 9(10)V99.
01 TASA-INTERES ANNUAL PIC 9(5)V99.
01 TIEMPO-ANOS PIC 9(5).
01 DEPOSITO-MENSUAL PIC 9(10)V99.
01 SALDO-FINAL PIC 9(10)V99.

PROCEDURE DIVISION.
    DISPLAY "Ingrese el capital inicial: " WITH NO ADVANCING.
    ACCEPT CAPITAL-INICIAL.
    DISPLAY "Ingrese la tasa de interés anual (porcentaje): " WITH NO ADVANCING.
    ACCEPT TASA-INTERES-ANUAL.
    DISPLAY "Ingrese el tiempo en años: " WITH NO ADVANCING.
    ACCEPT TIEMPO-ANOS.
    DISPLAY "Ingrese el depósito mensual (0 si no hay depósitos): " WITH NO ADVANCING.
    ACCEPT DEPOSITO-MENSUAL.
    
    MOVE TIEMPO-ANOS TO ANOS
    
    PERFORM CALCULAR-SALDO UNTIL ANOS = 0
    
    DISPLAY "El saldo final en" TIEMPO-ANOS "años es:" SALDO-FINAL
    
    STOP RUN.

CALCULAR-SALDO.
    COMPUTE SALDO-FINAL = CAPITAL-INICIAL * (1 + TASA-INTERES-ANUAL / 100) ** ANOS
    IF DEPOSITO-MENSUAL > 0
        COMPUTE SALDO-FINAL = 
        SALDO-FINAL + DEPOSITO-MENSUAL * 12 * ((1 + TASA-INTERES-ANUAL / 100) ** ANOS - 1) 
        / (TASA-INTERES-ANUAL / 100)
    END-IF
    
    SUBTRACT 1 FROM ANOS
END-PERFORM.
`,24:`IDENTIFICATION DIVISION.
PROGRAM-ID. GESTION-CUENTAS-BANCARIAS.

DATA DIVISION.
FILE SECTION.
01 CUENTAS-FILE.
   02 CUENTA-RECORD.
      03 NUMERO-CUENTA PIC 9(5).
      03 SALDO-CUENTA PIC 9(10)V99.

WORKING-STORAGE SECTION.
01 NUMERO-CUENTA-INGRESADO PIC 9(5).
01 SALDO-INGRESADO PIC 9(10)V99.
01 OPCION PIC 9.
01 WS-FIN-ARCHIVO PIC X(3) VALUE "NO".

PROCEDURE DIVISION.
    OPEN INPUT CUENTAS-FILE
    DISPLAY "Gestión de cuentas bancarias"
    PERFORM UNTIL WS-FIN-ARCHIVO = "SI"
        DISPLAY "1. Consultar saldo"
        DISPLAY "2. Realizar depósito"
        DISPLAY "3. Realizar retiro"
        DISPLAY "4. Salir"
        DISPLAY "Elija una opción: " WITH NO ADVANCING
        ACCEPT OPCION
    
        IF OPCION = 1
            PERFORM CONSULTAR-SALDO
        ELSE IF OPCION = 2
            PERFORM REALIZAR-DEPOSITO
        ELSE IF OPCION = 3
            PERFORM REALIZAR-RETIRO
        ELSE IF OPCION = 4
            MOVE "SI" TO WS-FIN-ARCHIVO
        ELSE
            DISPLAY "Opción no válida. Intente nuevamente."
        END-IF
    END-PERFORM
    
    CLOSE CUENTAS-FILE
    STOP RUN.

CONSULTAR-SALDO.
    DISPLAY "Ingrese el número de cuenta: " WITH NO ADVANCING
    ACCEPT NUMERO-CUENTA-INGRESADO
    READ CUENTAS-FILE
        AT END DISPLAY "Cuenta no encontrada."
    END-READ
    IF NUMERO-CUENTA = NUMERO-CUENTA-INGRESADO
        DISPLAY "Saldo actual: $" SALDO-CUENTA
    END-IF.

REALIZAR-DEPOSITO.
    DISPLAY "Ingrese el número de cuenta: " WITH NO ADVANCING
    ACCEPT NUMERO-CUENTA-INGRESADO
    READ CUENTAS-FILE
        AT END DISPLAY "Cuenta no encontrada."
    END-READ
    IF NUMERO-CUENTA = NUMERO-CUENTA-INGRESADO
        DISPLAY "Ingrese la cantidad a depositar: " WITH NO ADVANCING
        ACCEPT SALDO-INGRESADO
        COMPUTE SALDO-CUENTA = SALDO-CUENTA + SALDO-INGRESADO
        REWRITE CUENTA-RECORD
        DISPLAY "Depósito realizado. Nuevo saldo: $" SALDO-CUENTA
    END-IF.

REALIZAR-RETIRO.
    DISPLAY "Ingrese el número de cuenta: " WITH NO ADVANCING
    ACCEPT NUMERO-CUENTA-INGRESADO
    READ CUENTAS-FILE
        AT END DISPLAY "Cuenta no encontrada."
    END-READ
    IF NUMERO-CUENTA = NUMERO-CUENTA-INGRESADO
        DISPLAY "Ingrese la cantidad a retirar: " WITH NO ADVANCING
        ACCEPT SALDO-INGRESADO
        IF SALDO-INGRESADO > SALDO-CUENTA
            DISPLAY "Saldo insuficiente."
        ELSE
            COMPUTE SALDO-CUENTA = SALDO-CUENTA - SALDO-INGRESADO
            REWRITE CUENTA-RECORD
            DISPLAY "Retiro realizado. Nuevo saldo: $" SALDO-CUENTA
        END-IF
    END-IF.
`};return e.jsxs("article",{id:"ejercicios",children:[e.jsxs("div",{className:"h2-topBar",children:[e.jsx("h2",{children:"Ejercicios"}),e.jsx("a",{href:"#indice",children:"al Indice"})]}),e.jsx("h4",{children:"Ejercicio 1: Hola Mundo en COBOL"}),e.jsx("p",{children:'Escribe un programa COBOL que muestre "¡Hola, Mundo!" en la pantalla.'}),e.jsx("pre",{children:O[1]}),e.jsx("h4",{children:"Ejercicio 2: Cálculo de la Suma"}),e.jsx("p",{children:"Escribe un programa COBOL que calcule la suma de dos números ingresados por el usuario."}),e.jsx("pre",{children:O[2]}),e.jsx("h4",{children:"Ejercicio 3: Conversión de Grados Celsius a Fahrenheit"}),e.jsx("p",{children:"Escribe un programa COBOL que convierta grados Celsius a grados Fahrenheit. La fórmula es: F = (C * 9/5) + 32."}),e.jsx("pre",{children:O[3]}),e.jsx("h4",{children:"Ejercicio 4: Números Primos"}),e.jsx("p",{children:"Escribe un programa COBOL que determine si un número ingresado por el usuario es primo."}),e.jsx("pre",{children:O[4]}),e.jsx("h4",{children:"Ejercicio 5: Factorial de un Número"}),e.jsx("p",{children:"Escribe un programa COBOL que calcule el factorial de un número entero positivo ingresado por el usuario."}),e.jsx("pre",{children:O[5]}),e.jsx("h4",{children:"Ejercicio 6: Suma de Números Pares"}),e.jsx("p",{children:"Escribe un programa COBOL que calcule la suma de los números pares en un rango dado. El usuario debe ingresar un número inicial y un número final."}),e.jsx("pre",{children:O[6]}),e.jsx("h4",{children:"Ejercicio 7: Números de la Serie Fibonacci"}),e.jsx("p",{children:"Escribe un programa COBOL que genere y muestre los primeros n números de la serie Fibonacci, donde n es un número ingresado por el usuario."}),e.jsx("pre",{children:O[7]}),e.jsx("h4",{children:"Ejercicio 8: Cálculo de Potencia"}),e.jsx("p",{children:"Escribe un programa COBOL que calcule la potencia de un número ingresado por el usuario. El usuario debe ingresar la base y el exponente."}),e.jsx("pre",{children:O[8]}),e.jsx("h4",{children:"Ejercicio 9: Ordenar un Arreglo"}),e.jsx("p",{children:"Escribe un programa COBOL que ordene un arreglo de números en orden ascendente utilizando el algoritmo de burbuja."}),e.jsx("pre",{children:O[9]}),e.jsx("h4",{children:"Ejercicio 10: Conteo de Vocales"}),e.jsx("p",{children:"Escribe un programa COBOL que cuente el número de vocales en una cadena de texto ingresada por el usuario."}),e.jsx("pre",{children:O[10]}),e.jsx("h4",{children:"Ejercicio 11: Palíndromo"}),e.jsx("p",{children:"Escribe un programa COBOL que determine si una palabra ingresada por el usuario es un palíndromo (una palabra que se lee igual de izquierda a derecha y viceversa)."}),e.jsx("pre",{children:O[11]}),e.jsx("h4",{children:"Ejercicio 12: Conteo de Palabras"}),e.jsx("p",{children:"Escribe un programa COBOL que cuente el número de palabras en una cadena de texto ingresada por el usuario. Las palabras están separadas por espacios en blanco."}),e.jsx("pre",{children:O[12]}),e.jsx("h4",{children:"Ejercicio 13: Conversión de Moneda"}),e.jsx("p",{children:"Escribe un programa COBOL que convierta una cantidad en dólares a otra moneda ingresada por el usuario, utilizando una tasa de cambio dada."}),e.jsx("pre",{children:O[12]}),e.jsx("h4",{children:"Ejercicio 13: Conversión de Moneda"}),e.jsx("p",{children:"Escribe un programa COBOL que convierta una cantidad en dólares a otra moneda ingresada por el usuario, utilizando una tasa de cambio dada."}),e.jsx("pre",{children:O[13]}),e.jsx("h4",{children:"Ejercicio 14: Cálculo de Interés Compuesto"}),e.jsx("p",{children:"Escribe un programa COBOL que calcule el monto acumulado en una cuenta de ahorros después de un cierto número de años, utilizando la fórmula del interés compuesto: A = P(1 + r/n)^(nt)."}),e.jsx("pre",{children:O[14]}),e.jsx("h4",{children:"Ejercicio 15: Validación de NIF (Número de Identificación Fiscal)"}),e.jsx("p",{children:"Escribe un programa COBOL que valide un número de NIF español (Número de Identificación Fiscal), que consta de una letra y 8 dígitos."}),e.jsx("pre",{children:O[15]}),e.jsx("h4",{children:"Ejercicio 16: Suma de Dígitos"}),e.jsx("p",{children:"Escribe un programa COBOL que calcule la suma de los dígitos de un número entero positivo ingresado por el usuario."}),e.jsx("pre",{children:O[16]}),e.jsx("h4",{children:"Ejercicio 17: Cálculo del Mínimo Común Múltiplo (MCM)"}),e.jsx("p",{children:"Escribe un programa COBOL que calcule el Mínimo Común Múltiplo (MCM) de dos números ingresados por el usuario. Puedes utilizar el algoritmo basado en el máximo común divisor (MCD)."}),e.jsx("pre",{children:O[17]}),e.jsx("h4",{children:"Ejercicio 18: Números Perfectos"}),e.jsx("p",{children:"Escribe un programa COBOL que encuentre e imprima todos los números perfectos en un rango dado. Un número perfecto es igual a la suma de sus divisores propios."}),e.jsx("pre",{children:O[18]}),e.jsx("h4",{children:"Ejercicio 19: Conversión de Grados Fahrenheit a Celsius"}),e.jsx("p",{children:"Escribe un programa COBOL que convierta grados Fahrenheit a grados Celsius utilizando la fórmula: C = (F - 32) * 5/9."}),e.jsx("pre",{children:O[19]}),e.jsx("h4",{children:"Ejercicio 20: Cálculo de Intereses "}),e.jsx("p",{children:"Escribe un programa COBOL que calcule los intereses ganados en una cuenta de ahorros basados en el capital inicial, la tasa de interés anual y el tiempo en años."}),e.jsx("pre",{children:O[20]}),e.jsx("h4",{children:"Ejercicio 21: Cálculo de Saldo en Cuenta Bancaria"}),e.jsx("p",{children:"Escribe un programa COBOL que calcule el saldo en una cuenta bancaria después de realizar transacciones de depósitos y retiros."}),e.jsx("pre",{children:O[21]}),e.jsx("h4",{children:"Ejercicio 22: Cálculo de Pagos de Préstamos"}),e.jsx("p",{children:"Escribe un programa COBOL que calcule los pagos mensuales de un préstamo bancario basados en el capital prestado, la tasa de interés anual y el número de cuotas."}),e.jsx("pre",{children:O[22]}),e.jsx("h4",{children:"Ejercicio 23: Cálculo de Intereses Compuestos en una Cuenta de Ahorros"}),e.jsx("p",{children:"Escribe un programa COBOL que calcule el saldo en una cuenta de ahorros después de un período de tiempo, utilizando intereses compuestos y permitiendo depósitos periódicos."}),e.jsx("pre",{children:O[23]}),e.jsx("h4",{children:"Ejercicio 24: Gestión de Cuentas Bancarias"}),e.jsx("p",{children:"Escribe un programa COBOL que simule la gestión de cuentas bancarias, permitiendo realizar depósitos, retiros y consultas de saldo. Utiliza un archivo para mantener los datos de las cuentas."}),e.jsx("pre",{children:O[24]})]})};function fx(){return e.jsxs("div",{children:[e.jsx(Wu,{}),e.jsx(Xu,{}),e.jsx(Ju,{}),e.jsx(aj,{}),e.jsx(cj,{}),e.jsx(jj,{}),e.jsx(Oj,{}),e.jsx(Cj,{}),e.jsx(bj,{}),e.jsx(Vj,{}),e.jsx(wj,{}),e.jsx(Hj,{}),e.jsx(Qj,{}),e.jsx(ex,{}),e.jsx(sx,{}),e.jsx(cx,{}),e.jsx(jx,{}),e.jsx(mx,{}),e.jsx(hx,{}),e.jsx(px,{})]})}Hu.createRoot(document.getElementById("root")).render(e.jsx(Fu.StrictMode,{children:e.jsx(fx,{})}));
